// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "FFGroupID.pypp.hpp"
#include "boost/python.hpp"
#include "sireff_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/partialmolecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"
#include "SireMol/cgatomid.h"
#include "SireMol/cutgroupnum.h"
#include "SireMol/resnumatomid.h"
#include "SireMol/resid.h"
#include "SireMol/moleculeid.h"
#include "SireBase/property.h"

namespace bp = boost::python;

SireFF::FFGroupID __copy__(const SireFF::FFGroupID &other){ return SireFF::FFGroupID(other); }

#include "SireQt/qdatastream.hpp"

#include "SirePy/str.hpp"

void register_FFGroupID_class(){

    bp::class_< SireFF::FFGroupID >( "FFGroupID" )    
        .def( bp::init< >() )    
        .def( bp::init< SireFF::ForceFieldID, SireFF::FFBase::Group const & >(( bp::arg("ffid"), bp::arg("group") )) )    
        .def( bp::init< boost::tuples::tuple<SireFF::ForceFieldID, SireFF::FFBase::Group, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> const & >(( bp::arg("id") )) )    
        .def( 
            "ID"
            , (::SireFF::ForceFieldID ( ::SireFF::FFGroupID::* )(  ) const)( &::SireFF::FFGroupID::ID ) )    
        .def( 
            "group"
            , (::SireFF::FFBase::Group const & ( ::SireFF::FFGroupID::* )(  ) const)( &::SireFF::FFGroupID::group )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "toString"
            , (::QString ( ::SireFF::FFGroupID::* )(  ) const)( &::SireFF::FFGroupID::toString ) )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireFF::FFGroupID >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireFF::FFGroupID >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &SirePy::__str__< ::SireFF::FFGroupID > );

}
