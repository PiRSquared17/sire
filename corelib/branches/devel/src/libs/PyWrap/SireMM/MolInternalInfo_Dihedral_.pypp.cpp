// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "MolInternalInfo_Dihedral_.pypp.hpp"
#include "boost/python.hpp"
#include "siremm_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"

namespace bp = boost::python;

SireMM::MolInternalInfo<SireMol::Dihedral> __copy__(const SireMM::MolInternalInfo<SireMol::Dihedral> &other){ return SireMM::MolInternalInfo<SireMol::Dihedral>(other); }

const char* pvt_get_name(const SireMM::MolInternalInfo<SireMol::Dihedral>&){ return "SireMM::MolInternalInfo<SireMol::Dihedral>";}

void register_MolInternalInfo_Dihedral__class(){

    bp::class_< SireMM::MolInternalInfo<SireMol::Dihedral>, bp::bases< SireMM::detail::InternalInfo<SireMol::Dihedral> > >( "MolInternalInfo_Dihedral_" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMol::MoleculeInfo const & >(( bp::arg("molinfo") )) )    
        .def( 
            "addInternal"
            , (::SireMol::GroupIndexID ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::Dihedral const & ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::addInternal )
            , ( bp::arg("internal") ) )    
        .def( 
            "removeInterInternals"
            , (void ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::removeInterInternals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "removeInternal"
            , (void ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::Dihedral const & ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::removeInternal )
            , ( bp::arg("internal") ) )    
        .def( 
            "removeInternal"
            , (void ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::GroupIndexID const & ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::removeInternal )
            , ( bp::arg("id") ) )    
        .def( 
            "removeInternal"
            , (void ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::GroupID ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::removeInternal )
            , ( bp::arg("id") ) )    
        .def( 
            "removeInternals"
            , (void ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )(  ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::removeInternals ) )    
        .def( 
            "removeInternals"
            , (void ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::GroupID ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::removeInternals )
            , ( bp::arg("id") ) )    
        .def( 
            "removeInternals"
            , (void ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::removeInternals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "removeIntraInternals"
            , (void ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) )( &::SireMM::MolInternalInfo<SireMol::Dihedral>::removeIntraInternals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "residue"
            , (::SireMM::ResInternalInfo<SireMol::Dihedral> ( ::SireMM::MolInternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::MolInternalInfo<SireMol::Dihedral>::residue )
            , ( bp::arg("resnum") ) )    
        .def( "__copy__", &__copy__)    
        .def( "__str__", &pvt_get_name);

}
