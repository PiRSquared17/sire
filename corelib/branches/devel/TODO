
----------
SireStream
----------

(*) Write streaming code for implicitly shared objects (code
    that preserves implicit nature of object - see 
    ideas/qdatastream_implicit

-------
SireCAS
-------

(*) Sort out the code to allow generic-function of a generic-function,
    so that the function substitution works correctly!
    
(*) Write code to allow simplification and expansion of sums and products

(*) Take a stab at writing better integration code for sums and products

(*) Move code over to using SharedPolyPointer to hold ExBase objects


------
SireFF
------

(*) Remove components_ptr from all of the forcefields and instead
    use a QSharedDataPointer and accept the dynamic_cast whenever
    we return the components! This is to remove the stupid dynamic_cast
    and clone on *every* forcefield copy!
    
------
SireDB
------

(*) Improve parameter assignment code by adding a cache for 
    mol/res lookups (so don't lookup mol/res for every single
    atom in the molecule multiple times)
    
(*) Improve parameter assignment code by adding more of a cache
    for atom lookups, so don't lookup an atom more than once
    when assigning internals.
    
(*) Add a score to residue aliases so that they are correctly sorted,
    and can then add default residue backbones that are for residues
    that don't contain any bonding information.
    
(*) Check that can override a residue alias at assignment, e.g.
    user can specify the residue alias in the script, e.g. for 
    residues that are from a scoop that may be incorrectly aliased.

(*) Residue alias code is broken and needs fixing! Also all of the 
    databases need to be documented on a nice web page so that I 
    have more of a clue how they work and how they are inter-related.
    
(*) Dihedral-term code is not working and needs fixing - also need
    to automatically resolve functions and recursively fix function
    of a function

-------
SireVol
-------

(*) Update the CoordGroup classes to use placement new to allocate
    the data (so that the shared pointer is also the pointer to 
    the array of coordinates, thereby removing the need for pointer
    to a pointer lookups) - see techdocs/testplacementnew.cpp

-------
SireMol
-------

(*) Rewrite MoleculeInfo/ResidueInfo so that they are both views of MolInfoData, and
    so that they can support CutGroupNum

(*) Fix all of the broken parts of the code

(*) Add version numbers to MoleculeProperty so that code can
    see if a property has changed when the molecule's major version
    number has changed.

(*) Implement PartialMolecule fully, and better integrate
    PartialMolecule with the rest of the code

(*) Integrate ParameterTable into Molecule as a Molecule should contain all of 
    its own parameters... (though must do this taking into account things like
    dummy atoms (e.g. TIP4P) and QM/MM link atoms.

(*) Replace MoleculeVersion with SireBase::Version and use
    IDMajMinVersion for keeping track of IDs

(*) Rewrite EditMol to work with Properties

(*) Set ID/Version policy - currently;

         change ID if add/remove atoms,
                   if add/remove bonds,
                   if change element types

         change Major if add/remove properties
                         change properties

         change Minor if change coordinates
                             
-----
Spier
-----

(*) Fix Spier so that it works with self-managed molecules.

(*) Rewrite 3D code so that it is more memory efficient (use scaling for cones and
    spheres rather than cached display lists? Can I use non-uniform scaling on 
    a cylinder to make all of the cones that I need for the bonds?)

------
SirePy
------

(*) Write generic code that will allow streaming of polymorphic classes that
    are inherited by Python. Streamed class must contain Python code for the
    class, and de-streaming must parse the stored code...

-----------
SireCluster
-----------

(*) Write PoolProcessor and FFPoolProcessor that can distribute
    multiple forcefields over a worker pool of threads
