// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "_Maths_global_variables.pypp.hpp"
#include "boost/python.hpp"
#include "siremaths_headers.h"

namespace bp = boost::python;

void register_global_variables(){

    bp::scope().attr("default_maxdenom") = SireMaths::default_maxdenom;

    bp::scope().attr("e") = SireMaths::e;

    bp::scope().attr("euler") = SireMaths::euler;

    bp::scope().attr("huge") = SireMaths::huge;

    bp::scope().attr("large") = SireMaths::large;

    bp::scope().attr("largest") = SireMaths::largest;

    bp::scope().attr("largest_int") = SireMaths::largest_int;

    bp::scope().attr("ln_pi") = SireMaths::ln_pi;

    bp::scope().attr("ln_ten") = SireMaths::ln_ten;

    bp::scope().attr("ln_two") = SireMaths::ln_two;

    bp::scope().attr("log10_e") = SireMaths::log10_e;

    bp::scope().attr("log2_e") = SireMaths::log2_e;

    bp::scope().attr("one_over_pi") = SireMaths::one_over_pi;

    bp::scope().attr("pi") = SireMaths::pi;

    bp::scope().attr("pi_4") = SireMaths::pi_4;

    bp::scope().attr("pi_over_two") = SireMaths::pi_over_two;

    bp::scope().attr("small") = SireMaths::small;

    bp::scope().attr("smallest") = SireMaths::smallest;

    bp::scope().attr("smallest_int") = SireMaths::smallest_int;

    bp::scope().attr("sqrt_half") = SireMaths::sqrt_half;

    bp::scope().attr("sqrt_three") = SireMaths::sqrt_three;

    bp::scope().attr("sqrt_two") = SireMaths::sqrt_two;

    bp::scope().attr("sqrtpi") = SireMaths::sqrtpi;

    bp::scope().attr("tiny") = SireMaths::tiny;

    bp::scope().attr("two_over_pi") = SireMaths::two_over_pi;

    bp::scope().attr("two_pi") = SireMaths::two_pi;

    bp::scope().attr("two_sqrtpi") = SireMaths::two_sqrtpi;

}
