// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "RDF.pypp.hpp"
#include "boost/python.hpp"
#include "siresystem_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireFF/ffgroupid.h"

namespace bp = boost::python;

SireSystem::RDF __copy__(const SireSystem::RDF &other){ return SireSystem::RDF(other); }

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireSystem::RDF&){ return "SireSystem::RDF";}

void register_RDF_class(){

    bp::class_< SireSystem::RDF >( "RDF", bp::init< bp::optional< double, double, uint > >(( bp::arg("min")=0, bp::arg("max")=10, bp::arg("nbins")=(unsigned int)(100) )) )    
        .def( 
            "changeResolution"
            , (::SireSystem::RDF ( ::SireSystem::RDF::* )( ::uint ) const)( &::SireSystem::RDF::changeResolution )
            , ( bp::arg("new_nbins") ) )    
        .def( 
            "clear"
            , (void ( ::SireSystem::RDF::* )(  ) )( &::SireSystem::RDF::clear ) )    
        .def( 
            "maximumDistance"
            , (double ( ::SireSystem::RDF::* )(  ) const)( &::SireSystem::RDF::maximumDistance ) )    
        .def( 
            "minimumDistance"
            , (double ( ::SireSystem::RDF::* )(  ) const)( &::SireSystem::RDF::minimumDistance ) )    
        .def( 
            "nBins"
            , (int ( ::SireSystem::RDF::* )(  ) const)( &::SireSystem::RDF::nBins ) )    
        .def( 
            "nValues"
            , (int ( ::SireSystem::RDF::* )(  ) const)( &::SireSystem::RDF::nValues ) )    
        .def( 
            "normalise"
            , (::QVector<boost::tuples::tuple<double, double, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > ( ::SireSystem::RDF::* )(  ) const)( &::SireSystem::RDF::normalise ) )    
        .def( bp::self != bp::self )    
        .def( bp::self + bp::self )    
        .def( bp::self + bp::other< double >() )    
        .def( bp::self += bp::self )    
        .def( bp::self += bp::other< double >() )    
        .def( bp::self == bp::self )    
        .def( 
            "rescale"
            , (::SireSystem::RDF ( ::SireSystem::RDF::* )( double,double,::uint ) const)( &::SireSystem::RDF::rescale )
            , ( bp::arg("new_min"), bp::arg("new_max"), bp::arg("new_nbins") ) )    
        .def( 
            "rescale"
            , (::SireSystem::RDF ( ::SireSystem::RDF::* )( ::SireSystem::RDF const & ) const)( &::SireSystem::RDF::rescale )
            , ( bp::arg("other") ) )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireSystem::RDF >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireSystem::RDF >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
