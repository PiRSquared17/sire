// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "FFCalculator.pypp.hpp"
#include "boost/python.hpp"
#include "sireff_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/partialmolecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"
#include "SireMol/cgatomid.h"
#include "SireMol/cutgroupnum.h"
#include "SireMol/resnumatomid.h"
#include "SireMol/resid.h"
#include "SireMol/moleculeid.h"
#include "SireBase/property.h"

namespace bp = boost::python;

const char* pvt_get_name(const SireFF::FFCalculator&){ return "SireFF::FFCalculator";}

void register_FFCalculator_class(){

    bp::class_< SireFF::FFCalculator, bp::bases< SireFF::FFLocalCalculator >, boost::noncopyable >( "FFCalculator" )    
        .def( 
            "calculateEnergy"
            , (void ( ::SireFF::FFCalculator::* )(  ) )( &::SireFF::FFCalculator::calculateEnergy ) )    
        .def( 
            "forceField"
            , (::SireFF::ForceField ( ::SireFF::FFCalculator::* )(  ) )( &::SireFF::FFCalculator::forceField ) )    
        .def( 
            "getEnergies"
            , (double ( ::SireFF::FFCalculator::* )( ::SireCAS::Values & ) )( &::SireFF::FFCalculator::getEnergies )
            , ( bp::arg("values") ) )    
        .def( 
            "setForceField"
            , (bool ( ::SireFF::FFCalculator::* )( ::SireFF::ForceField const & ) )( &::SireFF::FFCalculator::setForceField )
            , ( bp::arg("forcefield") ) )    
        .def( "__str__", &pvt_get_name);

}
