// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "_CAS_free_functions.pypp.hpp"
#include "boost/python.hpp"
#include "sirecas_headers.h"

namespace bp = boost::python;

void register_free_functions(){

    { //::SireCAS::cbrt
    
        typedef ::SireCAS::Expression ( *cbrt_function_type )( ::SireCAS::Expression const & );
        
        bp::def( 
            "cbrt"
            , cbrt_function_type( &::SireCAS::cbrt )
            , ( bp::arg("ex0") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::Expression const &,::SireMaths::Complex const & );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("ex0"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::Expression const &,::SireCAS::Expression const & );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("ex0"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::Expression const &,double );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("ex0"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::Expression const &,::SireMaths::Rational const & );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("ex0"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::Expression const &,int );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("ex0"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::ExBase const &,::SireCAS::ExBase const & );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("base"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::ExBase const &,::SireCAS::Expression const & );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("base"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::ExBase const &,::SireMaths::Complex const & );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("base"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::ExBase const &,double );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("base"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::ExBase const &,::SireMaths::Rational const & );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("base"), bp::arg("n") ) );
    
    }

    { //::SireCAS::pow
    
        typedef ::SireCAS::Expression ( *pow_function_type )( ::SireCAS::ExBase const &,int );
        
        bp::def( 
            "pow"
            , pow_function_type( &::SireCAS::pow )
            , ( bp::arg("base"), bp::arg("n") ) );
    
    }

    { //::SireCAS::root
    
        typedef ::SireCAS::Expression ( *root_function_type )( ::SireCAS::Expression const &,int );
        
        bp::def( 
            "root"
            , root_function_type( &::SireCAS::root )
            , ( bp::arg("ex0"), bp::arg("n") ) );
    
    }

    { //::SireCAS::sqrt
    
        typedef ::SireCAS::Expression ( *sqrt_function_type )( ::SireCAS::Expression const & );
        
        bp::def( 
            "sqrt"
            , sqrt_function_type( &::SireCAS::sqrt )
            , ( bp::arg("ex0") ) );
    
    }

}
