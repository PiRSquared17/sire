// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "MolproSession.pypp.hpp"
#include "boost/python.hpp"
#include "squire_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"

namespace bp = boost::python;

const char* pvt_get_name(const Squire::MolproSession&){ return "Squire::MolproSession";}

void register_MolproSession_class(){

    bp::class_< Squire::MolproSession, boost::noncopyable >( "MolproSession", bp::no_init )    
        .def( 
            "assertCompatibleWith"
            , (void ( ::Squire::MolproSession::* )( ::Squire::MolproFF const & ) const)( &::Squire::MolproSession::assertCompatibleWith )
            , ( bp::arg("molproff") ) )    
        .def( 
            "assertMolproIsRunning"
            , (void ( ::Squire::MolproSession::* )(  ) const)( &::Squire::MolproSession::assertMolproIsRunning ) )    
        .def( 
            "calculateEnergy"
            , (double ( ::Squire::MolproSession::* )(  ) )( &::Squire::MolproSession::calculateEnergy ) )    
        .def( 
            "getCurrentEnergy"
            , (double ( ::Squire::MolproSession::* )(  ) )( &::Squire::MolproSession::getCurrentEnergy ) )    
        .def( 
            "incompatibleWith"
            , (bool ( ::Squire::MolproSession::* )( ::Squire::MolproFF const & ) const)( &::Squire::MolproSession::incompatibleWith )
            , ( bp::arg("molproff") ) )    
        .def( 
            "setArrays"
            , (void ( ::Squire::MolproSession::* )( ::QVector<double> const &,::QVector<double> const & ) )( &::Squire::MolproSession::setArrays )
            , ( bp::arg("qm_array"), bp::arg("mm_array") ) )    
        .def( "__str__", &pvt_get_name);

}
