// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "MolMappingFunctionBase.pypp.hpp"
#include "boost/python.hpp"
#include "siremove_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/moleculegroup.h"
#include "SireSystem/simsystem.h"

namespace bp = boost::python;

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMove::MolMappingFunctionBase&){ return "SireMove::MolMappingFunctionBase";}

void register_MolMappingFunctionBase_class(){

    bp::class_< SireMove::MolMappingFunctionBase, boost::noncopyable >( "MolMappingFunctionBase", bp::no_init )    
        .def( 
            "assertCompatibleWith"
            , (void ( ::SireMove::MolMappingFunctionBase::* )( ::SireSystem::QuerySystem & ) const)( &::SireMove::MolMappingFunctionBase::assertCompatibleWith )
            , ( bp::arg("system") ) )    
        .def( 
            "map"
            , (::SireMol::Molecules ( ::SireMove::MolMappingFunctionBase::* )( ::SireSystem::QuerySystem &,::SireVol::Space const & ) const)( &::SireMove::MolMappingFunctionBase::map )
            , ( bp::arg("system"), bp::arg("new_space") ) )    
        .def( 
            "__call__"
            , (::SireMol::Molecules ( ::SireMove::MolMappingFunctionBase::* )( ::SireSystem::QuerySystem &,::SireVol::Space const & ) const)( &::SireMove::MolMappingFunctionBase::operator() )
            , ( bp::arg("system"), bp::arg("new_space") ) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireMove::MolMappingFunctionBase::typeName ) )    
        .def( 
            "what"
            , (char const * ( ::SireMove::MolMappingFunctionBase::* )(  ) const)( &::SireMove::MolMappingFunctionBase::what ) )    
        .staticmethod( "typeName" )    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMove::MolMappingFunctionBase >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMove::MolMappingFunctionBase >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
