// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Processor.pypp.hpp"
#include "boost/python.hpp"
#include "sirecluster_headers.h"

namespace bp = boost::python;

const char* pvt_get_name(const SireCluster::Processor&){ return "SireCluster::Processor";}

void register_Processor_class(){

    bp::class_< SireCluster::Processor, boost::noncopyable >( "Processor", bp::no_init )    
        .def( 
            "activate"
            , (::boost::shared_ptr<SireCluster::WorkerBase> ( ::SireCluster::Processor::* )(  ) )( &::SireCluster::Processor::activate ) )    
        .def( 
            "isActive"
            , (bool ( ::SireCluster::Processor::* )(  ) const)( &::SireCluster::Processor::isActive ) )    
        .def( 
            "name"
            , (::QString ( ::SireCluster::Processor::* )(  ) const)( &::SireCluster::Processor::name ) )    
        .def( 
            "setName"
            , (void ( ::SireCluster::Processor::* )( ::QString const & ) )( &::SireCluster::Processor::setName )
            , ( bp::arg("newname") ) )    
        .def( 
            "what"
            , (char const * ( ::SireCluster::Processor::* )(  ) const)( &::SireCluster::Processor::what ) )    
        .def( "__str__", &pvt_get_name);

}
