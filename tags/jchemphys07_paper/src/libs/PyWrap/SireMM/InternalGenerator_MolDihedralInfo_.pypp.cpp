// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "InternalGenerator_MolDihedralInfo_.pypp.hpp"
#include "boost/python.hpp"
#include "siremm_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"

namespace bp = boost::python;

const char* pvt_get_name(const SireMM::InternalGenerator<SireMM::MolDihedralInfo>&){ return "SireMM::InternalGenerator<SireMM::MolDihedralInfo>";}

void register_InternalGenerator_MolDihedralInfo__class(){

    bp::class_< SireMM::InternalGenerator<SireMM::MolDihedralInfo>, boost::noncopyable >( "InternalGenerator_MolDihedralInfo_", bp::no_init )    
        .def( 
            "generate"
            , (void ( ::SireMM::InternalGenerator<SireMM::MolDihedralInfo>::* )( ::SireMol::Molecule const &,::SireMM::MolDihedralInfo & ) const)( &::SireMM::InternalGenerator<SireMM::MolDihedralInfo>::generate )
            , ( bp::arg("molecule"), bp::arg("internalinfo") ) )    
        .def( 
            "generate"
            , (::SireMM::MolDihedralInfo ( ::SireMM::InternalGenerator<SireMM::MolDihedralInfo>::* )( ::SireMol::Molecule const & ) const)( &::SireMM::InternalGenerator<SireMM::MolDihedralInfo>::generate )
            , ( bp::arg("molecule") ) )    
        .def( 
            "what"
            , (char const * ( ::SireMM::InternalGenerator<SireMM::MolDihedralInfo>::* )(  ) const)( &::SireMM::InternalGenerator<SireMM::MolDihedralInfo>::what ) )    
        .def( "__str__", &pvt_get_name);

}
