// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "MatchAtomType.pypp.hpp"
#include "boost/python.hpp"
#include "siredb_headers.h"
#include "SireCAS/function.h"
#include "SireCAS/expression.h"

namespace bp = boost::python;

SireDB::MatchAtomType __copy__(const SireDB::MatchAtomType &other){ return SireDB::MatchAtomType(other); }

#include "SirePy/str.hpp"

void register_MatchAtomType_class(){

    bp::class_< SireDB::MatchAtomType, bp::bases< SireDB::MatchData > >( "MatchAtomType" )    
        .def( bp::init< >() )    
        .def( bp::init< QString const &, SireMol::Element const & >(( bp::arg("id"), bp::arg("element") )) )    
        .def( bp::init< SireDB::AtomType const & >(( bp::arg("atomtype") )) )    
        .def( bp::init< SireMol::Element const & >(( bp::arg("element") )) )    
        .def( 
            "addMirroredTo"
            , (::SireDB::RelateID ( ::SireDB::MatchAtomType::* )( ::SireDB::ParameterDB &,::uint ) const)( &::SireDB::MatchAtomType::addMirroredTo )
            , ( bp::arg("db"), bp::arg("n") ) )    
        .def( 
            "addTo"
            , (::SireDB::RelateID ( ::SireDB::MatchAtomType::* )( ::SireDB::ParameterDB &,::uint ) const)( &::SireDB::MatchAtomType::addTo )
            , ( bp::arg("db"), bp::arg("n") ) )    
        .def( 
            "element"
            , (::SireMol::Element const & ( ::SireDB::MatchAtomType::* )(  ) const)( &::SireDB::MatchAtomType::element )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "isEmpty"
            , (bool ( ::SireDB::MatchAtomType::* )(  ) const)( &::SireDB::MatchAtomType::isEmpty ) )    
        .def( 
            "isWild"
            , (bool ( ::SireDB::MatchAtomType::* )(  ) const)( &::SireDB::MatchAtomType::isWild ) )    
        .def( 
            "isWildElement"
            , (bool ( ::SireDB::MatchAtomType::* )(  ) const)( &::SireDB::MatchAtomType::isWildElement ) )    
        .def( 
            "isWildType"
            , (bool ( ::SireDB::MatchAtomType::* )(  ) const)( &::SireDB::MatchAtomType::isWildType ) )    
        .def( 
            "nMatches"
            , (int ( ::SireDB::MatchAtomType::* )(  ) const)( &::SireDB::MatchAtomType::nMatches ) )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "setElement"
            , (void ( ::SireDB::MatchAtomType::* )( ::SireMol::Element const & ) )( &::SireDB::MatchAtomType::setElement )
            , ( bp::arg("element") ) )    
        .def( 
            "setType"
            , (void ( ::SireDB::MatchAtomType::* )( ::QString const & ) )( &::SireDB::MatchAtomType::setType )
            , ( bp::arg("atomtype") ) )    
        .def( 
            "setType"
            , (void ( ::SireDB::MatchAtomType::* )( ::SireDB::AtomType const & ) )( &::SireDB::MatchAtomType::setType )
            , ( bp::arg("atomtype") ) )    
        .def( 
            "toString"
            , (::QString ( ::SireDB::MatchAtomType::* )(  ) const)( &::SireDB::MatchAtomType::toString ) )    
        .def( 
            "toString"
            , (::QString ( ::SireDB::MatchAtomType::* )( ::uint ) const)( &::SireDB::MatchAtomType::toString )
            , ( bp::arg("atm") ) )    
        .def( 
            "type"
            , (::SireDB::AtomType const & ( ::SireDB::MatchAtomType::* )(  ) const)( &::SireDB::MatchAtomType::type )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( "__copy__", &__copy__)    
        .def( "__str__", &SirePy::__str__< ::SireDB::MatchAtomType > );

}
