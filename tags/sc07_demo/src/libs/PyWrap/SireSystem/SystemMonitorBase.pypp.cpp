// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "SystemMonitorBase.pypp.hpp"
#include "boost/python.hpp"
#include "siresystem_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireFF/ffgroupid.h"

namespace bp = boost::python;

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireSystem::SystemMonitorBase&){ return "SireSystem::SystemMonitorBase";}

void register_SystemMonitorBase_class(){

    bp::class_< SireSystem::SystemMonitorBase, bp::bases< SireBase::PropertyBase >, boost::noncopyable >( "SystemMonitorBase", bp::no_init )    
        .def( 
            "assertCompatibleWith"
            , (void ( ::SireSystem::SystemMonitorBase::* )( ::SireSystem::QuerySystem const & ) const)( &::SireSystem::SystemMonitorBase::assertCompatibleWith )
            , ( bp::arg("system") ) )    
        .def( 
            "clear"
            , (void ( ::SireSystem::SystemMonitorBase::* )(  ) )( &::SireSystem::SystemMonitorBase::clear ) )    
        .def( 
            "monitor"
            , (void ( ::SireSystem::SystemMonitorBase::* )( ::SireSystem::QuerySystem & ) )( &::SireSystem::SystemMonitorBase::monitor )
            , ( bp::arg("system") ) )    
        .def( 
            "nUpdates"
            , (::quint64 ( ::SireSystem::SystemMonitorBase::* )(  ) const)( &::SireSystem::SystemMonitorBase::nUpdates ) )    
        .def( 
            "value"
            , (double ( ::SireSystem::SystemMonitorBase::* )(  ) const)( &::SireSystem::SystemMonitorBase::value ) )    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireSystem::SystemMonitorBase >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireSystem::SystemMonitorBase >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
