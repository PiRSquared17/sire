// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "WorkerBase.pypp.hpp"
#include "boost/python.hpp"
#include "sirecluster_headers.h"

namespace bp = boost::python;

const char* pvt_get_name(const SireCluster::WorkerBase&){ return "SireCluster::WorkerBase";}

void register_WorkerBase_class(){

    { //::SireCluster::WorkerBase
        typedef bp::class_< SireCluster::WorkerBase, boost::noncopyable > WorkerBase_exposer_t;
        WorkerBase_exposer_t WorkerBase_exposer = WorkerBase_exposer_t( "WorkerBase" );
        bp::scope WorkerBase_scope( WorkerBase_exposer );
        bp::register_ptr_to_python< boost::shared_ptr< SireCluster::WorkerBase > >();
        bp::implicitly_convertible< boost::shared_ptr< SireCluster::WorkerBase >, boost::shared_ptr< boost::noncopyable_::noncopyable > >();
        bp::implicitly_convertible< boost::shared_ptr< SireCluster::ThreadWorker >, boost::shared_ptr< SireCluster::WorkerBase > >();
        WorkerBase_exposer.def( "__str__", &pvt_get_name);
    }

}
