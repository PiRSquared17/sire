// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "assign_internals_MolDihedralInfo_.pypp.hpp"
#include "boost/python.hpp"
#include "siremm_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"

namespace bp = boost::python;

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMM::assign_internals<SireMM::MolDihedralInfo>&){ return "SireMM::assign_internals<SireMM::MolDihedralInfo>";}

void register_assign_internals_MolDihedralInfo__class(){

    bp::class_< SireMM::assign_internals<SireMM::MolDihedralInfo>, bp::bases< SireDB::AssignBase >, boost::noncopyable >( "assign_internals_MolDihedralInfo_", bp::no_init )    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMM::assign_internals<SireMM::MolDihedralInfo> >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMM::assign_internals<SireMM::MolDihedralInfo> >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
