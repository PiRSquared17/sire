// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "ForceFieldsBase.pypp.hpp"
#include "boost/python.hpp"
#include "sireff_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"
#include "SireMol/cgatomid.h"
#include "SireMol/cutgroupnum.h"
#include "SireMol/resnumatomid.h"
#include "SireMol/resid.h"
#include "SireMol/moleculeid.h"

namespace bp = boost::python;

void register_ForceFieldsBase_class(){

    bp::class_< SireFF::ForceFieldsBase, boost::noncopyable >( "ForceFieldsBase", bp::no_init )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const &,::QSet<SireFF::ForceFieldID> const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("molecule"), bp::arg("ffids"), bp::arg("map") ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Residue const &,::QSet<SireFF::ForceFieldID> const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("residue"), bp::arg("ffids"), bp::arg("map") ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::NewAtom const &,::QSet<SireFF::ForceFieldID> const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("atom"), bp::arg("ffids"), bp::arg("map") ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const &,::SireFF::ForceFieldID,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("molecule"), bp::arg("ffid"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Residue const &,::SireFF::ForceFieldID,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("residue"), bp::arg("ffid"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::NewAtom const &,::SireFF::ForceFieldID,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("atom"), bp::arg("ffid"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const &,::QString const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("molecule"), bp::arg("ffname"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Residue const &,::QString const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("residue"), bp::arg("ffname"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::NewAtom const &,::QString const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFieldsBase::add )
            , ( bp::arg("atom"), bp::arg("ffname"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "change"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const & ) )( &::SireFF::ForceFieldsBase::change )
            , ( bp::arg("molecule") ) )    
        .def( 
            "change"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Residue const & ) )( &::SireFF::ForceFieldsBase::change )
            , ( bp::arg("residue") ) )    
        .def( 
            "change"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::NewAtom const & ) )( &::SireFF::ForceFieldsBase::change )
            , ( bp::arg("atom") ) )    
        .def( 
            "change"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::QHash<SireMol::MoleculeID, SireMol::Molecule> const & ) )( &::SireFF::ForceFieldsBase::change )
            , ( bp::arg("molecules") ) )    
        .def( 
            "contains"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireCAS::Function const & ) const)( &::SireFF::ForceFieldsBase::contains )
            , ( bp::arg("function") ) )    
        .def( 
            "contains"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::MoleculeID ) const)( &::SireFF::ForceFieldsBase::contains )
            , ( bp::arg("molid") ) )    
        .def( 
            "contains"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const & ) const)( &::SireFF::ForceFieldsBase::contains )
            , ( bp::arg("molecule") ) )    
        .def( 
            "energy"
            , (double ( ::SireFF::ForceFieldsBase::* )( ::SireFF::FFExpression const & ) )( &::SireFF::ForceFieldsBase::energy )
            , ( bp::arg("expression") ) )    
        .def( 
            "energy"
            , (double ( ::SireFF::ForceFieldsBase::* )( ::SireCAS::Function const & ) )( &::SireFF::ForceFieldsBase::energy )
            , ( bp::arg("component") ) )    
        .def( 
            "energy"
            , (double ( ::SireFF::ForceFieldsBase::* )( ::SireFF::FFComponent const & ) )( &::SireFF::ForceFieldsBase::energy )
            , ( bp::arg("component") ) )    
        .def( 
            "energy"
            , (double ( ::SireFF::ForceFieldsBase::* )(  ) )( &::SireFF::ForceFieldsBase::energy ) )    
        .def( 
            "expression"
            , (::SireFF::FFExpression const & ( ::SireFF::ForceFieldsBase::* )( ::SireCAS::Function const & ) const)( &::SireFF::ForceFieldsBase::expression )
            , ( bp::arg("function") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "expressions"
            , (::QVector<SireFF::FFExpression> ( ::SireFF::ForceFieldsBase::* )( ::QSet<SireCAS::Function> const & ) const)( &::SireFF::ForceFieldsBase::expressions )
            , ( bp::arg("functions") ) )    
        .def( 
            "expressions"
            , (::QVector<SireFF::FFExpression> ( ::SireFF::ForceFieldsBase::* )(  ) const)( &::SireFF::ForceFieldsBase::expressions ) )    
        .def( 
            "forceFieldIDs"
            , (::QSet<SireFF::ForceFieldID> ( ::SireFF::ForceFieldsBase::* )(  ) const)( &::SireFF::ForceFieldsBase::forceFieldIDs ) )    
        .def( 
            "forceFields"
            , (::QHash<SireFF::ForceFieldID, SireFF::ForceField> ( ::SireFF::ForceFieldsBase::* )(  ) const)( &::SireFF::ForceFieldsBase::forceFields ) )    
        .def( 
            "forceFieldsContaining"
            , (::QSet<SireFF::ForceFieldID> ( ::SireFF::ForceFieldsBase::* )( ::SireMol::MoleculeID ) const)( &::SireFF::ForceFieldsBase::forceFieldsContaining )
            , ( bp::arg("molid") ) )    
        .def( 
            "forceFieldsContaining"
            , (::QSet<SireFF::ForceFieldID> ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const & ) const)( &::SireFF::ForceFieldsBase::forceFieldsContaining )
            , ( bp::arg("molecule") ) )    
        .def( 
            "majorUpdate"
            , (void ( ::SireFF::ForceFieldsBase::* )( ::SireFF::ForceFields const & ) )( &::SireFF::ForceFieldsBase::majorUpdate )
            , ( bp::arg("forcefields") ) )    
        .def( 
            "minorUpdate"
            , (void ( ::SireFF::ForceFieldsBase::* )( ::SireFF::ForceFields const & ) )( &::SireFF::ForceFieldsBase::minorUpdate )
            , ( bp::arg("forcefields") ) )    
        .def( 
            "moleculeIDs"
            , (::QSet<SireMol::MoleculeID> ( ::SireFF::ForceFieldsBase::* )(  ) const)( &::SireFF::ForceFieldsBase::moleculeIDs ) )    
        .def( 
            "nForceFields"
            , (int ( ::SireFF::ForceFieldsBase::* )(  ) const)( &::SireFF::ForceFieldsBase::nForceFields ) )    
        .def( 
            "nMolecules"
            , (int ( ::SireFF::ForceFieldsBase::* )(  ) const)( &::SireFF::ForceFieldsBase::nMolecules ) )    
        .def( 
            "parameters"
            , (::SireCAS::Values const & ( ::SireFF::ForceFieldsBase::* )(  ) const)( &::SireFF::ForceFieldsBase::parameters )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const & ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("molecule") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const &,::QSet<SireFF::ForceFieldID> const & ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("molecule"), bp::arg("ffids") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Residue const &,::QSet<SireFF::ForceFieldID> const & ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("residue"), bp::arg("ffids") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::NewAtom const &,::QSet<SireFF::ForceFieldID> const & ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("atom"), bp::arg("ffids") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const &,::SireFF::ForceFieldID ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("molecule"), bp::arg("ffid") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Residue const &,::SireFF::ForceFieldID ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("residue"), bp::arg("ffid") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::NewAtom const &,::SireFF::ForceFieldID ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("atom"), bp::arg("ffid") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Molecule const &,::QString const & ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("molecule"), bp::arg("ffname") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::Residue const &,::QString const & ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("residue"), bp::arg("ffname") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFieldsBase::* )( ::SireMol::NewAtom const &,::QString const & ) )( &::SireFF::ForceFieldsBase::remove )
            , ( bp::arg("atom"), bp::arg("ffname") ) )    
        .def( 
            "setEqualTo"
            , (void ( ::SireFF::ForceFieldsBase::* )( ::SireFF::ForceFields const & ) )( &::SireFF::ForceFieldsBase::setEqualTo )
            , ( bp::arg("forcefields") ) )    
        .def( 
            "setParameter"
            , (void ( ::SireFF::ForceFieldsBase::* )( ::SireCAS::Symbol const &,double ) )( &::SireFF::ForceFieldsBase::setParameter )
            , ( bp::arg("param"), bp::arg("value") ) )    
        .def( 
            "setTotal"
            , (void ( ::SireFF::ForceFieldsBase::* )( ::SireFF::FFExpression const & ) )( &::SireFF::ForceFieldsBase::setTotal )
            , ( bp::arg("expression") ) )    
        .def( 
            "total"
            , (::SireFF::FFExpression const & ( ::SireFF::ForceFieldsBase::* )(  ) const)( &::SireFF::ForceFieldsBase::total )
            , bp::return_value_policy< bp::copy_const_reference >() );

}
