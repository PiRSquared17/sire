// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Moves.pypp.hpp"
#include "boost/python.hpp"
#include "siresystem_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"

namespace bp = boost::python;

void register_Moves_class(){

    bp::class_< SireSystem::Moves, boost::noncopyable >( "Moves" )    
        .def( 
            "count"
            , (int ( ::SireSystem::Moves::* )(  ) const)( &::SireSystem::Moves::count ) )    
        .def( 
            "initialise"
            , (void ( ::SireSystem::Moves::* )( ::SireSystem::SimSystem & ) )( &::SireSystem::Moves::initialise )
            , ( bp::arg("system") ) )    
        .def( 
            "pause"
            , (void ( ::SireSystem::Moves::* )(  ) )( &::SireSystem::Moves::pause ) )    
        .def( 
            "percentProgress"
            , (int ( ::SireSystem::Moves::* )(  ) const)( &::SireSystem::Moves::percentProgress ) )    
        .def( 
            "play"
            , (void ( ::SireSystem::Moves::* )(  ) )( &::SireSystem::Moves::play ) )    
        .def( 
            "rerun"
            , (void ( ::SireSystem::Moves::* )( ::SireSystem::SimSystem & ) )( &::SireSystem::Moves::rerun )
            , ( bp::arg("system") ) )    
        .def( 
            "resume"
            , (void ( ::SireSystem::Moves::* )( ::SireSystem::SimSystem & ) )( &::SireSystem::Moves::resume )
            , ( bp::arg("system") ) )    
        .def( 
            "run"
            , (void ( ::SireSystem::Moves::* )( ::SireSystem::SimSystem &,::quint32 ) )( &::SireSystem::Moves::run )
            , ( bp::arg("system"), bp::arg("nmoves") ) )    
        .def( 
            "stop"
            , (void ( ::SireSystem::Moves::* )(  ) )( &::SireSystem::Moves::stop ) );

}
