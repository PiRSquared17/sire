// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "RelateAtomTypeDB.pypp.hpp"
#include "boost/python.hpp"
#include "siredb_headers.h"
#include "SireCAS/function.h"
#include "SireCAS/expression.h"

namespace bp = boost::python;

void register_RelateAtomTypeDB_class(){

    bp::class_< SireDB::RelateAtomTypeDB, bp::bases< SireDB::RelationshipDB > >( "RelateAtomTypeDB" )    
        .def( bp::init< >() )    
        .def( 
            "add"
            , (::SireDB::RelateID ( ::SireDB::RelateAtomTypeDB::* )( ::SireDB::MatchAtomTypeData const &,::uint ) )( &::SireDB::RelateAtomTypeDB::add )
            , ( bp::arg("matchdata"), bp::arg("n") ) )    
        .def( 
            "add"
            , (::SireDB::RelateID ( ::SireDB::RelateAtomTypeDB::* )( ::SireDB::MatchAtomType const & ) )( &::SireDB::RelateAtomTypeDB::add )
            , ( bp::arg("match") ) )    
        .def( 
            "addAtomType"
            , (::SireDB::NameID ( ::SireDB::RelateAtomTypeDB::* )( ::QString const & ) )( &::SireDB::RelateAtomTypeDB::addAtomType )
            , ( bp::arg("atomtype") ) )    
        .def( 
            "caseSensitiveAtomTypes"
            , (bool ( ::SireDB::RelateAtomTypeDB::* )(  ) )( &::SireDB::RelateAtomTypeDB::caseSensitiveAtomTypes ) )    
        .def( 
            "get"
            , (::SireDB::RelateID ( ::SireDB::RelateAtomTypeDB::* )( ::SireDB::MatchAtomTypeData const &,::uint ) )( &::SireDB::RelateAtomTypeDB::get )
            , ( bp::arg("match"), bp::arg("n") ) )    
        .def( 
            "get"
            , (::SireDB::RelateID ( ::SireDB::RelateAtomTypeDB::* )( ::SireDB::MatchAtomType const & ) )( &::SireDB::RelateAtomTypeDB::get )
            , ( bp::arg("match") ) )    
        .def( 
            "get"
            , (::SireDB::MatchAtomTypeData ( ::SireDB::RelateAtomTypeDB::* )( ::SireDB::RelateID,::uint ) )( &::SireDB::RelateAtomTypeDB::get )
            , ( bp::arg("relateid"), bp::arg("n") ) )    
        .def( 
            "getAtomType"
            , (::QString ( ::SireDB::RelateAtomTypeDB::* )( ::SireDB::NameID ) )( &::SireDB::RelateAtomTypeDB::getAtomType )
            , ( bp::arg("id") ) )    
        .def( 
            "getAtomTypeID"
            , (::SireDB::NameID ( ::SireDB::RelateAtomTypeDB::* )( ::QString const & ) )( &::SireDB::RelateAtomTypeDB::getAtomTypeID )
            , ( bp::arg("atomtype") ) )    
        .def( 
            "setCaseInsensitiveAtomTypes"
            , (void ( ::SireDB::RelateAtomTypeDB::* )(  ) )( &::SireDB::RelateAtomTypeDB::setCaseInsensitiveAtomTypes ) )    
        .def( 
            "setCaseSensitiveAtomTypes"
            , (void ( ::SireDB::RelateAtomTypeDB::* )(  ) )( &::SireDB::RelateAtomTypeDB::setCaseSensitiveAtomTypes ) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireDB::RelateAtomTypeDB::typeName ) )    
        .def( 
            "what"
            , (char const * ( ::SireDB::RelateAtomTypeDB::* )(  ) const)( &::SireDB::RelateAtomTypeDB::what ) )    
        .staticmethod( "typeName" );

}
