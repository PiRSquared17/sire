// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "CoordGroupBase.pypp.hpp"
#include "boost/python.hpp"
#include "sirevol_headers.h"
#include "SireMaths/vector.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"

namespace bp = boost::python;

void register_CoordGroupBase_class(){

    bp::class_< SireVol::CoordGroupBase >( "CoordGroupBase" )    
        .def( bp::init< >() )    
        .def( bp::init< int >(( bp::arg("size") )) )    
        .def( bp::init< int, SireMaths::Vector const & >(( bp::arg("size"), bp::arg("value") )) )    
        .def( bp::init< QVector<SireMaths::Vector> const & >(( bp::arg("coords") )) )    
        .def( 
            "aaBox"
            , (::SireVol::AABox const & ( ::SireVol::CoordGroupBase::* )(  ) const)( &::SireVol::CoordGroupBase::aaBox )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "at"
            , (::SireMaths::Vector const & ( ::SireVol::CoordGroupBase::* )( int ) const)( &::SireVol::CoordGroupBase::at )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "count"
            , (int ( ::SireVol::CoordGroupBase::* )(  ) const)( &::SireVol::CoordGroupBase::count ) )    
        .def( 
            "isEmpty"
            , (bool ( ::SireVol::CoordGroupBase::* )(  ) const)( &::SireVol::CoordGroupBase::isEmpty ) )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "__getitem__"
            , (::SireMaths::Vector const & ( ::SireVol::CoordGroupBase::* )( int ) const)( &::SireVol::CoordGroupBase::operator[] )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "size"
            , (int ( ::SireVol::CoordGroupBase::* )(  ) const)( &::SireVol::CoordGroupBase::size ) );

}
