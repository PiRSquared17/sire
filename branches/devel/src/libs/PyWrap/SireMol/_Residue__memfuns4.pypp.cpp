// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "_Residue__memfuns4.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMol/moleculedata.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"
#include "SireVol/space.h"

namespace bp = boost::python;

void register_Residue_memfuns4( Residue_exposer_t& Residue_exposer ){

    { //::SireMol::Residue::rotate
    
        typedef void ( ::SireMol::Residue::*rotate_function_type )( ::SireMaths::Matrix const &,::SireMaths::Vector const & ) ;
        
        Residue_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::Residue::rotate )
            , ( bp::arg("rotmat"), bp::arg("point") ) );
    
    }

    { //::SireMol::Residue::rotate
    
        typedef void ( ::SireMol::Residue::*rotate_function_type )( ::SireMol::AtomID,::SireMaths::Matrix const &,::SireMaths::Vector const & ) ;
        
        Residue_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::Residue::rotate )
            , ( bp::arg("atomid"), bp::arg("rotmat"), bp::arg("point") ) );
    
    }

    { //::SireMol::Residue::rotate
    
        typedef void ( ::SireMol::Residue::*rotate_function_type )( ::QSet<SireMol::AtomID> const &,::SireMaths::Matrix const &,::SireMaths::Vector const & ) ;
        
        Residue_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::Residue::rotate )
            , ( bp::arg("atomids"), bp::arg("rotmat"), bp::arg("point") ) );
    
    }

    { //::SireMol::Residue::rotate
    
        typedef void ( ::SireMol::Residue::*rotate_function_type )( ::QString const &,::SireMaths::Matrix const &,::SireMaths::Vector const & ) ;
        
        Residue_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::Residue::rotate )
            , ( bp::arg("atom"), bp::arg("rotmat"), bp::arg("point") ) );
    
    }

    { //::SireMol::Residue::rotate
    
        typedef void ( ::SireMol::Residue::*rotate_function_type )( ::QStringList const &,::SireMaths::Matrix const &,::SireMaths::Vector const & ) ;
        
        Residue_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::Residue::rotate )
            , ( bp::arg("atoms"), bp::arg("rotmat"), bp::arg("point") ) );
    
    }

    { //::SireMol::Residue::rotate
    
        typedef void ( ::SireMol::Residue::*rotate_function_type )( ::SireMol::AtomIndex const &,::SireMaths::Matrix const &,::SireMaths::Vector const & ) ;
        
        Residue_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::Residue::rotate )
            , ( bp::arg("atom"), bp::arg("rotmat"), bp::arg("point") ) );
    
    }

    { //::SireMol::Residue::rotate
    
        typedef void ( ::SireMol::Residue::*rotate_function_type )( ::QSet<SireMol::AtomIndex> const &,::SireMaths::Matrix const &,::SireMaths::Vector const & ) ;
        
        Residue_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::Residue::rotate )
            , ( bp::arg("atoms"), bp::arg("rotmat"), bp::arg("point") ) );
    
    }

    { //::SireMol::Residue::set
    
        typedef void ( ::SireMol::Residue::*set_function_type )( ::SireMol::Bond const &,double,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "set"
            , set_function_type( &::SireMol::Residue::set )
            , ( bp::arg("bond"), bp::arg("lgth"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::set
    
        typedef void ( ::SireMol::Residue::*set_function_type )( ::SireMol::Bond const &,double,::SireMol::WeightFunction const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "set"
            , set_function_type( &::SireMol::Residue::set )
            , ( bp::arg("bond"), bp::arg("lgth"), bp::arg("func"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::set
    
        typedef void ( ::SireMol::Residue::*set_function_type )( ::SireMol::Angle const &,::SireMaths::Angle const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "set"
            , set_function_type( &::SireMol::Residue::set )
            , ( bp::arg("angle"), bp::arg("ang"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::set
    
        typedef void ( ::SireMol::Residue::*set_function_type )( ::SireMol::Angle const &,::SireMaths::Angle const &,::SireMol::WeightFunction const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "set"
            , set_function_type( &::SireMol::Residue::set )
            , ( bp::arg("angle"), bp::arg("ang"), bp::arg("func"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::set
    
        typedef void ( ::SireMol::Residue::*set_function_type )( ::SireMol::Dihedral const &,::SireMaths::Angle const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "set"
            , set_function_type( &::SireMol::Residue::set )
            , ( bp::arg("dihedral"), bp::arg("ang"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::set
    
        typedef void ( ::SireMol::Residue::*set_function_type )( ::SireMol::Dihedral const &,::SireMaths::Angle const &,::SireMol::WeightFunction const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "set"
            , set_function_type( &::SireMol::Residue::set )
            , ( bp::arg("dihedral"), bp::arg("ang"), bp::arg("func"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::set
    
        typedef void ( ::SireMol::Residue::*set_function_type )( ::SireMol::Improper const &,::SireMaths::Angle const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "set"
            , set_function_type( &::SireMol::Residue::set )
            , ( bp::arg("improper"), bp::arg("ang"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::set
    
        typedef void ( ::SireMol::Residue::*set_function_type )( ::SireMol::Improper const &,::SireMaths::Angle const &,::SireMol::WeightFunction const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "set"
            , set_function_type( &::SireMol::Residue::set )
            , ( bp::arg("improper"), bp::arg("ang"), bp::arg("func"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::setAll
    
        typedef void ( ::SireMol::Residue::*setAll_function_type )( ::SireMol::Dihedral const &,::SireMaths::Angle const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "setAll"
            , setAll_function_type( &::SireMol::Residue::setAll )
            , ( bp::arg("dihedral"), bp::arg("ang"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::setAll
    
        typedef void ( ::SireMol::Residue::*setAll_function_type )( ::SireMol::Dihedral const &,::SireMaths::Angle const &,::SireMol::WeightFunction const &,::QSet<SireMol::AtomIndex> const & ) ;
        
        Residue_exposer.def( 
            "setAll"
            , setAll_function_type( &::SireMol::Residue::setAll )
            , ( bp::arg("dihedral"), bp::arg("ang"), bp::arg("func"), bp::arg("anchors")=::QSet<SireMol::AtomIndex>( ) ) );
    
    }

    { //::SireMol::Residue::setCoordinates
    
        typedef void ( ::SireMol::Residue::*setCoordinates_function_type )( ::QVector<SireMaths::Vector> const & ) ;
        
        Residue_exposer.def( 
            "setCoordinates"
            , setCoordinates_function_type( &::SireMol::Residue::setCoordinates )
            , ( bp::arg("newcoords") ) );
    
    }

    { //::SireMol::Residue::setCoordinates
    
        typedef void ( ::SireMol::Residue::*setCoordinates_function_type )( ::SireMol::AtomID,::SireMaths::Vector const & ) ;
        
        Residue_exposer.def( 
            "setCoordinates"
            , setCoordinates_function_type( &::SireMol::Residue::setCoordinates )
            , ( bp::arg("atomid"), bp::arg("newcoords") ) );
    
    }

    { //::SireMol::Residue::setCoordinates
    
        typedef void ( ::SireMol::Residue::*setCoordinates_function_type )( ::QHash<SireMol::AtomID,SireMaths::Vector> const & ) ;
        
        Residue_exposer.def( 
            "setCoordinates"
            , setCoordinates_function_type( &::SireMol::Residue::setCoordinates )
            , ( bp::arg("newcoords") ) );
    
    }

}
