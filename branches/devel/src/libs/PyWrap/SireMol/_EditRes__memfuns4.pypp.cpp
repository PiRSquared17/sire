// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "_EditRes__memfuns4.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMol/moleculedata.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"
#include "SireVol/space.h"

namespace bp = boost::python;

void register_EditRes_memfuns4( EditRes_exposer_t& EditRes_exposer ){

    { //::SireMol::EditRes::name
    
        typedef ::QString ( ::SireMol::EditRes::*name_function_type )(  ) const;
        
        EditRes_exposer.def( 
            "name"
            , name_function_type( &::SireMol::EditRes::name ) );
    
    }

    { //::SireMol::EditRes::number
    
        typedef ::SireMol::ResNum ( ::SireMol::EditRes::*number_function_type )(  ) const;
        
        EditRes_exposer.def( 
            "number"
            , number_function_type( &::SireMol::EditRes::number ) );
    
    }

    { //::SireMol::EditRes::operator[]
    
        typedef ::SireMol::Atom ( ::SireMol::EditRes::*__getitem___function_type )( ::SireMol::AtomID ) const;
        
        EditRes_exposer.def( 
            "__getitem__"
            , __getitem___function_type( &::SireMol::EditRes::operator[] )
            , ( bp::arg("atomid") ) );
    
    }

    { //::SireMol::EditRes::operator[]
    
        typedef ::SireMol::Atom ( ::SireMol::EditRes::*__getitem___function_type )( ::QString const & ) const;
        
        EditRes_exposer.def( 
            "__getitem__"
            , __getitem___function_type( &::SireMol::EditRes::operator[] )
            , ( bp::arg("nam") ) );
    
    }

    { //::SireMol::EditRes::operator[]
    
        typedef ::SireMol::Atom ( ::SireMol::EditRes::*__getitem___function_type )( ::SireMol::AtomIndex const & ) const;
        
        EditRes_exposer.def( 
            "__getitem__"
            , __getitem___function_type( &::SireMol::EditRes::operator[] )
            , ( bp::arg("atom") ) );
    
    }

    { //::SireMol::EditRes::operator[]
    
        typedef ::SireMol::CutGroup ( ::SireMol::EditRes::*__getitem___function_type )( ::SireMol::CutGroupID ) const;
        
        EditRes_exposer.def( 
            "__getitem__"
            , __getitem___function_type( &::SireMol::EditRes::operator[] )
            , ( bp::arg("cgid") ) );
    
    }

    { //::SireMol::EditRes::operator[]
    
        typedef ::SireMol::CutGroup ( ::SireMol::EditRes::*__getitem___function_type )( ::SireMol::CutGroupNum ) const;
        
        EditRes_exposer.def( 
            "__getitem__"
            , __getitem___function_type( &::SireMol::EditRes::operator[] )
            , ( bp::arg("cgnum") ) );
    
    }

    { //::SireMol::EditRes::remove
    
        typedef void ( ::SireMol::EditRes::*remove_function_type )( ::QString const & ) ;
        
        EditRes_exposer.def( 
            "remove"
            , remove_function_type( &::SireMol::EditRes::remove )
            , ( bp::arg("atm") ) );
    
    }

    { //::SireMol::EditRes::remove
    
        typedef void ( ::SireMol::EditRes::*remove_function_type )( ::SireMol::AtomIndex const & ) ;
        
        EditRes_exposer.def( 
            "remove"
            , remove_function_type( &::SireMol::EditRes::remove )
            , ( bp::arg("atm") ) );
    
    }

    { //::SireMol::EditRes::remove
    
        typedef void ( ::SireMol::EditRes::*remove_function_type )( ::SireMol::Bond const & ) ;
        
        EditRes_exposer.def( 
            "remove"
            , remove_function_type( &::SireMol::EditRes::remove )
            , ( bp::arg("bond") ) );
    
    }

    { //::SireMol::EditRes::removeAllBonds
    
        typedef void ( ::SireMol::EditRes::*removeAllBonds_function_type )( ::QString const & ) ;
        
        EditRes_exposer.def( 
            "removeAllBonds"
            , removeAllBonds_function_type( &::SireMol::EditRes::removeAllBonds )
            , ( bp::arg("atomname") ) );
    
    }

    { //::SireMol::EditRes::removeAllBonds
    
        typedef void ( ::SireMol::EditRes::*removeAllBonds_function_type )(  ) ;
        
        EditRes_exposer.def( 
            "removeAllBonds"
            , removeAllBonds_function_type( &::SireMol::EditRes::removeAllBonds ) );
    
    }

    { //::SireMol::EditRes::removeBond
    
        typedef void ( ::SireMol::EditRes::*removeBond_function_type )( ::QString const &,::QString const & ) ;
        
        EditRes_exposer.def( 
            "removeBond"
            , removeBond_function_type( &::SireMol::EditRes::removeBond )
            , ( bp::arg("atmnam0"), bp::arg("atmnam1") ) );
    
    }

    { //::SireMol::EditRes::resName
    
        typedef ::QString ( ::SireMol::EditRes::*resName_function_type )(  ) const;
        
        EditRes_exposer.def( 
            "resName"
            , resName_function_type( &::SireMol::EditRes::resName ) );
    
    }

    { //::SireMol::EditRes::resNum
    
        typedef ::SireMol::ResNum ( ::SireMol::EditRes::*resNum_function_type )(  ) const;
        
        EditRes_exposer.def( 
            "resNum"
            , resNum_function_type( &::SireMol::EditRes::resNum ) );
    
    }

    { //::SireMol::EditRes::residuesBondedTo
    
        typedef ::QHash<SireMol::ResNum,SireMol::EditRes> ( ::SireMol::EditRes::*residuesBondedTo_function_type )( ::SireMol::AtomID ) const;
        
        EditRes_exposer.def( 
            "residuesBondedTo"
            , residuesBondedTo_function_type( &::SireMol::EditRes::residuesBondedTo )
            , ( bp::arg("atom") ) );
    
    }

    { //::SireMol::EditRes::residuesBondedTo
    
        typedef ::QHash<SireMol::ResNum,SireMol::EditRes> ( ::SireMol::EditRes::*residuesBondedTo_function_type )( ::QString const & ) const;
        
        EditRes_exposer.def( 
            "residuesBondedTo"
            , residuesBondedTo_function_type( &::SireMol::EditRes::residuesBondedTo )
            , ( bp::arg("atomname") ) );
    
    }

    { //::SireMol::EditRes::residuesBondedTo
    
        typedef ::QHash<SireMol::ResNum,SireMol::EditRes> ( ::SireMol::EditRes::*residuesBondedTo_function_type )( ::SireMol::AtomIndex const & ) const;
        
        EditRes_exposer.def( 
            "residuesBondedTo"
            , residuesBondedTo_function_type( &::SireMol::EditRes::residuesBondedTo )
            , ( bp::arg("atom") ) );
    
    }

    { //::SireMol::EditRes::rotate
    
        typedef void ( ::SireMol::EditRes::*rotate_function_type )( ::SireMaths::Quaternion const &,::SireMaths::Vector const & ) ;
        
        EditRes_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::EditRes::rotate )
            , ( bp::arg("quat"), bp::arg("point") ) );
    
    }

    { //::SireMol::EditRes::rotate
    
        typedef void ( ::SireMol::EditRes::*rotate_function_type )( ::SireMol::AtomID,::SireMaths::Quaternion const &,::SireMaths::Vector const & ) ;
        
        EditRes_exposer.def( 
            "rotate"
            , rotate_function_type( &::SireMol::EditRes::rotate )
            , ( bp::arg("atomid"), bp::arg("quat"), bp::arg("point") ) );
    
    }

}
