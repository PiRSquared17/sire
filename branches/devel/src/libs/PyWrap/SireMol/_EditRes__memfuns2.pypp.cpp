// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "_EditRes__memfuns2.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"

namespace bp = boost::python;

void register_EditRes_memfuns2( EditRes_exposer_t& EditRes_exposer ){

    { //::SireMol::EditRes::connectivity
    
        typedef ::SireMol::ResidueBonds ( ::SireMol::EditRes::*connectivity_function_type )(  ) const;
        
        EditRes_exposer.def( 
            "connectivity"
            , connectivity_function_type( &::SireMol::EditRes::connectivity ) );
    
    }

    { //::SireMol::EditRes::contains
    
        typedef bool ( ::SireMol::EditRes::*contains_function_type )( ::SireMol::CutGroupID ) const;
        
        EditRes_exposer.def( 
            "contains"
            , contains_function_type( &::SireMol::EditRes::contains )
            , ( bp::arg("cgid") ) );
    
    }

    { //::SireMol::EditRes::contains
    
        typedef bool ( ::SireMol::EditRes::*contains_function_type )( ::SireMol::CutGroupNum ) const;
        
        EditRes_exposer.def( 
            "contains"
            , contains_function_type( &::SireMol::EditRes::contains )
            , ( bp::arg("cgnum") ) );
    
    }

    { //::SireMol::EditRes::contains
    
        typedef bool ( ::SireMol::EditRes::*contains_function_type )( ::SireMol::AtomID ) const;
        
        EditRes_exposer.def( 
            "contains"
            , contains_function_type( &::SireMol::EditRes::contains )
            , ( bp::arg("atomid") ) );
    
    }

    { //::SireMol::EditRes::contains
    
        typedef bool ( ::SireMol::EditRes::*contains_function_type )( ::QString const & ) const;
        
        EditRes_exposer.def( 
            "contains"
            , contains_function_type( &::SireMol::EditRes::contains )
            , ( bp::arg("atomname") ) );
    
    }

    { //::SireMol::EditRes::contains
    
        typedef bool ( ::SireMol::EditRes::*contains_function_type )( ::SireMol::AtomIndex const & ) const;
        
        EditRes_exposer.def( 
            "contains"
            , contains_function_type( &::SireMol::EditRes::contains )
            , ( bp::arg("atom") ) );
    
    }

    { //::SireMol::EditRes::contains
    
        typedef bool ( ::SireMol::EditRes::*contains_function_type )( ::SireMol::Bond const & ) const;
        
        EditRes_exposer.def( 
            "contains"
            , contains_function_type( &::SireMol::EditRes::contains )
            , ( bp::arg("bond") ) );
    
    }

    { //::SireMol::EditRes::coordGroup
    
        typedef ::SireVol::CoordGroup ( ::SireMol::EditRes::*coordGroup_function_type )( ::SireMol::CutGroupID ) const;
        
        EditRes_exposer.def( 
            "coordGroup"
            , coordGroup_function_type( &::SireMol::EditRes::coordGroup )
            , ( bp::arg("cgid") ) );
    
    }

    { //::SireMol::EditRes::coordGroup
    
        typedef ::SireVol::CoordGroup ( ::SireMol::EditRes::*coordGroup_function_type )( ::SireMol::CutGroupNum ) const;
        
        EditRes_exposer.def( 
            "coordGroup"
            , coordGroup_function_type( &::SireMol::EditRes::coordGroup )
            , ( bp::arg("cgnum") ) );
    
    }

    { //::SireMol::EditRes::coordGroupsByID
    
        typedef ::QHash<SireMol::CutGroupID,SireVol::CoordGroup> ( ::SireMol::EditRes::*coordGroupsByID_function_type )(  ) const;
        
        EditRes_exposer.def( 
            "coordGroupsByID"
            , coordGroupsByID_function_type( &::SireMol::EditRes::coordGroupsByID ) );
    
    }

    { //::SireMol::EditRes::coordGroupsByNum
    
        typedef ::QHash<SireMol::CutGroupNum,SireVol::CoordGroup> ( ::SireMol::EditRes::*coordGroupsByNum_function_type )(  ) const;
        
        EditRes_exposer.def( 
            "coordGroupsByNum"
            , coordGroupsByNum_function_type( &::SireMol::EditRes::coordGroupsByNum ) );
    
    }

    { //::SireMol::EditRes::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditRes::*coordinates_function_type )( ::SireMol::AtomID ) const;
        
        EditRes_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditRes::coordinates )
            , ( bp::arg("i") ) );
    
    }

    { //::SireMol::EditRes::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditRes::*coordinates_function_type )( ::QString const & ) const;
        
        EditRes_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditRes::coordinates )
            , ( bp::arg("atomname") ) );
    
    }

    { //::SireMol::EditRes::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditRes::*coordinates_function_type )( ::SireMol::AtomIndex const & ) const;
        
        EditRes_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditRes::coordinates )
            , ( bp::arg("atom") ) );
    
    }

    { //::SireMol::EditRes::coordinates
    
        typedef ::QVector<SireMaths::Vector> ( ::SireMol::EditRes::*coordinates_function_type )(  ) const;
        
        EditRes_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditRes::coordinates ) );
    
    }

    { //::SireMol::EditRes::coordinates
    
        typedef ::QHash<SireMol::AtomID,SireMaths::Vector> ( ::SireMol::EditRes::*coordinates_function_type )( ::QSet<SireMol::AtomID> const & ) const;
        
        EditRes_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditRes::coordinates )
            , ( bp::arg("atomids") ) );
    
    }

    { //::SireMol::EditRes::coordinates
    
        typedef ::QHash<QString,SireMaths::Vector> ( ::SireMol::EditRes::*coordinates_function_type )( ::QSet<QString> const & ) const;
        
        EditRes_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditRes::coordinates )
            , ( bp::arg("atomnames") ) );
    
    }

    { //::SireMol::EditRes::coordinates
    
        typedef ::QHash<SireMol::AtomIndex,SireMaths::Vector> ( ::SireMol::EditRes::*coordinates_function_type )( ::QSet<SireMol::AtomIndex> const & ) const;
        
        EditRes_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditRes::coordinates )
            , ( bp::arg("atms") ) );
    
    }

    { //::SireMol::EditRes::cutGroup
    
        typedef ::SireMol::CutGroup ( ::SireMol::EditRes::*cutGroup_function_type )( ::SireMol::CutGroupID ) const;
        
        EditRes_exposer.def( 
            "cutGroup"
            , cutGroup_function_type( &::SireMol::EditRes::cutGroup )
            , ( bp::arg("cgid") ) );
    
    }

    { //::SireMol::EditRes::cutGroup
    
        typedef ::SireMol::CutGroup ( ::SireMol::EditRes::*cutGroup_function_type )( ::SireMol::CutGroupNum ) const;
        
        EditRes_exposer.def( 
            "cutGroup"
            , cutGroup_function_type( &::SireMol::EditRes::cutGroup )
            , ( bp::arg("cgnum") ) );
    
    }

}
