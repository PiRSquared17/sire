// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "_EditMol__memfuns4.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMol/moleculedata.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"
#include "SireVol/space.h"

namespace bp = boost::python;

void register_EditMol_memfuns4( EditMol_exposer_t& EditMol_exposer ){

    { //::SireMol::EditMol::coordGroup
    
        typedef ::SireVol::CoordGroup ( ::SireMol::EditMol::*coordGroup_function_type )( ::SireMol::CutGroupNum ) const;
        
        EditMol_exposer.def( 
            "coordGroup"
            , coordGroup_function_type( &::SireMol::EditMol::coordGroup )
            , ( bp::arg("cgnum") ) );
    
    }

    { //::SireMol::EditMol::coordGroups
    
        typedef ::QVector<SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroups_function_type )(  ) const;
        
        EditMol_exposer.def( 
            "coordGroups"
            , coordGroups_function_type( &::SireMol::EditMol::coordGroups ) );
    
    }

    { //::SireMol::EditMol::coordGroups
    
        typedef ::QHash<SireMol::CutGroupID,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroups_function_type )( ::QSet<SireMol::CutGroupID> const & ) const;
        
        EditMol_exposer.def( 
            "coordGroups"
            , coordGroups_function_type( &::SireMol::EditMol::coordGroups )
            , ( bp::arg("cgids") ) );
    
    }

    { //::SireMol::EditMol::coordGroups
    
        typedef ::QHash<SireMol::CutGroupNum,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroups_function_type )( ::QSet<SireMol::CutGroupNum> const & ) const;
        
        EditMol_exposer.def( 
            "coordGroups"
            , coordGroups_function_type( &::SireMol::EditMol::coordGroups )
            , ( bp::arg("cgnums") ) );
    
    }

    { //::SireMol::EditMol::coordGroupsByID
    
        typedef ::QHash<SireMol::CutGroupID,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroupsByID_function_type )( ::SireMol::ResNum ) const;
        
        EditMol_exposer.def( 
            "coordGroupsByID"
            , coordGroupsByID_function_type( &::SireMol::EditMol::coordGroupsByID )
            , ( bp::arg("resnum") ) );
    
    }

    { //::SireMol::EditMol::coordGroupsByID
    
        typedef ::QHash<SireMol::CutGroupID,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroupsByID_function_type )( ::SireMol::ResID ) const;
        
        EditMol_exposer.def( 
            "coordGroupsByID"
            , coordGroupsByID_function_type( &::SireMol::EditMol::coordGroupsByID )
            , ( bp::arg("resid") ) );
    
    }

    { //::SireMol::EditMol::coordGroupsByID
    
        typedef ::QHash<SireMol::CutGroupID,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroupsByID_function_type )( ::QSet<SireMol::ResNum> const & ) const;
        
        EditMol_exposer.def( 
            "coordGroupsByID"
            , coordGroupsByID_function_type( &::SireMol::EditMol::coordGroupsByID )
            , ( bp::arg("resnums") ) );
    
    }

    { //::SireMol::EditMol::coordGroupsByID
    
        typedef ::QHash<SireMol::CutGroupID,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroupsByID_function_type )( ::QSet<SireMol::ResID> const & ) const;
        
        EditMol_exposer.def( 
            "coordGroupsByID"
            , coordGroupsByID_function_type( &::SireMol::EditMol::coordGroupsByID )
            , ( bp::arg("resids") ) );
    
    }

    { //::SireMol::EditMol::coordGroupsByNum
    
        typedef ::QHash<SireMol::CutGroupNum,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroupsByNum_function_type )( ::SireMol::ResNum ) const;
        
        EditMol_exposer.def( 
            "coordGroupsByNum"
            , coordGroupsByNum_function_type( &::SireMol::EditMol::coordGroupsByNum )
            , ( bp::arg("resnum") ) );
    
    }

    { //::SireMol::EditMol::coordGroupsByNum
    
        typedef ::QHash<SireMol::CutGroupNum,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroupsByNum_function_type )( ::SireMol::ResID ) const;
        
        EditMol_exposer.def( 
            "coordGroupsByNum"
            , coordGroupsByNum_function_type( &::SireMol::EditMol::coordGroupsByNum )
            , ( bp::arg("resid") ) );
    
    }

    { //::SireMol::EditMol::coordGroupsByNum
    
        typedef ::QHash<SireMol::CutGroupNum,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroupsByNum_function_type )( ::QSet<SireMol::ResNum> const & ) const;
        
        EditMol_exposer.def( 
            "coordGroupsByNum"
            , coordGroupsByNum_function_type( &::SireMol::EditMol::coordGroupsByNum )
            , ( bp::arg("resnums") ) );
    
    }

    { //::SireMol::EditMol::coordGroupsByNum
    
        typedef ::QHash<SireMol::CutGroupNum,SireVol::CoordGroup> ( ::SireMol::EditMol::*coordGroupsByNum_function_type )( ::QSet<SireMol::ResID> const & ) const;
        
        EditMol_exposer.def( 
            "coordGroupsByNum"
            , coordGroupsByNum_function_type( &::SireMol::EditMol::coordGroupsByNum )
            , ( bp::arg("resids") ) );
    
    }

    { //::SireMol::EditMol::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditMol::*coordinates_function_type )( ::SireMol::AtomID ) const;
        
        EditMol_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditMol::coordinates )
            , ( bp::arg("atomid") ) );
    
    }

    { //::SireMol::EditMol::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditMol::*coordinates_function_type )( ::SireMol::CutGroupID,::SireMol::AtomID ) const;
        
        EditMol_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditMol::coordinates )
            , ( bp::arg("cgid"), bp::arg("atomid") ) );
    
    }

    { //::SireMol::EditMol::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditMol::*coordinates_function_type )( ::SireMol::CutGroupNum,::SireMol::AtomID ) const;
        
        EditMol_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditMol::coordinates )
            , ( bp::arg("cgnum"), bp::arg("atomid") ) );
    
    }

    { //::SireMol::EditMol::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditMol::*coordinates_function_type )( ::SireMol::CGAtomID const & ) const;
        
        EditMol_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditMol::coordinates )
            , ( bp::arg("cgatomid") ) );
    
    }

    { //::SireMol::EditMol::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditMol::*coordinates_function_type )( ::SireMol::CGNumAtomID const & ) const;
        
        EditMol_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditMol::coordinates )
            , ( bp::arg("cgatomid") ) );
    
    }

    { //::SireMol::EditMol::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditMol::*coordinates_function_type )( ::SireMol::ResNum,::SireMol::AtomID ) const;
        
        EditMol_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditMol::coordinates )
            , ( bp::arg("resnum"), bp::arg("atomid") ) );
    
    }

    { //::SireMol::EditMol::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditMol::*coordinates_function_type )( ::SireMol::ResNumAtomID const & ) const;
        
        EditMol_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditMol::coordinates )
            , ( bp::arg("resatomid") ) );
    
    }

    { //::SireMol::EditMol::coordinates
    
        typedef ::SireMaths::Vector ( ::SireMol::EditMol::*coordinates_function_type )( ::SireMol::ResID,::SireMol::AtomID ) const;
        
        EditMol_exposer.def( 
            "coordinates"
            , coordinates_function_type( &::SireMol::EditMol::coordinates )
            , ( bp::arg("resid"), bp::arg("atomid") ) );
    
    }

}
