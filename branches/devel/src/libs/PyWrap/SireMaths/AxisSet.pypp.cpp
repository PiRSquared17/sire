// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "AxisSet.pypp.hpp"
#include "boost/python.hpp"
#include "siremaths_headers.h"

namespace bp = boost::python;

void register_AxisSet_class(){

    bp::class_< SireMaths::AxisSet >( "AxisSet" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMaths::Matrix const &, bp::optional< SireMaths::Vector > >(( bp::arg("matrx"), bp::arg("orign")=::SireMaths::Vector( 0.0 ) )) )    
        .def( 
            "fromFrame"
            , (::SireMaths::Vector ( ::SireMaths::AxisSet::* )( ::SireMaths::AxisSet const &,::SireMaths::Vector const & ) const)( &::SireMaths::AxisSet::fromFrame )
            , ( bp::arg("frame"), bp::arg("vec") ) )    
        .def( 
            "fromIdentity"
            , (::SireMaths::Vector ( ::SireMaths::AxisSet::* )( ::SireMaths::Vector const & ) const)( &::SireMaths::AxisSet::fromIdentity )
            , ( bp::arg("vec") ) )    
        .def( 
            "invMatrix"
            , (::SireMaths::Matrix const & ( ::SireMaths::AxisSet::* )(  ) const)( &::SireMaths::AxisSet::invMatrix )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "matrix"
            , (::SireMaths::Matrix const & ( ::SireMaths::AxisSet::* )(  ) const)( &::SireMaths::AxisSet::matrix )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "origin"
            , (::SireMaths::Vector const & ( ::SireMaths::AxisSet::* )(  ) const)( &::SireMaths::AxisSet::origin )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "toFrame"
            , (::SireMaths::Vector ( ::SireMaths::AxisSet::* )( ::SireMaths::AxisSet const &,::SireMaths::Vector const & ) const)( &::SireMaths::AxisSet::toFrame )
            , ( bp::arg("frame"), bp::arg("vec") ) )    
        .def( 
            "toIdentity"
            , (::SireMaths::Vector ( ::SireMaths::AxisSet::* )( ::SireMaths::Vector const & ) const)( &::SireMaths::AxisSet::toIdentity )
            , ( bp::arg("vec") ) )    
        .def( 
            "toString"
            , (::QString ( ::SireMaths::AxisSet::* )(  ) const)( &::SireMaths::AxisSet::toString ) );

}
