// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Line.pypp.hpp"
#include "boost/python.hpp"
#include "siremaths_headers.h"

namespace bp = boost::python;

SireMaths::Line __copy__(const SireMaths::Line &other){ return SireMaths::Line(other); }

#include "SireQt/qdatastream.hpp"

#include "SirePy/str.hpp"

void register_Line_class(){

    bp::class_< SireMaths::Line >( "Line" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMaths::Vector const &, SireMaths::Vector const & >(( bp::arg("point0"), bp::arg("point1") )) )    
        .def( 
            "at"
            , (::SireMaths::Vector const & ( ::SireMaths::Line::* )( int ) const)( &::SireMaths::Line::at )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "count"
            , (int ( ::SireMaths::Line::* )(  ) const)( &::SireMaths::Line::count ) )    
        .def( 
            "length"
            , (double ( ::SireMaths::Line::* )(  ) const)( &::SireMaths::Line::length ) )    
        .def( 
            "__getitem__"
            , (::SireMaths::Vector const & ( ::SireMaths::Line::* )( int ) const)( &::SireMaths::Line::operator[] )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "point"
            , (::SireMaths::Vector const & ( ::SireMaths::Line::* )( int ) const)( &::SireMaths::Line::point )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "toString"
            , (::QString ( ::SireMaths::Line::* )(  ) const)( &::SireMaths::Line::toString ) )    
        .def( 
            "vector"
            , (::SireMaths::Vector ( ::SireMaths::Line::* )(  ) const)( &::SireMaths::Line::vector ) )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMaths::Line >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMaths::Line >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &SirePy::__str__< ::SireMaths::Line > );

}
