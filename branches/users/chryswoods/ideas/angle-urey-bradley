I will not have separate angle and urey-bradley terms.

Instead, the generic forcefield angle energy will be passed the angle and also
the distance between the 1-3 atoms. The angle will be x, and the distance will be
y, so the generic functions can be used to implement the urey-bradley energy.

On a similar note, I would like to be able to build the generic MM forcefield in 
the same multiple-inheritance component manner that I used to build the MMDB, as
this seems to allow the optimal combination of components and code reuse.

I could do the same thing with 1-4 terms, e.g. passing the distance between the 1-4 atoms
as well as the dihedral energy. In this way, the 1-4 nonbonded energy could be calculated
as part of the dihedral via a special CLJFunc MathFunc that holds the charge and LJ
parameters of the dihedral... Of course, this would mean that the charge and LJ parameters
would need to be in the dihedral function, but I am sure that something could be
worked out... (this would also allow the 1-4 scale factor to become part of the dihedral)
