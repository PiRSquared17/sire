// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "MoleculeGroup.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"

namespace bp = boost::python;

void SIREMOL_EXPORT register_MoleculeGroup_class(){

    bp::class_< SireMol::MoleculeGroup >( "MoleculeGroup" )    
        .def( bp::init< >() )    
        .def( bp::init< QString const & >(( bp::arg("name") )) )    
        .def( bp::init< QString const &, QVector<SireMol::Molecule> const & >(( bp::arg("name"), bp::arg("molecules") )) )    
        .def( 
            "ID"
            , &::SireMol::MoleculeGroup::ID )    
        .def( 
            "add"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::SireMol::Molecule const & ) )( &::SireMol::MoleculeGroup::add )
            , ( bp::arg("molecule") ) )    
        .def( 
            "add"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::QVector<SireMol::Molecule> const & ) )( &::SireMol::MoleculeGroup::add )
            , ( bp::arg("molecules") ) )    
        .def( 
            "at"
            , (::SireMol::Molecule const & ( ::SireMol::MoleculeGroup::* )( ::SireMol::MoleculeID ) const)( &::SireMol::MoleculeGroup::at )
            , ( bp::arg("molid") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "at"
            , (::SireMol::Molecule const & ( ::SireMol::MoleculeGroup::* )( ::SireMol::Molecule const & ) const)( &::SireMol::MoleculeGroup::at )
            , ( bp::arg("molecule") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "change"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::SireMol::Molecule const & ) )( &::SireMol::MoleculeGroup::change )
            , ( bp::arg("molecule") ) )    
        .def( 
            "change"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::QVector<SireMol::Molecule> const & ) )( &::SireMol::MoleculeGroup::change )
            , ( bp::arg("molecules") ) )    
        .def( 
            "change"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::QHash<SireMol::MoleculeID,SireMol::Molecule> const & ) )( &::SireMol::MoleculeGroup::change )
            , ( bp::arg("molecules") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::SireMol::Molecule const & ) const)( &::SireMol::MoleculeGroup::contains )
            , ( bp::arg("molecule") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::SireMol::MoleculeID ) const)( &::SireMol::MoleculeGroup::contains )
            , ( bp::arg("molid") ) )    
        .def( 
            "count"
            , &::SireMol::MoleculeGroup::count )    
        .def( 
            "molecule"
            , (::SireMol::Molecule const & ( ::SireMol::MoleculeGroup::* )( ::SireMol::MoleculeID ) const)( &::SireMol::MoleculeGroup::molecule )
            , ( bp::arg("molid") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "molecule"
            , (::SireMol::Molecule const & ( ::SireMol::MoleculeGroup::* )( ::SireMol::Molecule const & ) const)( &::SireMol::MoleculeGroup::molecule )
            , ( bp::arg("molecule") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "moleculeIDs"
            , &::SireMol::MoleculeGroup::moleculeIDs )    
        .def( 
            "molecules"
            , &::SireMol::MoleculeGroup::molecules
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "name"
            , &::SireMol::MoleculeGroup::name
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "__getitem__"
            , (::SireMol::Molecule const & ( ::SireMol::MoleculeGroup::* )( ::SireMol::MoleculeID ) const)( &::SireMol::MoleculeGroup::operator[] )
            , ( bp::arg("molid") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "__getitem__"
            , (::SireMol::Molecule const & ( ::SireMol::MoleculeGroup::* )( ::SireMol::Molecule const & ) const)( &::SireMol::MoleculeGroup::operator[] )
            , ( bp::arg("molecule") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "remove"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::SireMol::Molecule const & ) )( &::SireMol::MoleculeGroup::remove )
            , ( bp::arg("molecule") ) )    
        .def( 
            "remove"
            , (bool ( ::SireMol::MoleculeGroup::* )( ::QVector<SireMol::Molecule> const & ) )( &::SireMol::MoleculeGroup::remove )
            , ( bp::arg("molecules") ) )    
        .def( 
            "rename"
            , &::SireMol::MoleculeGroup::rename
            , ( bp::arg("newname") ) )    
        .def( 
            "version"
            , &::SireMol::MoleculeGroup::version
            , bp::return_value_policy< bp::copy_const_reference >() );

}
