// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "_Units_global_variables.pypp.hpp"
#include "boost/python.hpp"
#include "sireunits_headers.h"

namespace bp = boost::python;

void register_global_variables(){

    bp::scope().attr("G_newton") = SireUnits::G_newton;

    bp::scope().attr("J_per_mol") = SireUnits::J_per_mol;

    bp::scope().attr("amp") = SireUnits::amp;

    bp::scope().attr("angstrom") = SireUnits::angstrom;

    bp::scope().attr("atm") = SireUnits::atm;

    bp::scope().attr("atomic_mass_constant") = SireUnits::atomic_mass_constant;

    bp::scope().attr("bohr_radii") = SireUnits::bohr_radii;

    bp::scope().attr("c") = SireUnits::c;

    bp::scope().attr("cal") = SireUnits::cal;

    bp::scope().attr("cal_per_mol") = SireUnits::cal_per_mol;

    bp::scope().attr("celsius") = SireUnits::celsius;

    bp::scope().attr("centimeter") = SireUnits::centimeter;

    bp::scope().attr("coulomb") = SireUnits::coulomb;

    bp::scope().attr("day") = SireUnits::day;

    bp::scope().attr("degrees") = SireUnits::degrees;

    bp::scope().attr("e_charge") = SireUnits::e_charge;

    bp::scope().attr("electron_mass") = SireUnits::electron_mass;

    bp::scope().attr("epsilon0") = SireUnits::epsilon0;

    bp::scope().attr("fahrenheit") = SireUnits::fahrenheit;

    bp::scope().attr("farad") = SireUnits::farad;

    bp::scope().attr("faraday") = SireUnits::faraday;

    bp::scope().attr("femtosecond") = SireUnits::femtosecond;

    bp::scope().attr("foot") = SireUnits::foot;

    bp::scope().attr("four_pi_eps0") = SireUnits::four_pi_eps0;

    bp::scope().attr("g_per_mol") = SireUnits::g_per_mol;

    bp::scope().attr("gasr") = SireUnits::gasr;

    bp::scope().attr("gram") = SireUnits::gram;

    bp::scope().attr("h_planck") = SireUnits::h_planck;

    bp::scope().attr("h_slash") = SireUnits::h_slash;

    bp::scope().attr("hartree") = SireUnits::hartree;

    bp::scope().attr("hour") = SireUnits::hour;

    bp::scope().attr("inch") = SireUnits::inch;

    bp::scope().attr("int_cal") = SireUnits::int_cal;

    bp::scope().attr("int_cal_per_mol") = SireUnits::int_cal_per_mol;

    bp::scope().attr("int_kcal") = SireUnits::int_kcal;

    bp::scope().attr("int_kcal_per_mol") = SireUnits::int_kcal_per_mol;

    bp::scope().attr("joule") = SireUnits::joule;

    bp::scope().attr("kJ_per_mol") = SireUnits::kJ_per_mol;

    bp::scope().attr("k_boltz") = SireUnits::k_boltz;

    bp::scope().attr("kcal") = SireUnits::kcal;

    bp::scope().attr("kcal_per_mol") = SireUnits::kcal_per_mol;

    bp::scope().attr("kelvin") = SireUnits::kelvin;

    bp::scope().attr("kg_per_mol") = SireUnits::kg_per_mol;

    bp::scope().attr("kilogram") = SireUnits::kilogram;

    bp::scope().attr("kilojoule") = SireUnits::kilojoule;

    bp::scope().attr("kilometer") = SireUnits::kilometer;

    bp::scope().attr("meter") = SireUnits::meter;

    bp::scope().attr("microsecond") = SireUnits::microsecond;

    bp::scope().attr("mile") = SireUnits::mile;

    bp::scope().attr("millisecond") = SireUnits::millisecond;

    bp::scope().attr("minute") = SireUnits::minute;

    bp::scope().attr("mod_electrons") = SireUnits::mod_electrons;

    bp::scope().attr("molar_volume") = SireUnits::molar_volume;

    bp::scope().attr("mole") = SireUnits::mole;

    bp::scope().attr("mu0") = SireUnits::mu0;

    bp::scope().attr("nanometer") = SireUnits::nanometer;

    bp::scope().attr("nanosecond") = SireUnits::nanosecond;

    bp::scope().attr("neutron_mass") = SireUnits::neutron_mass;

    bp::scope().attr("newton") = SireUnits::newton;

    bp::scope().attr("newton_per_mol") = SireUnits::newton_per_mol;

    bp::scope().attr("one_over_four_pi_eps0") = SireUnits::one_over_four_pi_eps0;

    bp::scope().attr("pascal") = SireUnits::pascal;

    bp::scope().attr("picometer") = SireUnits::picometer;

    bp::scope().attr("picosecond") = SireUnits::picosecond;

    bp::scope().attr("proton_mass") = SireUnits::proton_mass;

    bp::scope().attr("radians") = SireUnits::radians;

    bp::scope().attr("second") = SireUnits::second;

    bp::scope().attr("volt") = SireUnits::volt;

    bp::scope().attr("watt") = SireUnits::watt;

    bp::scope().attr("yard") = SireUnits::yard;

}
