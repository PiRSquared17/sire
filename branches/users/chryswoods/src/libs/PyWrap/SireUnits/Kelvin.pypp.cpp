// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Kelvin.pypp.hpp"
#include "boost/python.hpp"
#include "sireunits_headers.h"

namespace bp = boost::python;

SireUnits::Kelvin __copy__(const SireUnits::Kelvin &other){ return SireUnits::Kelvin(other); }

const char* pvt_get_name(const SireUnits::Kelvin&){ return "SireUnits::Kelvin";}

void register_Kelvin_class(){

    bp::class_< SireUnits::Kelvin, bp::bases< SireUnits::Dimension::Temperature > >( "Kelvin" )    
        .def( bp::init< >() )    
        .def( bp::init< SireUnits::Dimension::DerivedUnit const & >(( bp::arg("unit") )) )    
        .def( bp::self * bp::other<SireUnits::Dimension::Unit>() )    
        .def( bp::self / bp::other<SireUnits::Dimension::Unit>() )    
        .def( "__copy__", &__copy__)    
        .def( "__str__", &pvt_get_name);

}
