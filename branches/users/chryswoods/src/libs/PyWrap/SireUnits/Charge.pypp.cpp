// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Charge.pypp.hpp"
#include "boost/python.hpp"
#include "sireunits_headers.h"

namespace bp = boost::python;

SireUnits::Dimension::Charge __copy__(const SireUnits::Dimension::Charge &other){ return SireUnits::Dimension::Charge(other); }

const char* pvt_get_name(const SireUnits::Dimension::Charge&){ return "SireUnits::Dimension::Charge";}

void register_Charge_class(){

    bp::class_< SireUnits::Dimension::Charge, bp::bases< SireUnits::Dimension::Unit > >( "Charge", bp::init< double >(( bp::arg("scale_factor") )) )    
        .def( bp::init< SireUnits::Dimension::DerivedUnit const & >(( bp::arg("unit") )) )    
        .def( bp::self * bp::other< SireUnits::Dimension::Quantity >() )    
        .def( bp::other< double >() * bp::self )    
        .def( bp::self / bp::other< SireUnits::Dimension::Quantity >() )    
        .def( bp::other< double >() / bp::self )    
        .def( bp::self * bp::other<SireUnits::Dimension::Unit>() )    
        .def( bp::self / bp::other<SireUnits::Dimension::Unit>() )    
        .def( "__copy__", &__copy__)    
        .def( "__str__", &pvt_get_name);

}
