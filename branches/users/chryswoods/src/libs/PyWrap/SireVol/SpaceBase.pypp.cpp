// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "SpaceBase.pypp.hpp"
#include "boost/python.hpp"
#include "sirevol_headers.h"
#include "SireMaths/vector.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"

namespace bp = boost::python;

void register_SpaceBase_class(){

    bp::class_< SireVol::SpaceBase, boost::noncopyable >( "SpaceBase", bp::no_init )    
        .def( 
            "beyond"
            , (bool ( ::SireVol::SpaceBase::* )( double,::SireVol::CoordGroup const &,::SireVol::CoordGroup const & ) const)( &::SireVol::SpaceBase::beyond )
            , ( bp::arg("dist"), bp::arg("group0"), bp::arg("group1") ) )    
        .def( 
            "calcDist"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::DistMatrix & ) const)( &::SireVol::SpaceBase::calcDist )
            , ( bp::arg("group"), bp::arg("distmat") ) )    
        .def( 
            "calcDist"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::CoordGroup const &,::SireVol::DistMatrix & ) const)( &::SireVol::SpaceBase::calcDist )
            , ( bp::arg("group1"), bp::arg("group2"), bp::arg("distmat") ) )    
        .def( 
            "calcDist2"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::DistMatrix & ) const)( &::SireVol::SpaceBase::calcDist2 )
            , ( bp::arg("group"), bp::arg("distmat") ) )    
        .def( 
            "calcDist2"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::CoordGroup const &,::SireVol::DistMatrix & ) const)( &::SireVol::SpaceBase::calcDist2 )
            , ( bp::arg("group1"), bp::arg("group2"), bp::arg("distmat") ) )    
        .def( 
            "calcInvDist"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::DistMatrix & ) const)( &::SireVol::SpaceBase::calcInvDist )
            , ( bp::arg("group"), bp::arg("distmat") ) )    
        .def( 
            "calcInvDist"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::CoordGroup const &,::SireVol::DistMatrix & ) const)( &::SireVol::SpaceBase::calcInvDist )
            , ( bp::arg("group1"), bp::arg("group2"), bp::arg("distmat") ) )    
        .def( 
            "calcInvDist2"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::DistMatrix & ) const)( &::SireVol::SpaceBase::calcInvDist2 )
            , ( bp::arg("group"), bp::arg("distmat") ) )    
        .def( 
            "calcInvDist2"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::CoordGroup const &,::SireVol::DistMatrix & ) const)( &::SireVol::SpaceBase::calcInvDist2 )
            , ( bp::arg("group1"), bp::arg("group2"), bp::arg("distmat") ) )    
        .def( 
            "getCopiesWithin"
            , (::QList<boost::tuples::tuple<double, SireVol::CoordGroup, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> > ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::CoordGroup const &,double ) const)( &::SireVol::SpaceBase::getCopiesWithin )
            , ( bp::arg("group"), bp::arg("center"), bp::arg("dist") ) )    
        .def( 
            "getMinimumImage"
            , (::SireVol::CoordGroup ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireMaths::Vector const & ) const)( &::SireVol::SpaceBase::getMinimumImage )
            , ( bp::arg("group"), bp::arg("center") ) )    
        .def( 
            "getMinimumImage"
            , (::QVector<SireVol::CoordGroup> ( ::SireVol::SpaceBase::* )( ::QVector<SireVol::CoordGroup> const &,::SireMaths::Vector const & ) const)( &::SireVol::SpaceBase::getMinimumImage )
            , ( bp::arg("groups"), bp::arg("center") ) )    
        .def( 
            "minimumDistance"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const &,::SireVol::CoordGroup const & ) const)( &::SireVol::SpaceBase::minimumDistance )
            , ( bp::arg("group0"), bp::arg("group1") ) )    
        .def( 
            "minimumDistance"
            , (double ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const & ) const)( &::SireVol::SpaceBase::minimumDistance )
            , ( bp::arg("group") ) )    
        .def( 
            "moveToCenterBox"
            , (::SireVol::CoordGroup ( ::SireVol::SpaceBase::* )( ::SireVol::CoordGroup const & ) const)( &::SireVol::SpaceBase::moveToCenterBox )
            , ( bp::arg("group") ) )    
        .def( 
            "moveToCenterBox"
            , (::QVector<SireVol::CoordGroup> ( ::SireVol::SpaceBase::* )( ::QVector<SireVol::CoordGroup> const & ) const)( &::SireVol::SpaceBase::moveToCenterBox )
            , ( bp::arg("groups") ) )    
        .def( 
            "what"
            , (char const * ( ::SireVol::SpaceBase::* )(  ) const)( &::SireVol::SpaceBase::what ) );

}
