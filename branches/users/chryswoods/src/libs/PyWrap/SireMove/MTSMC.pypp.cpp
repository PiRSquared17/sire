// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "MTSMC.pypp.hpp"
#include "boost/python.hpp"
#include "siremove_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/moleculegroup.h"
#include "SireSystem/simsystem.h"

namespace bp = boost::python;

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMove::MTSMC&){ return "SireMove::MTSMC";}

void register_MTSMC_class(){

    bp::class_< SireMove::MTSMC, bp::bases< SireMove::MonteCarlo >, boost::noncopyable >( "MTSMC" )    
        .def( 
            "assertCompatibleWith"
            , (void ( ::SireMove::MTSMC::* )( ::SireSystem::QuerySystem & ) const)( &::SireMove::MTSMC::assertCompatibleWith )
            , ( bp::arg("system") ) )    
        .def( 
            "fastEnergyComponent"
            , (::SireCAS::Symbol const & ( ::SireMove::MTSMC::* )(  ) const)( &::SireMove::MTSMC::fastEnergyComponent )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "move"
            , (void ( ::SireMove::MTSMC::* )( ::SireSystem::SimSystem & ) )( &::SireMove::MTSMC::move )
            , ( bp::arg("system") ) )    
        .def( 
            "moves"
            , (::SireSystem::Moves const & ( ::SireMove::MTSMC::* )(  ) const)( &::SireMove::MTSMC::moves )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "numFastMoves"
            , (::quint32 ( ::SireMove::MTSMC::* )(  ) const)( &::SireMove::MTSMC::numFastMoves ) )    
        .def( 
            "setFastEnergyComponent"
            , (void ( ::SireMove::MTSMC::* )( ::SireCAS::Symbol const & ) )( &::SireMove::MTSMC::setFastEnergyComponent )
            , ( bp::arg("symbol") ) )    
        .def( 
            "setMoves"
            , (void ( ::SireMove::MTSMC::* )( ::SireSystem::Moves const & ) )( &::SireMove::MTSMC::setMoves )
            , ( bp::arg("moves") ) )    
        .def( 
            "setMoves"
            , (void ( ::SireMove::MTSMC::* )( ::SireSystem::Moves const &,::SireCAS::Symbol const & ) )( &::SireMove::MTSMC::setMoves )
            , ( bp::arg("moves"), bp::arg("fastcomponent") ) )    
        .def( 
            "setNumFastMoves"
            , (void ( ::SireMove::MTSMC::* )( ::quint32 ) )( &::SireMove::MTSMC::setNumFastMoves )
            , ( bp::arg("nmoves") ) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireMove::MTSMC::typeName ) )    
        .def( 
            "what"
            , (char const * ( ::SireMove::MTSMC::* )(  ) const)( &::SireMove::MTSMC::what ) )    
        .staticmethod( "typeName" )    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMove::MTSMC >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMove::MTSMC >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
