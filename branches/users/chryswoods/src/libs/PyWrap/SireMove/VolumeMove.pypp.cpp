// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "VolumeMove.pypp.hpp"
#include "boost/python.hpp"
#include "siremove_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/moleculegroup.h"
#include "SireSystem/simsystem.h"

namespace bp = boost::python;

SireMove::VolumeMove __copy__(const SireMove::VolumeMove &other){ return SireMove::VolumeMove(other); }

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMove::VolumeMove&){ return "SireMove::VolumeMove";}

void register_VolumeMove_class(){

    bp::class_< SireMove::VolumeMove, bp::bases< SireMove::MonteCarlo > >( "VolumeMove", bp::init< bp::optional< SireMaths::RanGenerator const & > >(( bp::arg("generator")=::SireMaths::RanGenerator( ) )) )    
        .def( bp::init< SireMove::MolMappingFunction const &, bp::optional< SireMaths::RanGenerator const & > >(( bp::arg("mapfunc"), bp::arg("generator")=::SireMaths::RanGenerator( ) )) )    
        .def( bp::init< SireMove::MolMappingFunction const &, SireMove::VolChangingFunction const &, bp::optional< SireMaths::RanGenerator const & > >(( bp::arg("mapfunc"), bp::arg("changefunc"), bp::arg("generator")=::SireMaths::RanGenerator( ) )) )    
        .def( 
            "assertCompatibleWith"
            , (void ( ::SireMove::VolumeMove::* )( ::SireSystem::QuerySystem & ) const)( &::SireMove::VolumeMove::assertCompatibleWith )
            , ( bp::arg("system") ) )    
        .def( 
            "mappingFunction"
            , (::SireMove::MolMappingFunction const & ( ::SireMove::VolumeMove::* )(  ) const)( &::SireMove::VolumeMove::mappingFunction )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "move"
            , (void ( ::SireMove::VolumeMove::* )( ::SireSystem::SimSystem & ) )( &::SireMove::VolumeMove::move )
            , ( bp::arg("system") ) )    
        .def( 
            "pressure"
            , (::SireUnits::Dimension::Pressure ( ::SireMove::VolumeMove::* )(  ) const)( &::SireMove::VolumeMove::pressure ) )    
        .def( 
            "setMappingFunction"
            , (void ( ::SireMove::VolumeMove::* )( ::SireMove::MolMappingFunction const & ) )( &::SireMove::VolumeMove::setMappingFunction )
            , ( bp::arg("mapfunc") ) )    
        .def( 
            "setPressure"
            , (void ( ::SireMove::VolumeMove::* )( ::SireUnits::Dimension::Pressure ) )( &::SireMove::VolumeMove::setPressure )
            , ( bp::arg("pressure") ) )    
        .def( 
            "setVolumeChangingFunction"
            , (void ( ::SireMove::VolumeMove::* )( ::SireMove::VolChangingFunction const & ) )( &::SireMove::VolumeMove::setVolumeChangingFunction )
            , ( bp::arg("changefunc") ) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireMove::VolumeMove::typeName ) )    
        .def( 
            "volumeChangingFunction"
            , (::SireMove::VolChangingFunction const & ( ::SireMove::VolumeMove::* )(  ) const)( &::SireMove::VolumeMove::volumeChangingFunction )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "what"
            , (char const * ( ::SireMove::VolumeMove::* )(  ) const)( &::SireMove::VolumeMove::what ) )    
        .staticmethod( "typeName" )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMove::VolumeMove >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMove::VolumeMove >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
