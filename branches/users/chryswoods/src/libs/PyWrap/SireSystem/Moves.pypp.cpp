// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Moves.pypp.hpp"
#include "boost/python.hpp"
#include "siresystem_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"

namespace bp = boost::python;

void register_Moves_class(){

    bp::class_< SireSystem::Moves, boost::noncopyable >( "Moves" )    
        .def( bp::init< >() )    
        .def( bp::init< SireSystem::Move const & >(( bp::arg("move") )) )    
        .def( bp::init< SireSystem::MovesBase const & >(( bp::arg("moves") )) )    
        .def( 
            "count"
            , &::SireSystem::Moves::count )    
        .def( 
            "initialise"
            , &::SireSystem::Moves::initialise
            , ( bp::arg("system") ) )    
        .def( 
            "pause"
            , &::SireSystem::Moves::pause )    
        .def( 
            "percentProgress"
            , &::SireSystem::Moves::percentProgress )    
        .def( 
            "play"
            , &::SireSystem::Moves::play )    
        .def( 
            "rerun"
            , &::SireSystem::Moves::rerun
            , ( bp::arg("system") ) )    
        .def( 
            "resume"
            , &::SireSystem::Moves::resume
            , ( bp::arg("system") ) )    
        .def( 
            "run"
            , &::SireSystem::Moves::run
            , ( bp::arg("system"), bp::arg("nmoves") ) )    
        .def( 
            "stop"
            , &::SireSystem::Moves::stop );

}
