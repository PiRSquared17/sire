// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "SameMoves.pypp.hpp"
#include "boost/python.hpp"
#include "siresystem_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"

namespace bp = boost::python;

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireSystem::SameMoves&){ return "SireSystem::SameMoves";}

void register_SameMoves_class(){

    bp::class_< SireSystem::SameMoves, bp::bases< SireSystem::MovesBase > >( "SameMoves" )    
        .def( bp::init< >() )    
        .def( bp::init< SireSystem::Move const & >(( bp::arg("move") )) )    
        .def( 
            "count"
            , (int ( ::SireSystem::SameMoves::* )(  ) const)( &::SireSystem::SameMoves::count ) )    
        .def( 
            "initialise"
            , (void ( ::SireSystem::SameMoves::* )( ::SireSystem::SimSystem & ) )( &::SireSystem::SameMoves::initialise )
            , ( bp::arg("system") ) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireSystem::SameMoves::typeName ) )    
        .def( 
            "what"
            , (char const * ( ::SireSystem::SameMoves::* )(  ) const)( &::SireSystem::SameMoves::what ) )    
        .staticmethod( "typeName" )    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireSystem::SameMoves >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireSystem::SameMoves >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
