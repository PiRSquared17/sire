// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "QuerySystem.pypp.hpp"
#include "boost/python.hpp"
#include "siresystem_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireFF/ffgroupid.h"

namespace bp = boost::python;

const char* pvt_get_name(const SireSystem::QuerySystem&){ return "SireSystem::QuerySystem";}

void register_QuerySystem_class(){

    bp::class_< SireSystem::QuerySystem, boost::noncopyable >( "QuerySystem", bp::no_init )    
        .def( 
            "ID"
            , (::SireSystem::SystemID ( ::SireSystem::QuerySystem::* )(  ) const)( &::SireSystem::QuerySystem::ID ) )    
        .def( 
            "assertContains"
            , (void ( ::SireSystem::QuerySystem::* )( ::SireCAS::Symbol const & ) const)( &::SireSystem::QuerySystem::assertContains )
            , ( bp::arg("symbol") ) )    
        .def( 
            "assertContains"
            , (void ( ::SireSystem::QuerySystem::* )( ::SireMol::MoleculeGroupID ) const)( &::SireSystem::QuerySystem::assertContains )
            , ( bp::arg("groupid") ) )    
        .def( 
            "assertContains"
            , (void ( ::SireSystem::QuerySystem::* )( ::SireMol::MoleculeID ) const)( &::SireSystem::QuerySystem::assertContains )
            , ( bp::arg("molid") ) )    
        .def( 
            "checkPoint"
            , (::SireSystem::CheckPoint ( ::SireSystem::QuerySystem::* )(  ) )( &::SireSystem::QuerySystem::checkPoint ) )    
        .def( 
            "containsProperty"
            , (bool ( ::SireSystem::QuerySystem::* )( ::QString const & ) )( &::SireSystem::QuerySystem::containsProperty )
            , ( bp::arg("name") ) )    
        .def( 
            "containsProperty"
            , (bool ( ::SireSystem::QuerySystem::* )( ::SireFF::ForceFieldID,::QString const & ) )( &::SireSystem::QuerySystem::containsProperty )
            , ( bp::arg("ffid"), bp::arg("name") ) )    
        .def( 
            "energies"
            , (::SireCAS::Values ( ::SireSystem::QuerySystem::* )(  ) )( &::SireSystem::QuerySystem::energies ) )    
        .def( 
            "energies"
            , (::SireCAS::Values ( ::SireSystem::QuerySystem::* )( ::QSet<SireFF::FFComponent> const & ) )( &::SireSystem::QuerySystem::energies )
            , ( bp::arg("components") ) )    
        .def( 
            "energies"
            , (::SireCAS::Values ( ::SireSystem::QuerySystem::* )( ::QSet<SireCAS::Function> const & ) )( &::SireSystem::QuerySystem::energies )
            , ( bp::arg("components") ) )    
        .def( 
            "energy"
            , (double ( ::SireSystem::QuerySystem::* )(  ) )( &::SireSystem::QuerySystem::energy ) )    
        .def( 
            "energy"
            , (double ( ::SireSystem::QuerySystem::* )( ::SireCAS::Function const & ) )( &::SireSystem::QuerySystem::energy )
            , ( bp::arg("component") ) )    
        .def( 
            "energy"
            , (double ( ::SireSystem::QuerySystem::* )( ::SireFF::FFComponent const & ) )( &::SireSystem::QuerySystem::energy )
            , ( bp::arg("component") ) )    
        .def( 
            "energy"
            , (double ( ::SireSystem::QuerySystem::* )( ::SireCAS::Symbol const & ) )( &::SireSystem::QuerySystem::energy )
            , ( bp::arg("symbol") ) )    
        .def( 
            "energy"
            , (double ( ::SireSystem::QuerySystem::* )( ::SireCAS::SymbolID ) )( &::SireSystem::QuerySystem::energy )
            , ( bp::arg("symid") ) )    
        .def( 
            "energy"
            , (double ( ::SireSystem::QuerySystem::* )( ::SireCAS::Expression const & ) )( &::SireSystem::QuerySystem::energy )
            , ( bp::arg("expression") ) )    
        .def( 
            "energy"
            , (double ( ::SireSystem::QuerySystem::* )( ::SireFF::FFExpression const & ) )( &::SireSystem::QuerySystem::energy )
            , ( bp::arg("expression") ) )    
        .def( 
            "forceField"
            , (::SireFF::ForceField ( ::SireSystem::QuerySystem::* )( ::SireFF::ForceFieldID ) )( &::SireSystem::QuerySystem::forceField )
            , ( bp::arg("ffid") ) )    
        .def( 
            "forceFields"
            , (::SireFF::ForceFieldsBase const & ( ::SireSystem::QuerySystem::* )(  ) const)( &::SireSystem::QuerySystem::forceFields )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "forceFieldsWithProperty"
            , (::QSet<SireFF::ForceFieldID> ( ::SireSystem::QuerySystem::* )( ::QString const & ) )( &::SireSystem::QuerySystem::forceFieldsWithProperty )
            , ( bp::arg("name") ) )    
        .def( 
            "getProperty"
            , (::QHash<SireFF::ForceFieldID,SireBase::Property> ( ::SireSystem::QuerySystem::* )( ::QString const & ) )( &::SireSystem::QuerySystem::getProperty )
            , ( bp::arg("name") ) )    
        .def( 
            "getProperty"
            , (::SireBase::Property ( ::SireSystem::QuerySystem::* )( ::SireFF::ForceFieldID,::QString const & ) )( &::SireSystem::QuerySystem::getProperty )
            , ( bp::arg("ffid"), bp::arg("name") ) )    
        .def( 
            "getProperty"
            , (::QHash<SireFF::ForceFieldID,SireBase::Property> ( ::SireSystem::QuerySystem::* )( ::QSet<SireFF::ForceFieldID> const &,::QString const & ) )( &::SireSystem::QuerySystem::getProperty )
            , ( bp::arg("ffids"), bp::arg("name") ) )    
        .def( 
            "group"
            , (::SireMol::MoleculeGroup ( ::SireSystem::QuerySystem::* )( ::SireMol::MoleculeGroupID ) const)( &::SireSystem::QuerySystem::group )
            , ( bp::arg("id") ) )    
        .def( 
            "groups"
            , (::SireMol::MoleculeGroups const & ( ::SireSystem::QuerySystem::* )(  ) const)( &::SireSystem::QuerySystem::groups )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "info"
            , (::SireSystem::SystemData const & ( ::SireSystem::QuerySystem::* )(  ) const)( &::SireSystem::QuerySystem::info )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "molecule"
            , (::SireMol::PartialMolecule ( ::SireSystem::QuerySystem::* )( ::SireMol::PartialMolecule const & ) const)( &::SireSystem::QuerySystem::molecule )
            , ( bp::arg("mol") ) )    
        .def( 
            "molecule"
            , (::SireMol::PartialMolecule ( ::SireSystem::QuerySystem::* )( ::SireMol::MoleculeID ) const)( &::SireSystem::QuerySystem::molecule )
            , ( bp::arg("molid") ) )    
        .def( 
            "moleculeIDs"
            , (::QSet<SireMol::MoleculeID> ( ::SireSystem::QuerySystem::* )(  ) const)( &::SireSystem::QuerySystem::moleculeIDs ) )    
        .def( 
            "molecules"
            , (::SireMol::Molecules ( ::SireSystem::QuerySystem::* )(  ) const)( &::SireSystem::QuerySystem::molecules ) )    
        .def( 
            "monitors"
            , (::SireSystem::SystemMonitors const & ( ::SireSystem::QuerySystem::* )(  ) const)( &::SireSystem::QuerySystem::monitors )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "properties"
            , (::QHash<QString,QHash<SireFF::ForceFieldID, SireBase::Property> > ( ::SireSystem::QuerySystem::* )(  ) )( &::SireSystem::QuerySystem::properties ) )    
        .def( 
            "version"
            , (::SireBase::Version const & ( ::SireSystem::QuerySystem::* )(  ) const)( &::SireSystem::QuerySystem::version )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( "__str__", &pvt_get_name);

}
