// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "NoCutoff.pypp.hpp"
#include "boost/python.hpp"
#include "siremm_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"

namespace bp = boost::python;

SireMM::NoCutoff __copy__(const SireMM::NoCutoff &other){ return SireMM::NoCutoff(other); }

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMM::NoCutoff&){ return "SireMM::NoCutoff";}

void register_NoCutoff_class(){

    bp::class_< SireMM::NoCutoff, bp::bases< SireMM::SwitchFuncBase > >( "NoCutoff" )    
        .def( bp::init< >() )    
        .def( 
            "electrostaticScaleFactor"
            , (double ( ::SireMM::NoCutoff::* )( double ) const)( &::SireMM::NoCutoff::electrostaticScaleFactor )
            , ( bp::arg("dist") ) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireMM::NoCutoff::typeName ) )    
        .def( 
            "vdwScaleFactor"
            , (double ( ::SireMM::NoCutoff::* )( double ) const)( &::SireMM::NoCutoff::vdwScaleFactor )
            , ( bp::arg("dist") ) )    
        .def( 
            "what"
            , (char const * ( ::SireMM::NoCutoff::* )(  ) const)( &::SireMM::NoCutoff::what ) )    
        .staticmethod( "typeName" )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMM::NoCutoff >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMM::NoCutoff >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
