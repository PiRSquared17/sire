// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "ResBondInfo.pypp.hpp"
#include "boost/python.hpp"
#include "siremm_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"

namespace bp = boost::python;

SireMM::ResBondInfo __copy__(const SireMM::ResBondInfo &other){ return SireMM::ResBondInfo(other); }

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMM::ResBondInfo&){ return "SireMM::ResBondInfo";}

void register_ResBondInfo_class(){

    bp::class_< SireMM::ResBondInfo, bp::bases< SireMM::ResInternalInfo<SireMol::Bond> > >( "ResBondInfo" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMM::MolBondInfo const &, SireMol::ResNum >(( bp::arg("molinfo"), bp::arg("resnum") )) )    
        .def( bp::init< SireMM::ResInternalInfo<SireMol::Bond> const & >(( bp::arg("other") )) )    
        .def( 
            "bonds"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Bond> ( ::SireMM::ResBondInfo::* )(  ) const)( &::SireMM::ResBondInfo::bonds ) )    
        .def( 
            "interBonds"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Bond> ( ::SireMM::ResBondInfo::* )(  ) const)( &::SireMM::ResBondInfo::interBonds ) )    
        .def( 
            "intraBonds"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Bond> ( ::SireMM::ResBondInfo::* )(  ) const)( &::SireMM::ResBondInfo::intraBonds ) )    
        .def( 
            "nBonds"
            , (int ( ::SireMM::ResBondInfo::* )(  ) const)( &::SireMM::ResBondInfo::nBonds ) )    
        .def( 
            "nInterBonds"
            , (int ( ::SireMM::ResBondInfo::* )(  ) const)( &::SireMM::ResBondInfo::nInterBonds ) )    
        .def( 
            "nIntraBonds"
            , (int ( ::SireMM::ResBondInfo::* )(  ) const)( &::SireMM::ResBondInfo::nIntraBonds ) )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMM::ResBondInfo >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMM::ResBondInfo >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
