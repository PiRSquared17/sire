// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "InternalInfo_Dihedral_.pypp.hpp"
#include "boost/python.hpp"
#include "siremm_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/molecules.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"

namespace bp = boost::python;

SireMM::detail::InternalInfo<SireMol::Dihedral> __copy__(const SireMM::detail::InternalInfo<SireMol::Dihedral> &other){ return SireMM::detail::InternalInfo<SireMol::Dihedral>(other); }

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMM::detail::InternalInfo<SireMol::Dihedral>&){ return "SireMM::detail::InternalInfo<SireMol::Dihedral>";}

void register_InternalInfo_Dihedral__class(){

    bp::class_< SireMM::detail::InternalInfo<SireMol::Dihedral> >( "InternalInfo_Dihedral_" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMol::MoleculeInfo const & >(( bp::arg("molinfo") )) )    
        .def( 
            "at"
            , (::SireMol::GroupIndexID ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::Dihedral const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::at )
            , ( bp::arg("internal") ) )    
        .def( 
            "begin"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::begin ) )    
        .def( 
            "contains"
            , (bool ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::Dihedral const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::contains )
            , ( bp::arg("internal") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::contains )
            , ( bp::arg("resnum") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::AtomIndex const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::contains )
            , ( bp::arg("atom") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMM::DihedralResID const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::contains )
            , ( bp::arg("resid") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::GroupID ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::contains )
            , ( bp::arg("id") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::GroupIndexID const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::contains )
            , ( bp::arg("id") ) )    
        .def( 
            "count"
            , (::size_t ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::count ) )    
        .def( 
            "end"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::end ) )    
        .def( 
            "find"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::Dihedral const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::find )
            , ( bp::arg("internal") ) )    
        .def( 
            "getInternal"
            , (::SireMol::Dihedral ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::GroupIndexID const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::getInternal )
            , ( bp::arg("id") ) )    
        .def( 
            "getInternals"
            , (::QSet<SireMol::Dihedral> const ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::QSet<SireMol::GroupIndexID> const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::getInternals )
            , ( bp::arg("ids") ) )    
        .def( 
            "groupIDs"
            , (::QSet<SireMol::GroupID> const ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::groupIDs ) )    
        .def( 
            "groupIDs"
            , (::QSet<SireMol::GroupID> const ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::groupIDs )
            , ( bp::arg("resnum") ) )    
        .def( 
            "groupSizes"
            , (::QHash<SireMol::GroupID, unsigned> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::groupSizes ) )    
        .def( 
            "index"
            , (::SireMol::GroupIndexID ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::Dihedral const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::index )
            , ( bp::arg("internal") ) )    
        .def( 
            "info"
            , (::SireMol::MoleculeInfo const & ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::info )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "interGroupIDs"
            , (::QSet<SireMol::GroupID> const ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::interGroupIDs ) )    
        .def( 
            "interGroupIDs"
            , (::QSet<SireMol::GroupID> const ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::interGroupIDs )
            , ( bp::arg("resnum") ) )    
        .def( 
            "interInternals"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::interInternals ) )    
        .def( 
            "interInternals"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::interInternals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "internals"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::internals ) )    
        .def( 
            "internals"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::internals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "internals"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::GroupID ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::internals )
            , ( bp::arg("groupid") ) )    
        .def( 
            "intraGroupIDs"
            , (::QSet<SireMol::GroupID> const ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::intraGroupIDs ) )    
        .def( 
            "intraGroupIDs"
            , (::QSet<SireMol::GroupID> const ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::intraGroupIDs )
            , ( bp::arg("resnum") ) )    
        .def( 
            "intraInternals"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::intraInternals ) )    
        .def( 
            "intraInternals"
            , (::SireMM::detail::InternalGroupIterator<SireMol::Dihedral> ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::intraInternals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "isEmpty"
            , (bool ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::isEmpty ) )    
        .def( 
            "nGroups"
            , (int ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::nGroups ) )    
        .def( 
            "nInterInternals"
            , (int ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::nInterInternals ) )    
        .def( 
            "nInterInternals"
            , (int ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::nInterInternals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "nInternals"
            , (int ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::nInternals ) )    
        .def( 
            "nInternals"
            , (int ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::GroupID ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::nInternals )
            , ( bp::arg("group") ) )    
        .def( 
            "nInternals"
            , (int ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::nInternals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "nIntraInternals"
            , (int ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::nIntraInternals ) )    
        .def( 
            "nIntraInternals"
            , (int ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::ResNum ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::nIntraInternals )
            , ( bp::arg("resnum") ) )    
        .def( 
            "__getitem__"
            , (::SireMol::GroupIndexID ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )( ::SireMol::Dihedral const & ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::operator[] )
            , ( bp::arg("internal") ) )    
        .def( 
            "size"
            , (::size_t ( ::SireMM::detail::InternalInfo<SireMol::Dihedral>::* )(  ) const)( &::SireMM::detail::InternalInfo<SireMol::Dihedral>::size ) )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMM::detail::InternalInfo<SireMol::Dihedral> >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMM::detail::InternalInfo<SireMol::Dihedral> >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
