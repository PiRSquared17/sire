// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "AtomIndex.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMol/moleculedata.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"
#include "SireVol/space.h"

namespace bp = boost::python;

SireMol::AtomIndex __copy__(const SireMol::AtomIndex &other){ return SireMol::AtomIndex(other); }

#include "SireQt/qdatastream.hpp"

#include "SirePy/str.hpp"

void register_AtomIndex_class(){

    bp::class_< SireMol::AtomIndex >( "AtomIndex", bp::init< bp::optional< QString const &, SireMol::ResNum > >(( bp::arg("nm")=QString::null, bp::arg("rnum")=::SireMol::ResNum( 1 ) )) )    
        .def( bp::init< boost::tuples::tuple<QString, SireMol::ResNum, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> const & >(( bp::arg("tuple") )) )    
        .def( 
            "name"
            , &::SireMol::AtomIndex::name )    
        .def( bp::self != bp::self )    
        .def( bp::self < bp::self )    
        .def( bp::self <= bp::self )    
        .def( bp::self == bp::self )    
        .def( bp::self > bp::self )    
        .def( bp::self >= bp::self )    
        .def( 
            "resNum"
            , &::SireMol::AtomIndex::resNum )    
        .def( 
            "toString"
            , &::SireMol::AtomIndex::toString )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMol::AtomIndex >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMol::AtomIndex >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &SirePy::__str__< ::SireMol::AtomIndex > );

}
