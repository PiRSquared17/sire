// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "AtomIndex.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"

namespace bp = boost::python;

void register_AtomIndex_class(){

    bp::class_< SireMol::AtomIndex >( "AtomIndex", bp::init< bp::optional< QString const &, SireMol::ResNum > >(( bp::arg("nm")=QString::null, bp::arg("rnum")=::SireMol::ResNum( 1 ) )) )    
        .def( bp::init< boost::tuples::tuple<QString, SireMol::ResNum, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> const & >(( bp::arg("tuple") )) )    
        .def( 
            "name"
            , (::QString ( ::SireMol::AtomIndex::* )(  ) const)( &::SireMol::AtomIndex::name ) )    
        .def( bp::self != bp::self )    
        .def( bp::self < bp::self )    
        .def( bp::self <= bp::self )    
        .def( bp::self == bp::self )    
        .def( bp::self > bp::self )    
        .def( bp::self >= bp::self )    
        .def( 
            "resNum"
            , (::SireMol::ResNum ( ::SireMol::AtomIndex::* )(  ) const)( &::SireMol::AtomIndex::resNum ) )    
        .def( 
            "toString"
            , (::QString ( ::SireMol::AtomIndex::* )(  ) const)( &::SireMol::AtomIndex::toString ) );

}
