// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "MoleculeGroups.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"

namespace bp = boost::python;

void register_MoleculeGroups_class(){

    bp::class_< SireMol::MoleculeGroups >( "MoleculeGroups" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMol::MoleculeGroup const & >(( bp::arg("group") )) )    
        .def( 
            "add"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::SireMol::MoleculeGroup const & ) )( &::SireMol::MoleculeGroups::add )
            , ( bp::arg("group") ) )    
        .def( 
            "add"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::SireMol::Molecule const &,::SireMol::MoleculeGroupID ) )( &::SireMol::MoleculeGroups::add )
            , ( bp::arg("molecule"), bp::arg("groupid") ) )    
        .def( 
            "assertContains"
            , &::SireMol::MoleculeGroups::assertContains
            , ( bp::arg("groupid") ) )    
        .def( 
            "change"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::SireMol::MoleculeGroup const & ) )( &::SireMol::MoleculeGroups::change )
            , ( bp::arg("group") ) )    
        .def( 
            "change"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::SireMol::Molecule const & ) )( &::SireMol::MoleculeGroups::change )
            , ( bp::arg("molecule") ) )    
        .def( 
            "change"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::QHash<SireMol::MoleculeID,SireMol::Molecule> const & ) )( &::SireMol::MoleculeGroups::change )
            , ( bp::arg("molecules") ) )    
        .def( 
            "clear"
            , &::SireMol::MoleculeGroups::clear )    
        .def( 
            "contains"
            , &::SireMol::MoleculeGroups::contains
            , ( bp::arg("molid") ) )    
        .def( 
            "count"
            , &::SireMol::MoleculeGroups::count )    
        .def( 
            "group"
            , (::SireMol::MoleculeGroup const & ( ::SireMol::MoleculeGroups::* )( ::SireMol::MoleculeGroupID ) const)( &::SireMol::MoleculeGroups::group )
            , ( bp::arg("groupid") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "group"
            , (::SireMol::MoleculeGroup const & ( ::SireMol::MoleculeGroups::* )( ::QString const & ) const)( &::SireMol::MoleculeGroups::group )
            , ( bp::arg("name") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "groups"
            , (::QVector<SireMol::MoleculeGroup> ( ::SireMol::MoleculeGroups::* )(  ) const)( &::SireMol::MoleculeGroups::groups ) )    
        .def( 
            "groups"
            , (::QVector<SireMol::MoleculeGroup> ( ::SireMol::MoleculeGroups::* )( ::SireMol::MoleculeID ) const)( &::SireMol::MoleculeGroups::groups )
            , ( bp::arg("molid") ) )    
        .def( 
            "groupsContaining"
            , &::SireMol::MoleculeGroups::groupsContaining
            , ( bp::arg("molid") ) )    
        .def( 
            "moleculeIDs"
            , &::SireMol::MoleculeGroups::moleculeIDs )    
        .def( 
            "molecules"
            , &::SireMol::MoleculeGroups::molecules )    
        .def( 
            "nMolecules"
            , &::SireMol::MoleculeGroups::nMolecules )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "remove"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::SireMol::MoleculeGroup const & ) )( &::SireMol::MoleculeGroups::remove )
            , ( bp::arg("group") ) )    
        .def( 
            "remove"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::SireMol::MoleculeGroupID ) )( &::SireMol::MoleculeGroups::remove )
            , ( bp::arg("groupid") ) )    
        .def( 
            "remove"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::QString const & ) )( &::SireMol::MoleculeGroups::remove )
            , ( bp::arg("groupname") ) )    
        .def( 
            "remove"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::SireMol::Molecule const &,::SireMol::MoleculeGroupID ) )( &::SireMol::MoleculeGroups::remove )
            , ( bp::arg("molecule"), bp::arg("groupid") ) )    
        .def( 
            "remove"
            , (bool ( ::SireMol::MoleculeGroups::* )( ::SireMol::Molecule const & ) )( &::SireMol::MoleculeGroups::remove )
            , ( bp::arg("molecule") ) );

}
