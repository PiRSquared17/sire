// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "VariantProperty.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"

namespace bp = boost::python;

void register_VariantProperty_class(){

    bp::class_< SireMol::VariantProperty, bp::bases< SireMol::PropertyBase > >( "VariantProperty" )    
        .def( bp::init< >() )    
        .def( bp::init< QVariant const & >(( bp::arg("value") )) )    
        .def( bp::init< SireMol::Property const & >(( bp::arg("other") )) )    
        .def( 
            "isCompatibleWith"
            , &::SireMol::VariantProperty::isCompatibleWith
            , ( bp::arg("arg0") ) )    
        .def( 
            "typeName"
            , &::SireMol::VariantProperty::typeName )    
        .def( 
            "what"
            , &::SireMol::VariantProperty::what )    
        .staticmethod( "typeName" );

}
