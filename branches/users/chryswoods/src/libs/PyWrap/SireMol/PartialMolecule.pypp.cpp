// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "PartialMolecule.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMol/moleculedata.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"
#include "SireVol/space.h"

namespace bp = boost::python;

SireMol::PartialMolecule __copy__(const SireMol::PartialMolecule &other){ return SireMol::PartialMolecule(other); }

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMol::PartialMolecule&){ return "SireMol::PartialMolecule";}

void register_PartialMolecule_class(){

    bp::class_< SireMol::PartialMolecule, bp::bases< SireMol::MoleculeView > >( "PartialMolecule" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMol::MolDataView const & >(( bp::arg("molecule") )) )    
        .def( bp::init< SireMol::MolDataView const &, SireMol::SelectionFromMol const & >(( bp::arg("molecule"), bp::arg("selection") )) )    
        .def( 
            "ID"
            , &::SireMol::PartialMolecule::ID )    
        .def( 
            "change"
            , &::SireMol::PartialMolecule::change
            , ( bp::arg("other") ) )    
        .def( 
            "info"
            , &::SireMol::PartialMolecule::info
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "name"
            , &::SireMol::PartialMolecule::name )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "version"
            , &::SireMol::PartialMolecule::version
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMol::PartialMolecule >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMol::PartialMolecule >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
