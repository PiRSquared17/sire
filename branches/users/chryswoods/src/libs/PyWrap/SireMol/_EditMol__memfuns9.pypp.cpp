// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "_EditMol__memfuns9.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMol/moleculedata.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"

namespace bp = boost::python;

void register_EditMol_memfuns9( EditMol_exposer_t& EditMol_exposer ){

    { //::SireMol::EditMol::removeAllInterBonds
    
        typedef void ( ::SireMol::EditMol::*removeAllInterBonds_function_type )( ::SireMol::ResID ) ;
        
        EditMol_exposer.def( 
            "removeAllInterBonds"
            , removeAllInterBonds_function_type( &::SireMol::EditMol::removeAllInterBonds )
            , ( bp::arg("resid") ) );
    
    }

    { //::SireMol::EditMol::removeAllInterBonds
    
        typedef void ( ::SireMol::EditMol::*removeAllInterBonds_function_type )( ::SireMol::AtomIndex const & ) ;
        
        EditMol_exposer.def( 
            "removeAllInterBonds"
            , removeAllInterBonds_function_type( &::SireMol::EditMol::removeAllInterBonds )
            , ( bp::arg("atom") ) );
    
    }

    { //::SireMol::EditMol::removeAllInterBonds
    
        typedef void ( ::SireMol::EditMol::*removeAllInterBonds_function_type )(  ) ;
        
        EditMol_exposer.def( 
            "removeAllInterBonds"
            , removeAllInterBonds_function_type( &::SireMol::EditMol::removeAllInterBonds ) );
    
    }

    { //::SireMol::EditMol::removeAllIntraBonds
    
        typedef void ( ::SireMol::EditMol::*removeAllIntraBonds_function_type )( ::SireMol::ResNum ) ;
        
        EditMol_exposer.def( 
            "removeAllIntraBonds"
            , removeAllIntraBonds_function_type( &::SireMol::EditMol::removeAllIntraBonds )
            , ( bp::arg("resnum") ) );
    
    }

    { //::SireMol::EditMol::removeAllIntraBonds
    
        typedef void ( ::SireMol::EditMol::*removeAllIntraBonds_function_type )( ::SireMol::ResID ) ;
        
        EditMol_exposer.def( 
            "removeAllIntraBonds"
            , removeAllIntraBonds_function_type( &::SireMol::EditMol::removeAllIntraBonds )
            , ( bp::arg("resid") ) );
    
    }

    { //::SireMol::EditMol::removeAllIntraBonds
    
        typedef void ( ::SireMol::EditMol::*removeAllIntraBonds_function_type )( ::SireMol::AtomIndex const & ) ;
        
        EditMol_exposer.def( 
            "removeAllIntraBonds"
            , removeAllIntraBonds_function_type( &::SireMol::EditMol::removeAllIntraBonds )
            , ( bp::arg("atom") ) );
    
    }

    { //::SireMol::EditMol::removeAllIntraBonds
    
        typedef void ( ::SireMol::EditMol::*removeAllIntraBonds_function_type )(  ) ;
        
        EditMol_exposer.def( 
            "removeAllIntraBonds"
            , removeAllIntraBonds_function_type( &::SireMol::EditMol::removeAllIntraBonds ) );
    
    }

    { //::SireMol::EditMol::renumberResidue
    
        typedef void ( ::SireMol::EditMol::*renumberResidue_function_type )( ::SireMol::ResNum,::SireMol::ResNum ) ;
        
        EditMol_exposer.def( 
            "renumberResidue"
            , renumberResidue_function_type( &::SireMol::EditMol::renumberResidue )
            , ( bp::arg("resnum"), bp::arg("newresnum") ) );
    
    }

    { //::SireMol::EditMol::residue
    
        typedef ::SireMol::EditRes ( ::SireMol::EditMol::*residue_function_type )( ::SireMol::ResNum ) const;
        
        EditMol_exposer.def( 
            "residue"
            , residue_function_type( &::SireMol::EditMol::residue )
            , ( bp::arg("resnum") ) );
    
    }

    { //::SireMol::EditMol::residue
    
        typedef ::SireMol::EditRes ( ::SireMol::EditMol::*residue_function_type )( ::SireMol::ResID ) const;
        
        EditMol_exposer.def( 
            "residue"
            , residue_function_type( &::SireMol::EditMol::residue )
            , ( bp::arg("resid") ) );
    
    }

    { //::SireMol::EditMol::residue
    
        typedef ::SireMol::EditRes ( ::SireMol::EditMol::*residue_function_type )( ::QString const & ) const;
        
        EditMol_exposer.def( 
            "residue"
            , residue_function_type( &::SireMol::EditMol::residue )
            , ( bp::arg("resname") ) );
    
    }

    { //::SireMol::EditMol::residueID
    
        typedef ::SireMol::ResID ( ::SireMol::EditMol::*residueID_function_type )( ::SireMol::ResNum ) const;
        
        EditMol_exposer.def( 
            "residueID"
            , residueID_function_type( &::SireMol::EditMol::residueID )
            , ( bp::arg("resnum") ) );
    
    }

    { //::SireMol::EditMol::residueName
    
        typedef ::QString ( ::SireMol::EditMol::*residueName_function_type )( ::SireMol::ResNum ) const;
        
        EditMol_exposer.def( 
            "residueName"
            , residueName_function_type( &::SireMol::EditMol::residueName )
            , ( bp::arg("resnum") ) );
    
    }

    { //::SireMol::EditMol::residueName
    
        typedef ::QString ( ::SireMol::EditMol::*residueName_function_type )( ::SireMol::ResID ) const;
        
        EditMol_exposer.def( 
            "residueName"
            , residueName_function_type( &::SireMol::EditMol::residueName )
            , ( bp::arg("resid") ) );
    
    }

    { //::SireMol::EditMol::residueNames
    
        typedef ::QStringList ( ::SireMol::EditMol::*residueNames_function_type )(  ) const;
        
        EditMol_exposer.def( 
            "residueNames"
            , residueNames_function_type( &::SireMol::EditMol::residueNames ) );
    
    }

    { //::SireMol::EditMol::residueNumber
    
        typedef ::SireMol::ResNum ( ::SireMol::EditMol::*residueNumber_function_type )( ::SireMol::ResID ) const;
        
        EditMol_exposer.def( 
            "residueNumber"
            , residueNumber_function_type( &::SireMol::EditMol::residueNumber )
            , ( bp::arg("resid") ) );
    
    }

    { //::SireMol::EditMol::residueNumber
    
        typedef ::SireMol::ResNum ( ::SireMol::EditMol::*residueNumber_function_type )( ::QString const & ) const;
        
        EditMol_exposer.def( 
            "residueNumber"
            , residueNumber_function_type( &::SireMol::EditMol::residueNumber )
            , ( bp::arg("resname") ) );
    
    }

    { //::SireMol::EditMol::residueNumbers
    
        typedef ::QVector<SireMol::ResNum> ( ::SireMol::EditMol::*residueNumbers_function_type )(  ) const;
        
        EditMol_exposer.def( 
            "residueNumbers"
            , residueNumbers_function_type( &::SireMol::EditMol::residueNumbers ) );
    
    }

    { //::SireMol::EditMol::residueNumbers
    
        typedef ::QVector<SireMol::ResNum> ( ::SireMol::EditMol::*residueNumbers_function_type )( ::QString const & ) const;
        
        EditMol_exposer.def( 
            "residueNumbers"
            , residueNumbers_function_type( &::SireMol::EditMol::residueNumbers )
            , ( bp::arg("resnam") ) );
    
    }

    { //::SireMol::EditMol::residueNumbers
    
        typedef ::QVector<SireMol::ResNum> ( ::SireMol::EditMol::*residueNumbers_function_type )( ::SireMol::CutGroupID ) const;
        
        EditMol_exposer.def( 
            "residueNumbers"
            , residueNumbers_function_type( &::SireMol::EditMol::residueNumbers )
            , ( bp::arg("cgid") ) );
    
    }

}
