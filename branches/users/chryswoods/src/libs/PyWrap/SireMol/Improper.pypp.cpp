// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Improper.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMol/moleculedata.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"
#include "SireVol/space.h"

namespace bp = boost::python;

SireMol::Improper __copy__(const SireMol::Improper &other){ return SireMol::Improper(other); }

#include "SireQt/qdatastream.hpp"

#include "SirePy/str.hpp"

void register_Improper_class(){

    bp::class_< SireMol::Improper >( "Improper" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMol::AtomIndex const &, SireMol::AtomIndex const &, SireMol::AtomIndex const &, SireMol::AtomIndex const & >(( bp::arg("atom0"), bp::arg("atom1"), bp::arg("atom2"), bp::arg("atom3") )) )    
        .def( bp::init< boost::tuples::tuple<SireMol::AtomIndex, SireMol::AtomIndex, SireMol::AtomIndex, SireMol::AtomIndex, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> const & >(( bp::arg("tuple") )) )    
        .def( bp::init< QString const &, QString const &, QString const &, QString const &, SireMol::ResNum >(( bp::arg("atom0"), bp::arg("atom1"), bp::arg("atom2"), bp::arg("atom3"), bp::arg("resnum") )) )    
        .def( bp::init< QString const &, SireMol::ResNum, QString const &, SireMol::ResNum, QString const &, SireMol::ResNum, QString const &, SireMol::ResNum >(( bp::arg("atm0"), bp::arg("res0"), bp::arg("atm1"), bp::arg("res1"), bp::arg("atm2"), bp::arg("res2"), bp::arg("atm3"), bp::arg("res3") )) )    
        .def( 
            "at"
            , &::SireMol::Improper::at
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "atom0"
            , &::SireMol::Improper::atom0
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "atom1"
            , &::SireMol::Improper::atom1
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "atom2"
            , &::SireMol::Improper::atom2
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "atom3"
            , &::SireMol::Improper::atom3
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "contains"
            , (bool ( ::SireMol::Improper::* )( ::SireMol::AtomIndex const & ) const)( &::SireMol::Improper::contains )
            , ( bp::arg("atom") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMol::Improper::* )( ::QString const & ) const)( &::SireMol::Improper::contains )
            , ( bp::arg("atmnam") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMol::Improper::* )( ::SireMol::ResNum ) const)( &::SireMol::Improper::contains )
            , ( bp::arg("resnum") ) )    
        .def( 
            "count"
            , &::SireMol::Improper::count )    
        .def( 
            "interResidue"
            , &::SireMol::Improper::interResidue )    
        .def( 
            "intraResidue"
            , &::SireMol::Improper::intraResidue )    
        .def( bp::self != bp::self )    
        .def( bp::self < bp::self )    
        .def( bp::self <= bp::self )    
        .def( bp::self == bp::self )    
        .def( bp::self > bp::self )    
        .def( bp::self >= bp::self )    
        .def( 
            "__getitem__"
            , &::SireMol::Improper::operator[]
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "resNum0"
            , &::SireMol::Improper::resNum0 )    
        .def( 
            "resNum1"
            , &::SireMol::Improper::resNum1 )    
        .def( 
            "resNum2"
            , &::SireMol::Improper::resNum2 )    
        .def( 
            "resNum3"
            , &::SireMol::Improper::resNum3 )    
        .def( 
            "size"
            , &::SireMol::Improper::size )    
        .def( 
            "toString"
            , &::SireMol::Improper::toString )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMol::Improper >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMol::Improper >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &SirePy::__str__< ::SireMol::Improper > );

}
