// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Atom.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"

namespace bp = boost::python;

void register_Atom_class(){

    bp::class_< SireMol::Atom, bp::bases< SireMol::AtomInfo, SireMaths::Vector > >( "Atom" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMol::AtomIndex const &, SireMol::Element const &, SireMaths::Vector const & >(( bp::arg("atomindex"), bp::arg("element"), bp::arg("coords") )) )    
        .def( bp::init< SireMol::Atom const &, SireMol::ResNum >(( bp::arg("other"), bp::arg("resnum") )) )    
        .def( bp::init< SireMol::AtomNum, SireMol::AtomIndex const &, SireMol::Element const &, SireMaths::Vector const & >(( bp::arg("atmnum"), bp::arg("atomindex"), bp::arg("element"), bp::arg("coords") )) )    
        .def( bp::init< SireMol::AtomNum, SireMol::Atom const & >(( bp::arg("atmnum"), bp::arg("other") )) )    
        .def( bp::init< SireMol::AtomNum, SireMol::Atom const &, SireMol::ResNum >(( bp::arg("atmnum"), bp::arg("other"), bp::arg("resnum") )) )    
        .def( bp::init< QString const & >(( bp::arg("name") )) )    
        .def( bp::init< QString const &, QString const & >(( bp::arg("name"), bp::arg("element") )) )    
        .def( bp::init< QString const &, SireMol::ResNum >(( bp::arg("name"), bp::arg("resnum") )) )    
        .def( bp::init< QString const &, SireMol::ResNum, QString const & >(( bp::arg("name"), bp::arg("resnum"), bp::arg("element") )) )    
        .def( bp::init< SireMol::AtomIndex const & >(( bp::arg("atm") )) )    
        .def( bp::init< QString const &, SireMaths::Vector const & >(( bp::arg("name"), bp::arg("coords") )) )    
        .def( bp::init< QString const &, QString const &, SireMaths::Vector const & >(( bp::arg("name"), bp::arg("element"), bp::arg("coords") )) )    
        .def( bp::init< QString const &, SireMol::Atom const & >(( bp::arg("name"), bp::arg("other") )) )    
        .def( bp::init< SireMol::AtomNum, QString const & >(( bp::arg("num"), bp::arg("name") )) )    
        .def( bp::init< SireMol::AtomNum, QString const &, QString const & >(( bp::arg("num"), bp::arg("name"), bp::arg("element") )) )    
        .def( bp::init< SireMol::AtomNum, QString const &, SireMaths::Vector const & >(( bp::arg("num"), bp::arg("name"), bp::arg("coords") )) )    
        .def( bp::init< SireMol::AtomNum, QString const &, QString const &, SireMaths::Vector const & >(( bp::arg("num"), bp::arg("name"), bp::arg("element"), bp::arg("coords") )) )    
        .def( bp::init< SireMol::AtomInfo const &, SireMaths::Vector const & >(( bp::arg("atominfo"), bp::arg("coords") )) )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "toString"
            , &::SireMol::Atom::toString )    
        .def( 
            "withinBondRadii"
            , &::SireMol::Atom::withinBondRadii
            , ( bp::arg("atm0"), bp::arg("atm1"), bp::arg("err")=0.0 ) )    
        .staticmethod( "withinBondRadii" );

}
