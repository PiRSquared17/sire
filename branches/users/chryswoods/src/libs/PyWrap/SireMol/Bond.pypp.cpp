// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Bond.pypp.hpp"
#include "boost/python.hpp"
#include "siremol_headers.h"
#include "SireMaths/angle.h"
#include "SireMaths/quaternion.h"
#include "SireMaths/matrix.h"
#include "SireMaths/triangle.h"
#include "SireMaths/line.h"
#include "SireMaths/torsion.h"

namespace bp = boost::python;

void register_Bond_class(){

    bp::class_< SireMol::Bond >( "Bond" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMol::AtomIndex const &, SireMol::AtomIndex const & >(( bp::arg("atom0"), bp::arg("atom1") )) )    
        .def( bp::init< boost::tuples::tuple<SireMol::AtomIndex, SireMol::AtomIndex, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type, boost::tuples::null_type> const & >(( bp::arg("atoms") )) )    
        .def( bp::init< QString const &, QString const &, SireMol::ResNum >(( bp::arg("atom0"), bp::arg("atom1"), bp::arg("resnum") )) )    
        .def( bp::init< QString const &, SireMol::ResNum, QString const &, SireMol::ResNum >(( bp::arg("nam0"), bp::arg("res0"), bp::arg("nam1"), bp::arg("res1") )) )    
        .def( 
            "at"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )( int ) const)( &::SireMol::Bond::at )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "at"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )( ::SireMol::ResNum ) const)( &::SireMol::Bond::at )
            , ( bp::arg("resnum") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "atom"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )( ::SireMol::ResNum ) const)( &::SireMol::Bond::atom )
            , ( bp::arg("resnum") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "atom0"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::atom0 )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "atom1"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::atom1 )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "contains"
            , (bool ( ::SireMol::Bond::* )( ::SireMol::AtomIndex const & ) const)( &::SireMol::Bond::contains )
            , ( bp::arg("atom") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMol::Bond::* )( ::QString const & ) const)( &::SireMol::Bond::contains )
            , ( bp::arg("atmnam") ) )    
        .def( 
            "contains"
            , (bool ( ::SireMol::Bond::* )( ::SireMol::ResNum ) const)( &::SireMol::Bond::contains )
            , ( bp::arg("resnum") ) )    
        .def( 
            "count"
            , (int ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::count ) )    
        .def( 
            "interResidue"
            , (bool ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::interResidue ) )    
        .def( 
            "intraResidue"
            , (bool ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::intraResidue ) )    
        .def( bp::self != bp::self )    
        .def( bp::self < bp::self )    
        .def( bp::self <= bp::self )    
        .def( bp::self == bp::self )    
        .def( bp::self > bp::self )    
        .def( bp::self >= bp::self )    
        .def( 
            "__getitem__"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )( int ) const)( &::SireMol::Bond::operator[] )
            , ( bp::arg("i") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "__getitem__"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )( ::SireMol::ResNum ) const)( &::SireMol::Bond::operator[] )
            , ( bp::arg("resnum") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "other"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )( ::SireMol::AtomIndex const & ) const)( &::SireMol::Bond::other )
            , ( bp::arg("atm") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "other"
            , (::SireMol::AtomIndex const & ( ::SireMol::Bond::* )( ::SireMol::ResNum ) const)( &::SireMol::Bond::other )
            , ( bp::arg("resnum") )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "otherRes"
            , (::SireMol::ResNum ( ::SireMol::Bond::* )( ::SireMol::ResNum ) const)( &::SireMol::Bond::otherRes )
            , ( bp::arg("resnum") ) )    
        .def( 
            "renumber"
            , (::SireMol::Bond ( ::SireMol::Bond::* )( ::SireMol::ResNum,::SireMol::ResNum ) const)( &::SireMol::Bond::renumber )
            , ( bp::arg("oldnum"), bp::arg("newnum") ) )    
        .def( 
            "resNum0"
            , (::SireMol::ResNum ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::resNum0 ) )    
        .def( 
            "resNum1"
            , (::SireMol::ResNum ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::resNum1 ) )    
        .def( 
            "size"
            , (int ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::size ) )    
        .def( 
            "toString"
            , (::QString ( ::SireMol::Bond::* )(  ) const)( &::SireMol::Bond::toString ) );

}
