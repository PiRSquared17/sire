// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "ForceFields.pypp.hpp"
#include "boost/python.hpp"
#include "sireff_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"
#include "SireMol/cgatomid.h"
#include "SireMol/cutgroupnum.h"
#include "SireMol/resnumatomid.h"
#include "SireMol/resid.h"
#include "SireMol/moleculeid.h"

namespace bp = boost::python;

void register_ForceFields_class(){

    bp::class_< SireFF::ForceFields, bp::bases< SireFF::ForceFieldsBase > >( "ForceFields" )    
        .def( bp::init< >() )    
        .def( bp::init< SireFF::ForceFieldsBase const & >(( bp::arg("other") )) )    
        .def( 
            "add"
            , (void ( ::SireFF::ForceFields::* )( ::SireFF::ForceField const & ) )( &::SireFF::ForceFields::add )
            , ( bp::arg("ffield") ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::Molecule const &,::QSet<SireFF::ForceFieldID> const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFields::add )
            , ( bp::arg("molecule"), bp::arg("ffids"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::Residue const &,::QSet<SireFF::ForceFieldID> const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFields::add )
            , ( bp::arg("residue"), bp::arg("ffids"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "add"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::NewAtom const &,::QSet<SireFF::ForceFieldID> const &,::SireFF::ParameterMap const & ) )( &::SireFF::ForceFields::add )
            , ( bp::arg("atom"), bp::arg("ffids"), bp::arg("map")=::SireFF::ParameterMap( ) ) )    
        .def( 
            "change"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::Molecule const & ) )( &::SireFF::ForceFields::change )
            , ( bp::arg("molecule") ) )    
        .def( 
            "change"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::Residue const & ) )( &::SireFF::ForceFields::change )
            , ( bp::arg("residue") ) )    
        .def( 
            "change"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::NewAtom const & ) )( &::SireFF::ForceFields::change )
            , ( bp::arg("atom") ) )    
        .def( 
            "change"
            , (bool ( ::SireFF::ForceFields::* )( ::QHash<SireMol::MoleculeID, SireMol::Molecule> const & ) )( &::SireFF::ForceFields::change )
            , ( bp::arg("molecules") ) )    
        .def( 
            "forceFieldIDs"
            , (::QSet<SireFF::ForceFieldID> ( ::SireFF::ForceFields::* )(  ) const)( &::SireFF::ForceFields::forceFieldIDs ) )    
        .def( 
            "forceFields"
            , (::QHash<SireFF::ForceFieldID, SireFF::ForceField> ( ::SireFF::ForceFields::* )(  ) const)( &::SireFF::ForceFields::forceFields ) )    
        .def( 
            "majorUpdate"
            , (void ( ::SireFF::ForceFields::* )( ::SireFF::ForceFields const & ) )( &::SireFF::ForceFields::majorUpdate )
            , ( bp::arg("forcefields") ) )    
        .def( 
            "minorUpdate"
            , (void ( ::SireFF::ForceFields::* )( ::SireFF::ForceFields const & ) )( &::SireFF::ForceFields::minorUpdate )
            , ( bp::arg("forcefields") ) )    
        .def( 
            "remove"
            , (void ( ::SireFF::ForceFields::* )( ::SireFF::ForceFieldID ) )( &::SireFF::ForceFields::remove )
            , ( bp::arg("ffid") ) )    
        .def( 
            "remove"
            , (void ( ::SireFF::ForceFields::* )( ::QString const & ) )( &::SireFF::ForceFields::remove )
            , ( bp::arg("ffname") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::Molecule const &,::QSet<SireFF::ForceFieldID> const & ) )( &::SireFF::ForceFields::remove )
            , ( bp::arg("molecule"), bp::arg("ffids") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::Residue const &,::QSet<SireFF::ForceFieldID> const & ) )( &::SireFF::ForceFields::remove )
            , ( bp::arg("residue"), bp::arg("ffids") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::NewAtom const &,::QSet<SireFF::ForceFieldID> const & ) )( &::SireFF::ForceFields::remove )
            , ( bp::arg("atom"), bp::arg("ffids") ) )    
        .def( 
            "remove"
            , (bool ( ::SireFF::ForceFields::* )( ::SireMol::Molecule const & ) )( &::SireFF::ForceFields::remove )
            , ( bp::arg("molecule") ) )    
        .def( 
            "setEqualTo"
            , (void ( ::SireFF::ForceFields::* )( ::SireFF::ForceFields const & ) )( &::SireFF::ForceFields::setEqualTo )
            , ( bp::arg("forcefields") ) );

}
