// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "ParameterName.pypp.hpp"
#include "boost/python.hpp"
#include "sireff_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"
#include "SireMol/cgatomid.h"
#include "SireMol/cutgroupnum.h"
#include "SireMol/resnumatomid.h"
#include "SireMol/resid.h"
#include "SireMol/moleculeid.h"

namespace bp = boost::python;

void register_ParameterName_class(){

    bp::class_< SireFF::ParameterName >( "ParameterName", bp::init< bp::optional< QString const & > >(( bp::arg("name")=QString::null )) )    
        .def( bp::init< QString const &, QString const & >(( bp::arg("name"), bp::arg("defaultsource") )) )    
        .def( 
            "defaultSource"
            , (::QString const & ( ::SireFF::ParameterName::* )(  ) const)( &::SireFF::ParameterName::defaultSource )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "isValid"
            , (bool ( ::SireFF::ParameterName::* )(  ) const)( &::SireFF::ParameterName::isValid ) )    
        .def( 
            "name"
            , (::QString const & ( ::SireFF::ParameterName::* )(  ) const)( &::SireFF::ParameterName::name )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( bp::self == bp::other< QString >() );

}
