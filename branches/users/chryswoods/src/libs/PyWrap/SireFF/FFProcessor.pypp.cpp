// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "FFProcessor.pypp.hpp"
#include "boost/python.hpp"
#include "sireff_headers.h"
#include "SireMol/molecule.h"
#include "SireMol/residue.h"
#include "SireMol/newatom.h"
#include "SireMol/atom.h"
#include "SireMol/cgatomid.h"
#include "SireMol/cutgroupnum.h"
#include "SireMol/resnumatomid.h"
#include "SireMol/resid.h"
#include "SireMol/moleculeid.h"

namespace bp = boost::python;

SireFF::FFProcessor __copy__(const SireFF::FFProcessor &other){ return SireFF::FFProcessor(other); }

const char* pvt_get_name(const SireFF::FFProcessor&){ return "SireFF::FFProcessor";}

void register_FFProcessor_class(){

    bp::class_< SireFF::FFProcessor, bp::bases< SireFF::FFProcessorBase > >( "FFProcessor" )    
        .def( bp::init< >() )    
        .def( bp::init< SireFF::ForceField const & >(( bp::arg("ffield") )) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireFF::FFProcessor::typeName ) )    
        .def( 
            "what"
            , (char const * ( ::SireFF::FFProcessor::* )(  ) const)( &::SireFF::FFProcessor::what ) )    
        .staticmethod( "typeName" )    
        .def( "__copy__", &__copy__)    
        .def( "__str__", &pvt_get_name);

}
