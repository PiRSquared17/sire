// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "IDVersion.pypp.hpp"
#include "boost/python.hpp"
#include "sirebase_headers.h"

namespace bp = boost::python;

void register_IDVersion_class(){

    bp::class_< SireBase::IDVersion >( "IDVersion" )    
        .def( bp::init< >() )    
        .def( bp::init< SireBase::Incremint * >(( bp::arg("majint") )) )    
        .def( 
            "ID"
            , &::SireBase::IDVersion::ID )    
        .def( 
            "assertSameID"
            , &::SireBase::IDVersion::assertSameID
            , ( bp::arg("other") ) )    
        .def( 
            "assertSameIDAndVersion"
            , &::SireBase::IDVersion::assertSameIDAndVersion
            , ( bp::arg("other") ) )    
        .def( 
            "assertSameVersion"
            , &::SireBase::IDVersion::assertSameVersion
            , ( bp::arg("other") ) )    
        .def( 
            "incrementID"
            , &::SireBase::IDVersion::incrementID )    
        .def( 
            "incrementVersion"
            , &::SireBase::IDVersion::incrementVersion )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "sameID"
            , &::SireBase::IDVersion::sameID
            , ( bp::arg("other") ) )    
        .def( 
            "sameIDAndVersion"
            , &::SireBase::IDVersion::sameIDAndVersion
            , ( bp::arg("other") ) )    
        .def( 
            "sameVersion"
            , &::SireBase::IDVersion::sameVersion
            , ( bp::arg("other") ) )    
        .def( 
            "toString"
            , &::SireBase::IDVersion::toString )    
        .def( 
            "version"
            , &::SireBase::IDVersion::version );

}
