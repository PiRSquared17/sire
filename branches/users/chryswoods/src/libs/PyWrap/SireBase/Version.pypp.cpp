// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Version.pypp.hpp"
#include "boost/python.hpp"
#include "sirebase_headers.h"

namespace bp = boost::python;

#include "SireQt/qdatastream.hpp"

#include "SirePy/str.hpp"

void register_Version_class(){

    bp::class_< SireBase::Version >( "Version", bp::init< bp::optional< quint32, quint32 > >(( bp::arg("major")=(unsigned int)(0), bp::arg("minor")=(unsigned int)(0) )) )    
        .def( 
            "major"
            , (::quint32 ( ::SireBase::Version::* )(  ) const)( &::SireBase::Version::major ) )    
        .def( 
            "minor"
            , (::quint32 ( ::SireBase::Version::* )(  ) const)( &::SireBase::Version::minor ) )    
        .def( bp::self != bp::self )    
        .def( bp::self < bp::self )    
        .def( bp::self <= bp::self )    
        .def( bp::self == bp::self )    
        .def( bp::self > bp::self )    
        .def( bp::self >= bp::self )    
        .def( 
            "sameMajorVersion"
            , (bool ( ::SireBase::Version::* )( ::SireBase::Version const & ) const)( &::SireBase::Version::sameMajorVersion )
            , ( bp::arg("other") ) )    
        .def( 
            "sameMinorVersion"
            , (bool ( ::SireBase::Version::* )( ::SireBase::Version const & ) const)( &::SireBase::Version::sameMinorVersion )
            , ( bp::arg("other") ) )    
        .def( 
            "setMajor"
            , (void ( ::SireBase::Version::* )( ::quint32 ) )( &::SireBase::Version::setMajor )
            , ( bp::arg("major") ) )    
        .def( 
            "setMinor"
            , (void ( ::SireBase::Version::* )( ::quint32 ) )( &::SireBase::Version::setMinor )
            , ( bp::arg("minor") ) )    
        .def( 
            "toString"
            , (::QString ( ::SireBase::Version::* )(  ) const)( &::SireBase::Version::toString ) )    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireBase::Version >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireBase::Version >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &SirePy::__str__< ::SireBase::Version > );

}
