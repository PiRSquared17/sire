// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Sphere.pypp.hpp"
#include "boost/python.hpp"
#include "siremaths_headers.h"

namespace bp = boost::python;

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMaths::Sphere&){ return "SireMaths::Sphere";}

void register_Sphere_class(){

    bp::class_< SireMaths::Sphere >( "Sphere" )    
        .def( bp::init< >() )    
        .def( bp::init< double const & >(( bp::arg("radius") )) )    
        .def( bp::init< SireMaths::Vector const &, double const & >(( bp::arg("position"), bp::arg("radius") )) )    
        .def( 
            "center"
            , (::SireMaths::Vector const & ( ::SireMaths::Sphere::* )(  ) const)( &::SireMaths::Sphere::center )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( bp::self != bp::self )    
        .def( bp::self == bp::self )    
        .def( 
            "position"
            , (::SireMaths::Vector const & ( ::SireMaths::Sphere::* )(  ) const)( &::SireMaths::Sphere::position )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "radius"
            , (double ( ::SireMaths::Sphere::* )(  ) const)( &::SireMaths::Sphere::radius ) )    
        .def( 
            "setCenter"
            , (void ( ::SireMaths::Sphere::* )( ::SireMaths::Vector const & ) )( &::SireMaths::Sphere::setCenter )
            , ( bp::arg("center") ) )    
        .def( 
            "setPosition"
            , (void ( ::SireMaths::Sphere::* )( ::SireMaths::Vector const & ) )( &::SireMaths::Sphere::setPosition )
            , ( bp::arg("position") ) )    
        .def( 
            "setRadius"
            , (void ( ::SireMaths::Sphere::* )( double ) )( &::SireMaths::Sphere::setRadius )
            , ( bp::arg("radius") ) )    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMaths::Sphere >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMaths::Sphere >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
