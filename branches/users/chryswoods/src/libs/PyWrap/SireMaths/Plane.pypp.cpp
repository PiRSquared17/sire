// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "Plane.pypp.hpp"
#include "boost/python.hpp"
#include "siremaths_headers.h"

namespace bp = boost::python;

SireMaths::Plane __copy__(const SireMaths::Plane &other){ return SireMaths::Plane(other); }

#include "SireQt/qdatastream.hpp"

const char* pvt_get_name(const SireMaths::Plane&){ return "SireMaths::Plane";}

void register_Plane_class(){

    bp::class_< SireMaths::Plane >( "Plane" )    
        .def( bp::init< >() )    
        .def( bp::init< SireMaths::Vector const &, double const & >(( bp::arg("normal"), bp::arg("distance") )) )    
        .def( bp::init< double const &, double const &, double const &, double const & >(( bp::arg("a"), bp::arg("b"), bp::arg("c"), bp::arg("d") )) )    
        .def( bp::init< SireMaths::Vector const &, SireMaths::Vector const & >(( bp::arg("normal"), bp::arg("contains_point") )) )    
        .def( 
            "a"
            , (double ( ::SireMaths::Plane::* )(  ) const)( &::SireMaths::Plane::a ) )    
        .def( 
            "b"
            , (double ( ::SireMaths::Plane::* )(  ) const)( &::SireMaths::Plane::b ) )    
        .def( 
            "c"
            , (double ( ::SireMaths::Plane::* )(  ) const)( &::SireMaths::Plane::c ) )    
        .def( 
            "d"
            , (double ( ::SireMaths::Plane::* )(  ) const)( &::SireMaths::Plane::d ) )    
        .def( 
            "distance"
            , (double ( ::SireMaths::Plane::* )( ::SireMaths::Vector const & ) const)( &::SireMaths::Plane::distance )
            , ( bp::arg("point") ) )    
        .def( 
            "distanceFromOrigin"
            , (double const & ( ::SireMaths::Plane::* )(  ) const)( &::SireMaths::Plane::distanceFromOrigin )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "normal"
            , (::SireMaths::Vector const & ( ::SireMaths::Plane::* )(  ) const)( &::SireMaths::Plane::normal )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( "__copy__", &__copy__)    
        .def( "__rlshift__", &SireQt::__rlshift__QDataStream< ::SireMaths::Plane >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__rrshift__", &SireQt::__rrshift__QDataStream< ::SireMaths::Plane >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() )    
        .def( "__str__", &pvt_get_name);

}
