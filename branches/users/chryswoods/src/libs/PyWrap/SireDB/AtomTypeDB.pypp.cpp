// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "AtomTypeDB.pypp.hpp"
#include "boost/python.hpp"
#include "siredb_headers.h"
#include "SireCAS/function.h"
#include "SireCAS/expression.h"

namespace bp = boost::python;

void register_AtomTypeDB_class(){

    bp::class_< SireDB::AtomTypeDB, bp::bases< SireDB::AtomDB > >( "AtomTypeDB" )    
        .def( bp::init< >() )    
        .def( 
            "addAtomType"
            , (void ( ::SireDB::AtomTypeDB::* )( ::QString const &,::SireDB::AtomType const & ) )( &::SireDB::AtomTypeDB::addAtomType )
            , ( bp::arg("userid"), bp::arg("atomtype") ) )    
        .def( 
            "assignParameter"
            , (bool ( ::SireDB::AtomTypeDB::* )( ::SireMol::AtomIndex const &,::SireDB::RelateIDMap const &,::SireDB::ParameterTable & ) )( &::SireDB::AtomTypeDB::assignParameter )
            , ( bp::arg("atom"), bp::arg("relateids"), bp::arg("param_table") ) )    
        .def( 
            "createTable"
            , (void ( ::SireDB::AtomTypeDB::* )( ::SireDB::ParameterTable & ) const)( &::SireDB::AtomTypeDB::createTable )
            , ( bp::arg("param_table") ) )    
        .def( 
            "getAtomType"
            , (::SireDB::AtomType ( ::SireDB::AtomTypeDB::* )( ::QString const &,bool * ) )( &::SireDB::AtomTypeDB::getAtomType )
            , ( bp::arg("userid"), bp::arg("foundtype")=bp::object() ) )    
        .def( 
            "getAtomType"
            , (::SireDB::AtomType ( ::SireDB::AtomTypeDB::* )( ::SireDB::RelateID,bool * ) )( &::SireDB::AtomTypeDB::getAtomType )
            , ( bp::arg("relateid"), bp::arg("foundtype")=bp::object() ) )    
        .def( 
            "getAtomType"
            , (::SireDB::AtomType ( ::SireDB::AtomTypeDB::* )( ::SireDB::RelateIDMap const &,bool * ) )( &::SireDB::AtomTypeDB::getAtomType )
            , ( bp::arg("relateids"), bp::arg("foundtype")=bp::object() ) )    
        .def( 
            "relateAtomType"
            , (void ( ::SireDB::AtomTypeDB::* )( ::SireDB::AssertMatch<1> const &,::QString const & ) )( &::SireDB::AtomTypeDB::relateAtomType )
            , ( bp::arg("matchatom"), bp::arg("userid") ) )    
        .def( 
            "relateAtomType"
            , (void ( ::SireDB::AtomTypeDB::* )( ::SireDB::AssertMatch<1> const &,::SireDB::AtomType const & ) )( &::SireDB::AtomTypeDB::relateAtomType )
            , ( bp::arg("matchatom"), bp::arg("atomtype") ) )    
        .def( 
            "relateAtomType"
            , (void ( ::SireDB::AtomTypeDB::* )( ::SireDB::RelateID,::QString const & ) )( &::SireDB::AtomTypeDB::relateAtomType )
            , ( bp::arg("relateid"), bp::arg("userid") ) )    
        .def( 
            "relateAtomType"
            , (void ( ::SireDB::AtomTypeDB::* )( ::SireDB::RelateID,::SireDB::AtomType const & ) )( &::SireDB::AtomTypeDB::relateAtomType )
            , ( bp::arg("relateid"), bp::arg("atomtype") ) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireDB::AtomTypeDB::typeName ) )    
        .def( 
            "what"
            , (char const * ( ::SireDB::AtomTypeDB::* )(  ) const)( &::SireDB::AtomTypeDB::what ) )    
        .staticmethod( "typeName" );

}
