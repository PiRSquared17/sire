// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License


#include "boost/python.hpp"

#include "siredb_headers.h"

#include "SireCAS/function.h"

#include "SireCAS/expression.h"

#include "AssignBase.pypp.hpp"

#include "AssignInstruction.pypp.hpp"

#include "AtomDB.pypp.hpp"

#include "AtomTable.pypp.hpp"

#include "AtomTable_AtomType_.pypp.hpp"

#include "AtomType.pypp.hpp"

#include "AtomTypeDB.pypp.hpp"

#include "AtomTypeTable.pypp.hpp"

#include "DBBase.pypp.hpp"

#include "FuncDB.pypp.hpp"

#include "MatchAtom.pypp.hpp"

#include "MatchAtomType.pypp.hpp"

#include "MatchAtomTypeData.pypp.hpp"

#include "MatchData.pypp.hpp"

#include "MatchMR.pypp.hpp"

#include "MatchMRA.pypp.hpp"

#include "MatchMRAData.pypp.hpp"

#include "MatchMRData.pypp.hpp"

#include "MatchMol.pypp.hpp"

#include "MatchRes.pypp.hpp"

#include "NameDB.pypp.hpp"

#include "OverWriteParams.pypp.hpp"

#include "ParameterDB.pypp.hpp"

#include "ParameterTable.pypp.hpp"

#include "RelateAtomTypeDB.pypp.hpp"

#include "RelateDB.pypp.hpp"

#include "RelateMRADB.pypp.hpp"

#include "RelateMRDB.pypp.hpp"

#include "RelationshipDB.pypp.hpp"

#include "Smarts.pypp.hpp"

#include "TableBase.pypp.hpp"

#include "Term12DB.pypp.hpp"

#include "Term13DB.pypp.hpp"

#include "Term14DB.pypp.hpp"

#include "assign_atoms.pypp.hpp"

#include "assign_parameters.pypp.hpp"

#include "match_atom_element.pypp.hpp"

#include "match_atom_name.pypp.hpp"

#include "match_atom_num.pypp.hpp"

#include "match_atom_type.pypp.hpp"

#include "match_mol_group.pypp.hpp"

#include "match_mol_name.pypp.hpp"

#include "match_mol_state.pypp.hpp"

#include "match_no_res_res_bond_via.pypp.hpp"

#include "match_res_alias.pypp.hpp"

#include "match_res_name.pypp.hpp"

#include "match_res_num.pypp.hpp"

#include "match_res_res_bond_via.pypp.hpp"

#include "match_single_atom_element.pypp.hpp"

#include "match_single_atom_name.pypp.hpp"

#include "match_single_atom_num.pypp.hpp"

#include "match_single_atom_type.pypp.hpp"

#include "match_single_no_res_res_bond_via.pypp.hpp"

#include "match_single_res_alias.pypp.hpp"

#include "match_single_res_name.pypp.hpp"

#include "match_single_res_num.pypp.hpp"

#include "match_single_res_res_bond_via.pypp.hpp"

#include "using_database.pypp.hpp"

#include "using_parameters_base.pypp.hpp"

#include "using_relationships_base.pypp.hpp"

namespace bp = boost::python;

BOOST_PYTHON_MODULE(_DB){
    register_AssignInstruction_class();

    register_MatchMRData_class();

    bp::implicitly_convertible< SireDB::MatchMol const &, SireDB::MatchMRData >();

    bp::implicitly_convertible< SireDB::MatchRes const &, SireDB::MatchMRData >();

    bp::implicitly_convertible< SireDB::MatchMR const &, SireDB::MatchMRData >();

    register_AssignBase_class();

    register_DBBase_class();

    register_RelateDB_class();

    register_AtomDB_class();

    register_TableBase_class();

    register_AtomTable_class();

    register_AtomTable_AtomType__class();

    register_AtomType_class();

    bp::implicitly_convertible< QString const &, SireDB::AtomType >();

    bp::implicitly_convertible< SireMol::Element const &, SireDB::AtomType >();

    bp::implicitly_convertible< SireDB::AtomParameter<SireDB::AtomType> const &, SireDB::AtomType >();

    register_AtomTypeDB_class();

    register_AtomTypeTable_class();

    bp::implicitly_convertible< SireMol::MoleculeInfo const &, SireDB::AtomTypeTable >();

    register_FuncDB_class();

    register_MatchData_class();

    register_MatchAtom_class();

    register_MatchAtomType_class();

    bp::implicitly_convertible< SireDB::AtomType const &, SireDB::MatchAtomType >();

    bp::implicitly_convertible< SireMol::Element const &, SireDB::MatchAtomType >();

    register_MatchAtomTypeData_class();

    bp::implicitly_convertible< SireDB::MatchMol const &, SireDB::MatchAtomTypeData >();

    bp::implicitly_convertible< SireDB::MatchRes const &, SireDB::MatchAtomTypeData >();

    bp::implicitly_convertible< SireDB::MatchAtomType const &, SireDB::MatchAtomTypeData >();

    bp::implicitly_convertible< SireDB::MatchMR const &, SireDB::MatchAtomTypeData >();

    bp::implicitly_convertible< SireDB::MatchMRData const &, SireDB::MatchAtomTypeData >();

    register_MatchMR_class();

    bp::implicitly_convertible< SireDB::MatchMol const &, SireDB::MatchMR >();

    bp::implicitly_convertible< SireDB::MatchRes const &, SireDB::MatchMR >();

    register_MatchMRA_class();

    bp::implicitly_convertible< SireDB::MatchMol const &, SireDB::MatchMRA >();

    bp::implicitly_convertible< SireDB::MatchRes const &, SireDB::MatchMRA >();

    bp::implicitly_convertible< SireDB::MatchMR const &, SireDB::MatchMRA >();

    bp::implicitly_convertible< SireDB::MatchAtom const &, SireDB::MatchMRA >();

    register_MatchMRAData_class();

    bp::implicitly_convertible< SireDB::MatchMol const &, SireDB::MatchMRAData >();

    bp::implicitly_convertible< SireDB::MatchRes const &, SireDB::MatchMRAData >();

    bp::implicitly_convertible< SireDB::MatchAtom const &, SireDB::MatchMRAData >();

    bp::implicitly_convertible< SireDB::MatchMR const &, SireDB::MatchMRAData >();

    bp::implicitly_convertible< SireDB::MatchMRData const &, SireDB::MatchMRAData >();

    bp::implicitly_convertible< SireDB::MatchMRA const &, SireDB::MatchMRAData >();

    register_MatchMol_class();

    register_MatchRes_class();

    register_NameDB_class();

    register_OverWriteParams_class();

    bp::implicitly_convertible< bool, SireDB::OverWriteParams >();

    bp::implicitly_convertible< SireDB::OverWriteParams, bool >();

    register_ParameterDB_class();

    register_ParameterTable_class();

    bp::implicitly_convertible< SireMol::MoleculeInfo const &, SireDB::ParameterTable >();

    register_RelationshipDB_class();

    register_RelateAtomTypeDB_class();

    register_RelateMRADB_class();

    register_RelateMRDB_class();

    register_Smarts_class();

    register_Term12DB_class();

    register_Term13DB_class();

    register_Term14DB_class();

    register_assign_atoms_class();

    bp::implicitly_convertible< SireDB::using_database const &, SireDB::assign_atoms >();

    bp::implicitly_convertible< QSet<SireMol::AtomIndex> const &, SireDB::assign_atoms >();

    register_assign_parameters_class();

    bp::implicitly_convertible< SireDB::AssignInstruction const &, SireDB::assign_parameters >();

    register_match_atom_element_class();

    bp::implicitly_convertible< uint, SireDB::match_atom_element >();

    register_match_atom_name_class();

    bp::implicitly_convertible< uint, SireDB::match_atom_name >();

    register_match_atom_num_class();

    bp::implicitly_convertible< uint, SireDB::match_atom_num >();

    register_match_atom_type_class();

    bp::implicitly_convertible< uint, SireDB::match_atom_type >();

    register_match_mol_group_class();

    register_match_mol_name_class();

    register_match_mol_state_class();

    register_match_no_res_res_bond_via_class();

    bp::implicitly_convertible< uint, SireDB::match_no_res_res_bond_via >();

    register_match_res_alias_class();

    bp::implicitly_convertible< uint, SireDB::match_res_alias >();

    register_match_res_name_class();

    bp::implicitly_convertible< uint, SireDB::match_res_name >();

    register_match_res_num_class();

    bp::implicitly_convertible< uint, SireDB::match_res_num >();

    register_match_res_res_bond_via_class();

    bp::implicitly_convertible< uint, SireDB::match_res_res_bond_via >();

    register_match_single_atom_element_class();

    register_match_single_atom_name_class();

    register_match_single_atom_num_class();

    register_match_single_atom_type_class();

    register_match_single_no_res_res_bond_via_class();

    register_match_single_res_alias_class();

    register_match_single_res_name_class();

    register_match_single_res_num_class();

    register_match_single_res_res_bond_via_class();

    register_using_database_class();

    register_using_parameters_base_class();

    bp::implicitly_convertible< QStringList const &, SireDB::using_parameters_base >();

    register_using_relationships_base_class();

    bp::implicitly_convertible< QStringList const &, SireDB::using_relationships_base >();
}

