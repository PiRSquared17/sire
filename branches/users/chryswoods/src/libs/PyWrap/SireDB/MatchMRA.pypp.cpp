// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "MatchMRA.pypp.hpp"
#include "boost/python.hpp"
#include "siredb_headers.h"
#include "SireCAS/function.h"
#include "SireCAS/expression.h"

namespace bp = boost::python;

#include "SirePy/str.hpp"

void register_MatchMRA_class(){

    bp::class_< SireDB::MatchMRA, bp::bases< SireDB::MatchData > >( "MatchMRA" )    
        .def( bp::init< >() )    
        .def( bp::init< SireDB::MatchMR const &, SireDB::MatchAtom const & >(( bp::arg("matchmr"), bp::arg("matchatom") )) )    
        .def( bp::init< SireDB::MatchMol const &, SireDB::MatchRes const &, SireDB::MatchAtom const & >(( bp::arg("matchmol"), bp::arg("matchres"), bp::arg("matchatom") )) )    
        .def( bp::init< SireDB::MatchMol const & >(( bp::arg("matchmol") )) )    
        .def( bp::init< SireDB::MatchRes const & >(( bp::arg("matchres") )) )    
        .def( bp::init< SireDB::MatchMR const & >(( bp::arg("matchmr") )) )    
        .def( bp::init< SireDB::MatchAtom const & >(( bp::arg("matchatom") )) )    
        .def( 
            "addMirroredTo"
            , (::SireDB::RelateID ( ::SireDB::MatchMRA::* )( ::SireDB::ParameterDB &,::uint ) const)( &::SireDB::MatchMRA::addMirroredTo )
            , ( bp::arg("db"), bp::arg("n") ) )    
        .def( 
            "addTo"
            , (::SireDB::RelateID ( ::SireDB::MatchMRA::* )( ::SireDB::ParameterDB &,::uint ) const)( &::SireDB::MatchMRA::addTo )
            , ( bp::arg("db"), bp::arg("n") ) )    
        .def( 
            "atom"
            , (::SireDB::MatchAtom const & ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::atom )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "hasAtomCriteria"
            , (bool ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::hasAtomCriteria ) )    
        .def( 
            "hasMoleculeCriteria"
            , (bool ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::hasMoleculeCriteria ) )    
        .def( 
            "hasResidueCriteria"
            , (bool ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::hasResidueCriteria ) )    
        .def( 
            "isEmpty"
            , (bool ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::isEmpty ) )    
        .def( 
            "molAndRes"
            , (::SireDB::MatchMR const & ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::molAndRes )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "molecule"
            , (::SireDB::MatchMol const & ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::molecule )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "nMatches"
            , (int ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::nMatches ) )    
        .def( 
            "residue"
            , (::SireDB::MatchRes const & ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::residue )
            , bp::return_value_policy< bp::copy_const_reference >() )    
        .def( 
            "toString"
            , (::QString ( ::SireDB::MatchMRA::* )(  ) const)( &::SireDB::MatchMRA::toString ) )    
        .def( "__str__", &SirePy::__str__< ::SireDB::MatchMRA > );

}
