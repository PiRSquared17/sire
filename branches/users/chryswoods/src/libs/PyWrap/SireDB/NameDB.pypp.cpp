// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "NameDB.pypp.hpp"
#include "boost/python.hpp"
#include "siredb_headers.h"
#include "SireCAS/function.h"
#include "SireCAS/expression.h"

namespace bp = boost::python;

#include "SirePy/str.hpp"

void register_NameDB_class(){

    bp::class_< SireDB::NameDB, bp::bases< SireDB::DBBase >, boost::noncopyable >( "NameDB" )    
        .def( 
            "addAtomName"
            , (::SireDB::NameID ( ::SireDB::NameDB::* )( ::QString const & ) )( &::SireDB::NameDB::addAtomName )
            , ( bp::arg("name") ) )    
        .def( 
            "addMoleculeName"
            , (::SireDB::NameID ( ::SireDB::NameDB::* )( ::QString const & ) )( &::SireDB::NameDB::addMoleculeName )
            , ( bp::arg("name") ) )    
        .def( 
            "addName"
            , (::SireDB::NameID ( ::SireDB::NameDB::* )( ::QString const &,::QString const & ) )( &::SireDB::NameDB::addName )
            , ( bp::arg("type"), bp::arg("name") ) )    
        .def( 
            "addResidueName"
            , (::SireDB::NameID ( ::SireDB::NameDB::* )( ::QString const & ) )( &::SireDB::NameDB::addResidueName )
            , ( bp::arg("name") ) )    
        .def( 
            "caseSensitive"
            , (bool ( ::SireDB::NameDB::* )( ::QString const & ) const)( &::SireDB::NameDB::caseSensitive )
            , ( bp::arg("type") ) )    
        .def( 
            "caseSensitiveAtomNames"
            , (bool ( ::SireDB::NameDB::* )(  ) const)( &::SireDB::NameDB::caseSensitiveAtomNames ) )    
        .def( 
            "caseSensitiveMoleculeNames"
            , (bool ( ::SireDB::NameDB::* )(  ) const)( &::SireDB::NameDB::caseSensitiveMoleculeNames ) )    
        .def( 
            "caseSensitiveResidueNames"
            , (bool ( ::SireDB::NameDB::* )(  ) const)( &::SireDB::NameDB::caseSensitiveResidueNames ) )    
        .def( 
            "getAtomName"
            , (::QString ( ::SireDB::NameDB::* )( ::SireDB::NameID ) )( &::SireDB::NameDB::getAtomName )
            , ( bp::arg("id") ) )    
        .def( 
            "getAtomNameID"
            , (::SireDB::NameID ( ::SireDB::NameDB::* )( ::QString const & ) )( &::SireDB::NameDB::getAtomNameID )
            , ( bp::arg("name") ) )    
        .def( 
            "getMoleculeName"
            , (::QString ( ::SireDB::NameDB::* )( ::SireDB::NameID ) )( &::SireDB::NameDB::getMoleculeName )
            , ( bp::arg("id") ) )    
        .def( 
            "getMoleculeNameID"
            , (::SireDB::NameID ( ::SireDB::NameDB::* )( ::QString const & ) )( &::SireDB::NameDB::getMoleculeNameID )
            , ( bp::arg("name") ) )    
        .def( 
            "getName"
            , (::QString ( ::SireDB::NameDB::* )( ::QString const &,::SireDB::NameID ) )( &::SireDB::NameDB::getName )
            , ( bp::arg("type"), bp::arg("id") ) )    
        .def( 
            "getNameID"
            , (::SireDB::NameID ( ::SireDB::NameDB::* )( ::QString const &,::QString const & ) )( &::SireDB::NameDB::getNameID )
            , ( bp::arg("type"), bp::arg("name") ) )    
        .def( 
            "getResidueName"
            , (::QString ( ::SireDB::NameDB::* )( ::SireDB::NameID ) )( &::SireDB::NameDB::getResidueName )
            , ( bp::arg("id") ) )    
        .def( 
            "getResidueNameID"
            , (::SireDB::NameID ( ::SireDB::NameDB::* )( ::QString const & ) )( &::SireDB::NameDB::getResidueNameID )
            , ( bp::arg("name") ) )    
        .def( 
            "nNames"
            , (int ( ::SireDB::NameDB::* )(  ) const)( &::SireDB::NameDB::nNames ) )    
        .def( 
            "setCaseInsensitive"
            , (void ( ::SireDB::NameDB::* )( ::QString const & ) )( &::SireDB::NameDB::setCaseInsensitive )
            , ( bp::arg("type") ) )    
        .def( 
            "setCaseInsensitiveAtomNames"
            , (void ( ::SireDB::NameDB::* )(  ) )( &::SireDB::NameDB::setCaseInsensitiveAtomNames ) )    
        .def( 
            "setCaseInsensitiveMoleculeNames"
            , (void ( ::SireDB::NameDB::* )(  ) )( &::SireDB::NameDB::setCaseInsensitiveMoleculeNames ) )    
        .def( 
            "setCaseInsensitiveResidueNames"
            , (void ( ::SireDB::NameDB::* )(  ) )( &::SireDB::NameDB::setCaseInsensitiveResidueNames ) )    
        .def( 
            "setCaseSensitive"
            , (void ( ::SireDB::NameDB::* )( ::QString const & ) )( &::SireDB::NameDB::setCaseSensitive )
            , ( bp::arg("type") ) )    
        .def( 
            "setCaseSensitiveAtomNames"
            , (void ( ::SireDB::NameDB::* )(  ) )( &::SireDB::NameDB::setCaseSensitiveAtomNames ) )    
        .def( 
            "setCaseSensitiveMoleculeNames"
            , (void ( ::SireDB::NameDB::* )(  ) )( &::SireDB::NameDB::setCaseSensitiveMoleculeNames ) )    
        .def( 
            "setCaseSensitiveResidueNames"
            , (void ( ::SireDB::NameDB::* )(  ) )( &::SireDB::NameDB::setCaseSensitiveResidueNames ) )    
        .def( 
            "typeName"
            , (char const * (*)(  ))( &::SireDB::NameDB::typeName ) )    
        .def( 
            "what"
            , (char const * ( ::SireDB::NameDB::* )(  ) const)( &::SireDB::NameDB::what ) )    
        .staticmethod( "typeName" )    
        .def( "__str__", &SirePy::__str__< ::SireDB::NameDB > );

}
