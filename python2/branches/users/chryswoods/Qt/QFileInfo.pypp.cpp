// This file has been generated by Py++.

// (C) Christopher Woods, GPL >=2 License

#include "boost/python.hpp"
#include "sireqt_headers.h"
#include "QFileInfo.pypp.hpp"

namespace bp = boost::python;

QFileInfo __copy__(const QFileInfo &other){ return QFileInfo(other); }

const char* pvt_get_name(const QFileInfo&){ return "QFileInfo";}

void register_QFileInfo_class(){

    { //::QFileInfo
        typedef bp::class_< QFileInfo > QFileInfo_exposer_t;
        QFileInfo_exposer_t QFileInfo_exposer = QFileInfo_exposer_t( "QFileInfo" );
        bp::scope QFileInfo_scope( QFileInfo_exposer );
        QFileInfo_exposer.def( bp::init< >() );
        QFileInfo_exposer.def( bp::init< QString const & >(( bp::arg("file") )) );
        QFileInfo_exposer.def( bp::init< QFile const & >(( bp::arg("file") )) );
        QFileInfo_exposer.def( bp::init< QDir const &, QString const & >(( bp::arg("dir"), bp::arg("file") )) );
        QFileInfo_exposer.def( bp::init< QFileInfo const & >(( bp::arg("fileinfo") )) );
        { //::QFileInfo::absoluteDir
        
            typedef ::QDir ( ::QFileInfo::*absoluteDir_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "absoluteDir"
                , absoluteDir_function_type( &::QFileInfo::absoluteDir ) );
        
        }
        { //::QFileInfo::absoluteFilePath
        
            typedef ::QString ( ::QFileInfo::*absoluteFilePath_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "absoluteFilePath"
                , absoluteFilePath_function_type( &::QFileInfo::absoluteFilePath ) );
        
        }
        { //::QFileInfo::absolutePath
        
            typedef ::QString ( ::QFileInfo::*absolutePath_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "absolutePath"
                , absolutePath_function_type( &::QFileInfo::absolutePath ) );
        
        }
        { //::QFileInfo::baseName
        
            typedef ::QString ( ::QFileInfo::*baseName_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "baseName"
                , baseName_function_type( &::QFileInfo::baseName ) );
        
        }
        { //::QFileInfo::caching
        
            typedef bool ( ::QFileInfo::*caching_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "caching"
                , caching_function_type( &::QFileInfo::caching ) );
        
        }
        { //::QFileInfo::canonicalFilePath
        
            typedef ::QString ( ::QFileInfo::*canonicalFilePath_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "canonicalFilePath"
                , canonicalFilePath_function_type( &::QFileInfo::canonicalFilePath ) );
        
        }
        { //::QFileInfo::canonicalPath
        
            typedef ::QString ( ::QFileInfo::*canonicalPath_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "canonicalPath"
                , canonicalPath_function_type( &::QFileInfo::canonicalPath ) );
        
        }
        { //::QFileInfo::completeBaseName
        
            typedef ::QString ( ::QFileInfo::*completeBaseName_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "completeBaseName"
                , completeBaseName_function_type( &::QFileInfo::completeBaseName ) );
        
        }
        { //::QFileInfo::completeSuffix
        
            typedef ::QString ( ::QFileInfo::*completeSuffix_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "completeSuffix"
                , completeSuffix_function_type( &::QFileInfo::completeSuffix ) );
        
        }
        { //::QFileInfo::created
        
            typedef ::QDateTime ( ::QFileInfo::*created_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "created"
                , created_function_type( &::QFileInfo::created ) );
        
        }
        { //::QFileInfo::dir
        
            typedef ::QDir ( ::QFileInfo::*dir_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "dir"
                , dir_function_type( &::QFileInfo::dir ) );
        
        }
        { //::QFileInfo::exists
        
            typedef bool ( ::QFileInfo::*exists_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "exists"
                , exists_function_type( &::QFileInfo::exists ) );
        
        }
        { //::QFileInfo::fileName
        
            typedef ::QString ( ::QFileInfo::*fileName_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "fileName"
                , fileName_function_type( &::QFileInfo::fileName ) );
        
        }
        { //::QFileInfo::filePath
        
            typedef ::QString ( ::QFileInfo::*filePath_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "filePath"
                , filePath_function_type( &::QFileInfo::filePath ) );
        
        }
        { //::QFileInfo::group
        
            typedef ::QString ( ::QFileInfo::*group_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "group"
                , group_function_type( &::QFileInfo::group ) );
        
        }
        { //::QFileInfo::groupId
        
            typedef ::uint ( ::QFileInfo::*groupId_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "groupId"
                , groupId_function_type( &::QFileInfo::groupId ) );
        
        }
        { //::QFileInfo::isAbsolute
        
            typedef bool ( ::QFileInfo::*isAbsolute_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isAbsolute"
                , isAbsolute_function_type( &::QFileInfo::isAbsolute ) );
        
        }
        { //::QFileInfo::isDir
        
            typedef bool ( ::QFileInfo::*isDir_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isDir"
                , isDir_function_type( &::QFileInfo::isDir ) );
        
        }
        { //::QFileInfo::isExecutable
        
            typedef bool ( ::QFileInfo::*isExecutable_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isExecutable"
                , isExecutable_function_type( &::QFileInfo::isExecutable ) );
        
        }
        { //::QFileInfo::isFile
        
            typedef bool ( ::QFileInfo::*isFile_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isFile"
                , isFile_function_type( &::QFileInfo::isFile ) );
        
        }
        { //::QFileInfo::isHidden
        
            typedef bool ( ::QFileInfo::*isHidden_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isHidden"
                , isHidden_function_type( &::QFileInfo::isHidden ) );
        
        }
        { //::QFileInfo::isReadable
        
            typedef bool ( ::QFileInfo::*isReadable_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isReadable"
                , isReadable_function_type( &::QFileInfo::isReadable ) );
        
        }
        { //::QFileInfo::isRelative
        
            typedef bool ( ::QFileInfo::*isRelative_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isRelative"
                , isRelative_function_type( &::QFileInfo::isRelative ) );
        
        }
        { //::QFileInfo::isRoot
        
            typedef bool ( ::QFileInfo::*isRoot_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isRoot"
                , isRoot_function_type( &::QFileInfo::isRoot ) );
        
        }
        { //::QFileInfo::isSymLink
        
            typedef bool ( ::QFileInfo::*isSymLink_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isSymLink"
                , isSymLink_function_type( &::QFileInfo::isSymLink ) );
        
        }
        { //::QFileInfo::isWritable
        
            typedef bool ( ::QFileInfo::*isWritable_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "isWritable"
                , isWritable_function_type( &::QFileInfo::isWritable ) );
        
        }
        { //::QFileInfo::lastModified
        
            typedef ::QDateTime ( ::QFileInfo::*lastModified_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "lastModified"
                , lastModified_function_type( &::QFileInfo::lastModified ) );
        
        }
        { //::QFileInfo::lastRead
        
            typedef ::QDateTime ( ::QFileInfo::*lastRead_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "lastRead"
                , lastRead_function_type( &::QFileInfo::lastRead ) );
        
        }
        { //::QFileInfo::makeAbsolute
        
            typedef bool ( ::QFileInfo::*makeAbsolute_function_type )(  ) ;
            
            QFileInfo_exposer.def( 
                "makeAbsolute"
                , makeAbsolute_function_type( &::QFileInfo::makeAbsolute ) );
        
        }
        QFileInfo_exposer.def( bp::self != bp::self );
        QFileInfo_exposer.def( bp::self != bp::self );
        QFileInfo_exposer.def( bp::self == bp::self );
        QFileInfo_exposer.def( bp::self == bp::self );
        { //::QFileInfo::owner
        
            typedef ::QString ( ::QFileInfo::*owner_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "owner"
                , owner_function_type( &::QFileInfo::owner ) );
        
        }
        { //::QFileInfo::ownerId
        
            typedef ::uint ( ::QFileInfo::*ownerId_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "ownerId"
                , ownerId_function_type( &::QFileInfo::ownerId ) );
        
        }
        { //::QFileInfo::path
        
            typedef ::QString ( ::QFileInfo::*path_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "path"
                , path_function_type( &::QFileInfo::path ) );
        
        }
        { //::QFileInfo::permission
        
            typedef bool ( ::QFileInfo::*permission_function_type )( ::QFlags< QFile::Permission > ) const;
            
            QFileInfo_exposer.def( 
                "permission"
                , permission_function_type( &::QFileInfo::permission )
                , ( bp::arg("permissions") ) );
        
        }
        { //::QFileInfo::permissions
        
            typedef ::QFlags< QFile::Permission > ( ::QFileInfo::*permissions_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "permissions"
                , permissions_function_type( &::QFileInfo::permissions ) );
        
        }
        { //::QFileInfo::readLink
        
            typedef ::QString ( ::QFileInfo::*readLink_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "readLink"
                , readLink_function_type( &::QFileInfo::readLink ) );
        
        }
        { //::QFileInfo::refresh
        
            typedef void ( ::QFileInfo::*refresh_function_type )(  ) ;
            
            QFileInfo_exposer.def( 
                "refresh"
                , refresh_function_type( &::QFileInfo::refresh ) );
        
        }
        { //::QFileInfo::setCaching
        
            typedef void ( ::QFileInfo::*setCaching_function_type )( bool ) ;
            
            QFileInfo_exposer.def( 
                "setCaching"
                , setCaching_function_type( &::QFileInfo::setCaching )
                , ( bp::arg("on") ) );
        
        }
        { //::QFileInfo::setFile
        
            typedef void ( ::QFileInfo::*setFile_function_type )( ::QString const & ) ;
            
            QFileInfo_exposer.def( 
                "setFile"
                , setFile_function_type( &::QFileInfo::setFile )
                , ( bp::arg("file") ) );
        
        }
        { //::QFileInfo::setFile
        
            typedef void ( ::QFileInfo::*setFile_function_type )( ::QFile const & ) ;
            
            QFileInfo_exposer.def( 
                "setFile"
                , setFile_function_type( &::QFileInfo::setFile )
                , ( bp::arg("file") ) );
        
        }
        { //::QFileInfo::setFile
        
            typedef void ( ::QFileInfo::*setFile_function_type )( ::QDir const &,::QString const & ) ;
            
            QFileInfo_exposer.def( 
                "setFile"
                , setFile_function_type( &::QFileInfo::setFile )
                , ( bp::arg("dir"), bp::arg("file") ) );
        
        }
        { //::QFileInfo::size
        
            typedef ::qint64 ( ::QFileInfo::*size_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "size"
                , size_function_type( &::QFileInfo::size ) );
        
        }
        { //::QFileInfo::suffix
        
            typedef ::QString ( ::QFileInfo::*suffix_function_type )(  ) const;
            
            QFileInfo_exposer.def( 
                "suffix"
                , suffix_function_type( &::QFileInfo::suffix ) );
        
        }
        QFileInfo_exposer.def( "__copy__", &__copy__);
        QFileInfo_exposer.def( "__str__", &pvt_get_name);
    }

}
