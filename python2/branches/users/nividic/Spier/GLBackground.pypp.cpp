// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include "GLBackground.pypp.hpp"

namespace bp = boost::python;

#include "SireStream/datastream.h"

#include "glbackground.h"

#include <QGLWidget>

#include "glbackground.h"

#include "Qt/qdatastream.hpp"

#include "Helpers/str.hpp"

void register_GLBackground_class(){

    { //::Spier::GLBackground
        typedef bp::class_< Spier::GLBackground, bp::bases< Spier::GLRenderFunction, SireBase::Property >, boost::noncopyable > GLBackground_exposer_t;
        GLBackground_exposer_t GLBackground_exposer = GLBackground_exposer_t( "GLBackground", bp::no_init );
        bp::scope GLBackground_scope( GLBackground_exposer );
        { //::Spier::GLBackground::typeName
        
            typedef char const * ( *typeName_function_type )(  );
            typeName_function_type typeName_function_value( &::Spier::GLBackground::typeName );
            
            GLBackground_exposer.def( 
                "typeName"
                , typeName_function_value );
        
        }
        GLBackground_exposer.staticmethod( "typeName" );
        GLBackground_exposer.def( "__rlshift__", &__rlshift__QDataStream< ::Spier::GLBackground >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() );
        GLBackground_exposer.def( "__rrshift__", &__rrshift__QDataStream< ::Spier::GLBackground >,
                            bp::return_internal_reference<1, bp::with_custodian_and_ward<1,2> >() );
        GLBackground_exposer.def( "__str__", &__str__< ::Spier::GLBackground > );
        GLBackground_exposer.def( "__repr__", &__str__< ::Spier::GLBackground > );
    }

}
