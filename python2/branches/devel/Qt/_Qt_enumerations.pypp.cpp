// This file has been generated by Py++.

// (C) Christopher Woods, GPL >= 2 License

#include "boost/python.hpp"
#include <QByteArray>
#include <QDateTime>
#include <QUuid>
#include <QBitArray>
#include "_Qt_enumerations.pypp.hpp"

namespace bp = boost::python;

void register_enumerations(){

    bp::enum_< Qt::AlignmentFlag>("AlignmentFlag")
        .value("AlignLeft", Qt::AlignLeft)
        .value("AlignLeading", Qt::AlignLeading)
        .value("AlignRight", Qt::AlignRight)
        .value("AlignTrailing", Qt::AlignTrailing)
        .value("AlignHCenter", Qt::AlignHCenter)
        .value("AlignJustify", Qt::AlignJustify)
        .value("AlignAbsolute", Qt::AlignAbsolute)
        .value("AlignHorizontal_Mask", Qt::AlignHorizontal_Mask)
        .value("AlignTop", Qt::AlignTop)
        .value("AlignBottom", Qt::AlignBottom)
        .value("AlignVCenter", Qt::AlignVCenter)
        .value("AlignVertical_Mask", Qt::AlignVertical_Mask)
        .value("AlignCenter", Qt::AlignCenter)
        .export_values()
        ;

    bp::enum_< Qt::AnchorPoint>("AnchorPoint")
        .value("AnchorLeft", Qt::AnchorLeft)
        .value("AnchorHorizontalCenter", Qt::AnchorHorizontalCenter)
        .value("AnchorRight", Qt::AnchorRight)
        .value("AnchorTop", Qt::AnchorTop)
        .value("AnchorVerticalCenter", Qt::AnchorVerticalCenter)
        .value("AnchorBottom", Qt::AnchorBottom)
        .export_values()
        ;

    bp::enum_< Qt::ApplicationAttribute>("ApplicationAttribute")
        .value("AA_ImmediateWidgetCreation", Qt::AA_ImmediateWidgetCreation)
        .value("AA_MSWindowsUseDirect3DByDefault", Qt::AA_MSWindowsUseDirect3DByDefault)
        .value("AA_DontShowIconsInMenus", Qt::AA_DontShowIconsInMenus)
        .value("AA_NativeWindows", Qt::AA_NativeWindows)
        .value("AA_DontCreateNativeWidgetSiblings", Qt::AA_DontCreateNativeWidgetSiblings)
        .value("AA_MacPluginApplication", Qt::AA_MacPluginApplication)
        .value("AA_DontUseNativeMenuBar", Qt::AA_DontUseNativeMenuBar)
        .value("AA_MacDontSwapCtrlAndMeta", Qt::AA_MacDontSwapCtrlAndMeta)
        .value("AA_Use96Dpi", Qt::AA_Use96Dpi)
        .value("AA_X11InitThreads", Qt::AA_X11InitThreads)
        .value("AA_SynthesizeTouchForUnhandledMouseEvents", Qt::AA_SynthesizeTouchForUnhandledMouseEvents)
        .value("AA_SynthesizeMouseForUnhandledTouchEvents", Qt::AA_SynthesizeMouseForUnhandledTouchEvents)
        .value("AA_UseHighDpiPixmaps", Qt::AA_UseHighDpiPixmaps)
        .value("AA_AttributeCount", Qt::AA_AttributeCount)
        .export_values()
        ;

    bp::enum_< Qt::ApplicationState>("ApplicationState")
        .value("ApplicationSuspended", Qt::ApplicationSuspended)
        .value("ApplicationHidden", Qt::ApplicationHidden)
        .value("ApplicationInactive", Qt::ApplicationInactive)
        .value("ApplicationActive", Qt::ApplicationActive)
        .export_values()
        ;

    bp::enum_< Qt::ArrowType>("ArrowType")
        .value("NoArrow", Qt::NoArrow)
        .value("UpArrow", Qt::UpArrow)
        .value("DownArrow", Qt::DownArrow)
        .value("LeftArrow", Qt::LeftArrow)
        .value("RightArrow", Qt::RightArrow)
        .export_values()
        ;

    bp::enum_< Qt::AspectRatioMode>("AspectRatioMode")
        .value("IgnoreAspectRatio", Qt::IgnoreAspectRatio)
        .value("KeepAspectRatio", Qt::KeepAspectRatio)
        .value("KeepAspectRatioByExpanding", Qt::KeepAspectRatioByExpanding)
        .export_values()
        ;

    bp::enum_< Qt::Axis>("Axis")
        .value("XAxis", Qt::XAxis)
        .value("YAxis", Qt::YAxis)
        .value("ZAxis", Qt::ZAxis)
        .export_values()
        ;

    bp::enum_< Qt::BGMode>("BGMode")
        .value("TransparentMode", Qt::TransparentMode)
        .value("OpaqueMode", Qt::OpaqueMode)
        .export_values()
        ;

    bp::enum_< Qt::BrushStyle>("BrushStyle")
        .value("NoBrush", Qt::NoBrush)
        .value("SolidPattern", Qt::SolidPattern)
        .value("Dense1Pattern", Qt::Dense1Pattern)
        .value("Dense2Pattern", Qt::Dense2Pattern)
        .value("Dense3Pattern", Qt::Dense3Pattern)
        .value("Dense4Pattern", Qt::Dense4Pattern)
        .value("Dense5Pattern", Qt::Dense5Pattern)
        .value("Dense6Pattern", Qt::Dense6Pattern)
        .value("Dense7Pattern", Qt::Dense7Pattern)
        .value("HorPattern", Qt::HorPattern)
        .value("VerPattern", Qt::VerPattern)
        .value("CrossPattern", Qt::CrossPattern)
        .value("BDiagPattern", Qt::BDiagPattern)
        .value("FDiagPattern", Qt::FDiagPattern)
        .value("DiagCrossPattern", Qt::DiagCrossPattern)
        .value("LinearGradientPattern", Qt::LinearGradientPattern)
        .value("RadialGradientPattern", Qt::RadialGradientPattern)
        .value("ConicalGradientPattern", Qt::ConicalGradientPattern)
        .value("TexturePattern", Qt::TexturePattern)
        .export_values()
        ;

    bp::enum_< Qt::CaseSensitivity>("CaseSensitivity")
        .value("CaseInsensitive", Qt::CaseInsensitive)
        .value("CaseSensitive", Qt::CaseSensitive)
        .export_values()
        ;

    bp::enum_< Qt::CheckState>("CheckState")
        .value("Unchecked", Qt::Unchecked)
        .value("PartiallyChecked", Qt::PartiallyChecked)
        .value("Checked", Qt::Checked)
        .export_values()
        ;

    bp::enum_< Qt::ClipOperation>("ClipOperation")
        .value("NoClip", Qt::NoClip)
        .value("ReplaceClip", Qt::ReplaceClip)
        .value("IntersectClip", Qt::IntersectClip)
        .export_values()
        ;

    bp::enum_< Qt::ConnectionType>("ConnectionType")
        .value("AutoConnection", Qt::AutoConnection)
        .value("DirectConnection", Qt::DirectConnection)
        .value("QueuedConnection", Qt::QueuedConnection)
        .value("BlockingQueuedConnection", Qt::BlockingQueuedConnection)
        .value("UniqueConnection", Qt::UniqueConnection)
        .export_values()
        ;

    bp::enum_< Qt::ContextMenuPolicy>("ContextMenuPolicy")
        .value("NoContextMenu", Qt::NoContextMenu)
        .value("DefaultContextMenu", Qt::DefaultContextMenu)
        .value("ActionsContextMenu", Qt::ActionsContextMenu)
        .value("CustomContextMenu", Qt::CustomContextMenu)
        .value("PreventContextMenu", Qt::PreventContextMenu)
        .export_values()
        ;

    bp::enum_< Qt::CoordinateSystem>("CoordinateSystem")
        .value("DeviceCoordinates", Qt::DeviceCoordinates)
        .value("LogicalCoordinates", Qt::LogicalCoordinates)
        .export_values()
        ;

    bp::enum_< Qt::Corner>("Corner")
        .value("TopLeftCorner", Qt::TopLeftCorner)
        .value("TopRightCorner", Qt::TopRightCorner)
        .value("BottomLeftCorner", Qt::BottomLeftCorner)
        .value("BottomRightCorner", Qt::BottomRightCorner)
        .export_values()
        ;

    bp::enum_< Qt::CursorMoveStyle>("CursorMoveStyle")
        .value("LogicalMoveStyle", Qt::LogicalMoveStyle)
        .value("VisualMoveStyle", Qt::VisualMoveStyle)
        .export_values()
        ;

    bp::enum_< Qt::CursorShape>("CursorShape")
        .value("ArrowCursor", Qt::ArrowCursor)
        .value("UpArrowCursor", Qt::UpArrowCursor)
        .value("CrossCursor", Qt::CrossCursor)
        .value("WaitCursor", Qt::WaitCursor)
        .value("IBeamCursor", Qt::IBeamCursor)
        .value("SizeVerCursor", Qt::SizeVerCursor)
        .value("SizeHorCursor", Qt::SizeHorCursor)
        .value("SizeBDiagCursor", Qt::SizeBDiagCursor)
        .value("SizeFDiagCursor", Qt::SizeFDiagCursor)
        .value("SizeAllCursor", Qt::SizeAllCursor)
        .value("BlankCursor", Qt::BlankCursor)
        .value("SplitVCursor", Qt::SplitVCursor)
        .value("SplitHCursor", Qt::SplitHCursor)
        .value("PointingHandCursor", Qt::PointingHandCursor)
        .value("ForbiddenCursor", Qt::ForbiddenCursor)
        .value("WhatsThisCursor", Qt::WhatsThisCursor)
        .value("BusyCursor", Qt::BusyCursor)
        .value("OpenHandCursor", Qt::OpenHandCursor)
        .value("ClosedHandCursor", Qt::ClosedHandCursor)
        .value("DragCopyCursor", Qt::DragCopyCursor)
        .value("DragMoveCursor", Qt::DragMoveCursor)
        .value("DragLinkCursor", Qt::DragLinkCursor)
        .value("LastCursor", Qt::LastCursor)
        .value("BitmapCursor", Qt::BitmapCursor)
        .value("CustomCursor", Qt::CustomCursor)
        .export_values()
        ;

    bp::enum_< Qt::DateFormat>("DateFormat")
        .value("TextDate", Qt::TextDate)
        .value("ISODate", Qt::ISODate)
        .value("SystemLocaleDate", Qt::SystemLocaleDate)
        .value("LocalDate", Qt::LocalDate)
        .value("LocaleDate", Qt::LocaleDate)
        .value("SystemLocaleShortDate", Qt::SystemLocaleShortDate)
        .value("SystemLocaleLongDate", Qt::SystemLocaleLongDate)
        .value("DefaultLocaleShortDate", Qt::DefaultLocaleShortDate)
        .value("DefaultLocaleLongDate", Qt::DefaultLocaleLongDate)
        .export_values()
        ;

    bp::enum_< Qt::DayOfWeek>("DayOfWeek")
        .value("Monday", Qt::Monday)
        .value("Tuesday", Qt::Tuesday)
        .value("Wednesday", Qt::Wednesday)
        .value("Thursday", Qt::Thursday)
        .value("Friday", Qt::Friday)
        .value("Saturday", Qt::Saturday)
        .value("Sunday", Qt::Sunday)
        .export_values()
        ;

    bp::enum_< Qt::DockWidgetArea>("DockWidgetArea")
        .value("LeftDockWidgetArea", Qt::LeftDockWidgetArea)
        .value("RightDockWidgetArea", Qt::RightDockWidgetArea)
        .value("TopDockWidgetArea", Qt::TopDockWidgetArea)
        .value("BottomDockWidgetArea", Qt::BottomDockWidgetArea)
        .value("DockWidgetArea_Mask", Qt::DockWidgetArea_Mask)
        .value("AllDockWidgetAreas", Qt::AllDockWidgetAreas)
        .value("NoDockWidgetArea", Qt::NoDockWidgetArea)
        .export_values()
        ;

    bp::enum_< Qt::DockWidgetAreaSizes>("DockWidgetAreaSizes")
        .value("NDockWidgetAreas", Qt::NDockWidgetAreas)
        .export_values()
        ;

    bp::enum_< Qt::DropAction>("DropAction")
        .value("CopyAction", Qt::CopyAction)
        .value("MoveAction", Qt::MoveAction)
        .value("LinkAction", Qt::LinkAction)
        .value("ActionMask", Qt::ActionMask)
        .value("TargetMoveAction", Qt::TargetMoveAction)
        .value("IgnoreAction", Qt::IgnoreAction)
        .export_values()
        ;

    bp::enum_< Qt::Edge>("Edge")
        .value("TopEdge", Qt::TopEdge)
        .value("LeftEdge", Qt::LeftEdge)
        .value("RightEdge", Qt::RightEdge)
        .value("BottomEdge", Qt::BottomEdge)
        .export_values()
        ;

    bp::enum_< Qt::EventPriority>("EventPriority")
        .value("HighEventPriority", Qt::HighEventPriority)
        .value("NormalEventPriority", Qt::NormalEventPriority)
        .value("LowEventPriority", Qt::LowEventPriority)
        .export_values()
        ;

    bp::enum_< Qt::FillRule>("FillRule")
        .value("OddEvenFill", Qt::OddEvenFill)
        .value("WindingFill", Qt::WindingFill)
        .export_values()
        ;

    bp::enum_< Qt::FindChildOption>("FindChildOption")
        .value("FindDirectChildrenOnly", Qt::FindDirectChildrenOnly)
        .value("FindChildrenRecursively", Qt::FindChildrenRecursively)
        .export_values()
        ;

    bp::enum_< Qt::FocusPolicy>("FocusPolicy")
        .value("NoFocus", Qt::NoFocus)
        .value("TabFocus", Qt::TabFocus)
        .value("ClickFocus", Qt::ClickFocus)
        .value("StrongFocus", Qt::StrongFocus)
        .value("WheelFocus", Qt::WheelFocus)
        .export_values()
        ;

    bp::enum_< Qt::FocusReason>("FocusReason")
        .value("MouseFocusReason", Qt::MouseFocusReason)
        .value("TabFocusReason", Qt::TabFocusReason)
        .value("BacktabFocusReason", Qt::BacktabFocusReason)
        .value("ActiveWindowFocusReason", Qt::ActiveWindowFocusReason)
        .value("PopupFocusReason", Qt::PopupFocusReason)
        .value("ShortcutFocusReason", Qt::ShortcutFocusReason)
        .value("MenuBarFocusReason", Qt::MenuBarFocusReason)
        .value("OtherFocusReason", Qt::OtherFocusReason)
        .value("NoFocusReason", Qt::NoFocusReason)
        .export_values()
        ;

    bp::enum_< Qt::GestureFlag>("GestureFlag")
        .value("DontStartGestureOnChildren", Qt::DontStartGestureOnChildren)
        .value("ReceivePartialGestures", Qt::ReceivePartialGestures)
        .value("IgnoredGesturesPropagateToParent", Qt::IgnoredGesturesPropagateToParent)
        .export_values()
        ;

    bp::enum_< Qt::GestureState>("GestureState")
        .value("NoGesture", Qt::NoGesture)
        .value("GestureStarted", Qt::GestureStarted)
        .value("GestureUpdated", Qt::GestureUpdated)
        .value("GestureFinished", Qt::GestureFinished)
        .value("GestureCanceled", Qt::GestureCanceled)
        .export_values()
        ;

    bp::enum_< Qt::GestureType>("GestureType")
        .value("TapGesture", Qt::TapGesture)
        .value("TapAndHoldGesture", Qt::TapAndHoldGesture)
        .value("PanGesture", Qt::PanGesture)
        .value("PinchGesture", Qt::PinchGesture)
        .value("SwipeGesture", Qt::SwipeGesture)
        .value("CustomGesture", Qt::CustomGesture)
        .value("LastGestureType", Qt::LastGestureType)
        .export_values()
        ;

    bp::enum_< Qt::GlobalColor>("GlobalColor")
        .value("color0", Qt::color0)
        .value("color1", Qt::color1)
        .value("black", Qt::black)
        .value("white", Qt::white)
        .value("darkGray", Qt::darkGray)
        .value("gray", Qt::gray)
        .value("lightGray", Qt::lightGray)
        .value("red", Qt::red)
        .value("green", Qt::green)
        .value("blue", Qt::blue)
        .value("cyan", Qt::cyan)
        .value("magenta", Qt::magenta)
        .value("yellow", Qt::yellow)
        .value("darkRed", Qt::darkRed)
        .value("darkGreen", Qt::darkGreen)
        .value("darkBlue", Qt::darkBlue)
        .value("darkCyan", Qt::darkCyan)
        .value("darkMagenta", Qt::darkMagenta)
        .value("darkYellow", Qt::darkYellow)
        .value("transparent", Qt::transparent)
        .export_values()
        ;

    bp::enum_< QtGlobalStatic::GuardValues>("GuardValues")
        .value("Destroyed", QtGlobalStatic::Destroyed)
        .value("Initialized", QtGlobalStatic::Initialized)
        .value("Uninitialized", QtGlobalStatic::Uninitialized)
        .value("Initializing", QtGlobalStatic::Initializing)
        .export_values()
        ;

    bp::enum_< Qt::HitTestAccuracy>("HitTestAccuracy")
        .value("ExactHit", Qt::ExactHit)
        .value("FuzzyHit", Qt::FuzzyHit)
        .export_values()
        ;

    bp::enum_< Qt::ImageConversionFlag>("ImageConversionFlag")
        .value("ColorMode_Mask", Qt::ColorMode_Mask)
        .value("AutoColor", Qt::AutoColor)
        .value("ColorOnly", Qt::ColorOnly)
        .value("MonoOnly", Qt::MonoOnly)
        .value("AlphaDither_Mask", Qt::AlphaDither_Mask)
        .value("ThresholdAlphaDither", Qt::ThresholdAlphaDither)
        .value("OrderedAlphaDither", Qt::OrderedAlphaDither)
        .value("DiffuseAlphaDither", Qt::DiffuseAlphaDither)
        .value("NoAlpha", Qt::NoAlpha)
        .value("Dither_Mask", Qt::Dither_Mask)
        .value("DiffuseDither", Qt::DiffuseDither)
        .value("OrderedDither", Qt::OrderedDither)
        .value("ThresholdDither", Qt::ThresholdDither)
        .value("DitherMode_Mask", Qt::DitherMode_Mask)
        .value("AutoDither", Qt::AutoDither)
        .value("PreferDither", Qt::PreferDither)
        .value("AvoidDither", Qt::AvoidDither)
        .value("NoOpaqueDetection", Qt::NoOpaqueDetection)
        .value("NoFormatConversion", Qt::NoFormatConversion)
        .export_values()
        ;

    bp::enum_< Qt::Initialization>("Initialization")
        .value("Uninitialized", Qt::Uninitialized)
        .export_values()
        ;

    bp::enum_< Qt::InputMethodHint>("InputMethodHint")
        .value("ImhNone", Qt::ImhNone)
        .value("ImhHiddenText", Qt::ImhHiddenText)
        .value("ImhSensitiveData", Qt::ImhSensitiveData)
        .value("ImhNoAutoUppercase", Qt::ImhNoAutoUppercase)
        .value("ImhPreferNumbers", Qt::ImhPreferNumbers)
        .value("ImhPreferUppercase", Qt::ImhPreferUppercase)
        .value("ImhPreferLowercase", Qt::ImhPreferLowercase)
        .value("ImhNoPredictiveText", Qt::ImhNoPredictiveText)
        .value("ImhDate", Qt::ImhDate)
        .value("ImhTime", Qt::ImhTime)
        .value("ImhPreferLatin", Qt::ImhPreferLatin)
        .value("ImhMultiLine", Qt::ImhMultiLine)
        .value("ImhDigitsOnly", Qt::ImhDigitsOnly)
        .value("ImhFormattedNumbersOnly", Qt::ImhFormattedNumbersOnly)
        .value("ImhUppercaseOnly", Qt::ImhUppercaseOnly)
        .value("ImhLowercaseOnly", Qt::ImhLowercaseOnly)
        .value("ImhDialableCharactersOnly", Qt::ImhDialableCharactersOnly)
        .value("ImhEmailCharactersOnly", Qt::ImhEmailCharactersOnly)
        .value("ImhUrlCharactersOnly", Qt::ImhUrlCharactersOnly)
        .value("ImhLatinOnly", Qt::ImhLatinOnly)
        .value("ImhExclusiveInputMask", Qt::ImhExclusiveInputMask)
        .export_values()
        ;

    bp::enum_< Qt::InputMethodQuery>("InputMethodQuery")
        .value("ImEnabled", Qt::ImEnabled)
        .value("ImCursorRectangle", Qt::ImCursorRectangle)
        .value("ImMicroFocus", Qt::ImMicroFocus)
        .value("ImFont", Qt::ImFont)
        .value("ImCursorPosition", Qt::ImCursorPosition)
        .value("ImSurroundingText", Qt::ImSurroundingText)
        .value("ImCurrentSelection", Qt::ImCurrentSelection)
        .value("ImMaximumTextLength", Qt::ImMaximumTextLength)
        .value("ImAnchorPosition", Qt::ImAnchorPosition)
        .value("ImHints", Qt::ImHints)
        .value("ImPreferredLanguage", Qt::ImPreferredLanguage)
        .value("ImPlatformData", Qt::ImPlatformData)
        .value("ImQueryInput", Qt::ImQueryInput)
        .value("ImQueryAll", Qt::ImQueryAll)
        .export_values()
        ;

    bp::enum_< Qt::ItemDataRole>("ItemDataRole")
        .value("DisplayRole", Qt::DisplayRole)
        .value("DecorationRole", Qt::DecorationRole)
        .value("EditRole", Qt::EditRole)
        .value("ToolTipRole", Qt::ToolTipRole)
        .value("StatusTipRole", Qt::StatusTipRole)
        .value("WhatsThisRole", Qt::WhatsThisRole)
        .value("FontRole", Qt::FontRole)
        .value("TextAlignmentRole", Qt::TextAlignmentRole)
        .value("BackgroundColorRole", Qt::BackgroundColorRole)
        .value("BackgroundRole", Qt::BackgroundRole)
        .value("TextColorRole", Qt::TextColorRole)
        .value("ForegroundRole", Qt::ForegroundRole)
        .value("CheckStateRole", Qt::CheckStateRole)
        .value("AccessibleTextRole", Qt::AccessibleTextRole)
        .value("AccessibleDescriptionRole", Qt::AccessibleDescriptionRole)
        .value("SizeHintRole", Qt::SizeHintRole)
        .value("InitialSortOrderRole", Qt::InitialSortOrderRole)
        .value("DisplayPropertyRole", Qt::DisplayPropertyRole)
        .value("DecorationPropertyRole", Qt::DecorationPropertyRole)
        .value("ToolTipPropertyRole", Qt::ToolTipPropertyRole)
        .value("StatusTipPropertyRole", Qt::StatusTipPropertyRole)
        .value("WhatsThisPropertyRole", Qt::WhatsThisPropertyRole)
        .value("UserRole", Qt::UserRole)
        .export_values()
        ;

    bp::enum_< Qt::ItemFlag>("ItemFlag")
        .value("NoItemFlags", Qt::NoItemFlags)
        .value("ItemIsSelectable", Qt::ItemIsSelectable)
        .value("ItemIsEditable", Qt::ItemIsEditable)
        .value("ItemIsDragEnabled", Qt::ItemIsDragEnabled)
        .value("ItemIsDropEnabled", Qt::ItemIsDropEnabled)
        .value("ItemIsUserCheckable", Qt::ItemIsUserCheckable)
        .value("ItemIsEnabled", Qt::ItemIsEnabled)
        .value("ItemIsTristate", Qt::ItemIsTristate)
        .value("ItemNeverHasChildren", Qt::ItemNeverHasChildren)
        .export_values()
        ;

    bp::enum_< Qt::ItemSelectionMode>("ItemSelectionMode")
        .value("ContainsItemShape", Qt::ContainsItemShape)
        .value("IntersectsItemShape", Qt::IntersectsItemShape)
        .value("ContainsItemBoundingRect", Qt::ContainsItemBoundingRect)
        .value("IntersectsItemBoundingRect", Qt::IntersectsItemBoundingRect)
        .export_values()
        ;

    bp::enum_< Qt::Key>("Key")
        .value("Key_Escape", Qt::Key_Escape)
        .value("Key_Tab", Qt::Key_Tab)
        .value("Key_Backtab", Qt::Key_Backtab)
        .value("Key_Backspace", Qt::Key_Backspace)
        .value("Key_Return", Qt::Key_Return)
        .value("Key_Enter", Qt::Key_Enter)
        .value("Key_Insert", Qt::Key_Insert)
        .value("Key_Delete", Qt::Key_Delete)
        .value("Key_Pause", Qt::Key_Pause)
        .value("Key_Print", Qt::Key_Print)
        .value("Key_SysReq", Qt::Key_SysReq)
        .value("Key_Clear", Qt::Key_Clear)
        .value("Key_Home", Qt::Key_Home)
        .value("Key_End", Qt::Key_End)
        .value("Key_Left", Qt::Key_Left)
        .value("Key_Up", Qt::Key_Up)
        .value("Key_Right", Qt::Key_Right)
        .value("Key_Down", Qt::Key_Down)
        .value("Key_PageUp", Qt::Key_PageUp)
        .value("Key_PageDown", Qt::Key_PageDown)
        .value("Key_Shift", Qt::Key_Shift)
        .value("Key_Control", Qt::Key_Control)
        .value("Key_Meta", Qt::Key_Meta)
        .value("Key_Alt", Qt::Key_Alt)
        .value("Key_CapsLock", Qt::Key_CapsLock)
        .value("Key_NumLock", Qt::Key_NumLock)
        .value("Key_ScrollLock", Qt::Key_ScrollLock)
        .value("Key_F1", Qt::Key_F1)
        .value("Key_F2", Qt::Key_F2)
        .value("Key_F3", Qt::Key_F3)
        .value("Key_F4", Qt::Key_F4)
        .value("Key_F5", Qt::Key_F5)
        .value("Key_F6", Qt::Key_F6)
        .value("Key_F7", Qt::Key_F7)
        .value("Key_F8", Qt::Key_F8)
        .value("Key_F9", Qt::Key_F9)
        .value("Key_F10", Qt::Key_F10)
        .value("Key_F11", Qt::Key_F11)
        .value("Key_F12", Qt::Key_F12)
        .value("Key_F13", Qt::Key_F13)
        .value("Key_F14", Qt::Key_F14)
        .value("Key_F15", Qt::Key_F15)
        .value("Key_F16", Qt::Key_F16)
        .value("Key_F17", Qt::Key_F17)
        .value("Key_F18", Qt::Key_F18)
        .value("Key_F19", Qt::Key_F19)
        .value("Key_F20", Qt::Key_F20)
        .value("Key_F21", Qt::Key_F21)
        .value("Key_F22", Qt::Key_F22)
        .value("Key_F23", Qt::Key_F23)
        .value("Key_F24", Qt::Key_F24)
        .value("Key_F25", Qt::Key_F25)
        .value("Key_F26", Qt::Key_F26)
        .value("Key_F27", Qt::Key_F27)
        .value("Key_F28", Qt::Key_F28)
        .value("Key_F29", Qt::Key_F29)
        .value("Key_F30", Qt::Key_F30)
        .value("Key_F31", Qt::Key_F31)
        .value("Key_F32", Qt::Key_F32)
        .value("Key_F33", Qt::Key_F33)
        .value("Key_F34", Qt::Key_F34)
        .value("Key_F35", Qt::Key_F35)
        .value("Key_Super_L", Qt::Key_Super_L)
        .value("Key_Super_R", Qt::Key_Super_R)
        .value("Key_Menu", Qt::Key_Menu)
        .value("Key_Hyper_L", Qt::Key_Hyper_L)
        .value("Key_Hyper_R", Qt::Key_Hyper_R)
        .value("Key_Help", Qt::Key_Help)
        .value("Key_Direction_L", Qt::Key_Direction_L)
        .value("Key_Direction_R", Qt::Key_Direction_R)
        .value("Key_Space", Qt::Key_Space)
        .value("Key_Any", Qt::Key_Any)
        .value("Key_Exclam", Qt::Key_Exclam)
        .value("Key_QuoteDbl", Qt::Key_QuoteDbl)
        .value("Key_NumberSign", Qt::Key_NumberSign)
        .value("Key_Dollar", Qt::Key_Dollar)
        .value("Key_Percent", Qt::Key_Percent)
        .value("Key_Ampersand", Qt::Key_Ampersand)
        .value("Key_Apostrophe", Qt::Key_Apostrophe)
        .value("Key_ParenLeft", Qt::Key_ParenLeft)
        .value("Key_ParenRight", Qt::Key_ParenRight)
        .value("Key_Asterisk", Qt::Key_Asterisk)
        .value("Key_Plus", Qt::Key_Plus)
        .value("Key_Comma", Qt::Key_Comma)
        .value("Key_Minus", Qt::Key_Minus)
        .value("Key_Period", Qt::Key_Period)
        .value("Key_Slash", Qt::Key_Slash)
        .value("Key_0", Qt::Key_0)
        .value("Key_1", Qt::Key_1)
        .value("Key_2", Qt::Key_2)
        .value("Key_3", Qt::Key_3)
        .value("Key_4", Qt::Key_4)
        .value("Key_5", Qt::Key_5)
        .value("Key_6", Qt::Key_6)
        .value("Key_7", Qt::Key_7)
        .value("Key_8", Qt::Key_8)
        .value("Key_9", Qt::Key_9)
        .value("Key_Colon", Qt::Key_Colon)
        .value("Key_Semicolon", Qt::Key_Semicolon)
        .value("Key_Less", Qt::Key_Less)
        .value("Key_Equal", Qt::Key_Equal)
        .value("Key_Greater", Qt::Key_Greater)
        .value("Key_Question", Qt::Key_Question)
        .value("Key_At", Qt::Key_At)
        .value("Key_A", Qt::Key_A)
        .value("Key_B", Qt::Key_B)
        .value("Key_C", Qt::Key_C)
        .value("Key_D", Qt::Key_D)
        .value("Key_E", Qt::Key_E)
        .value("Key_F", Qt::Key_F)
        .value("Key_G", Qt::Key_G)
        .value("Key_H", Qt::Key_H)
        .value("Key_I", Qt::Key_I)
        .value("Key_J", Qt::Key_J)
        .value("Key_K", Qt::Key_K)
        .value("Key_L", Qt::Key_L)
        .value("Key_M", Qt::Key_M)
        .value("Key_N", Qt::Key_N)
        .value("Key_O", Qt::Key_O)
        .value("Key_P", Qt::Key_P)
        .value("Key_Q", Qt::Key_Q)
        .value("Key_R", Qt::Key_R)
        .value("Key_S", Qt::Key_S)
        .value("Key_T", Qt::Key_T)
        .value("Key_U", Qt::Key_U)
        .value("Key_V", Qt::Key_V)
        .value("Key_W", Qt::Key_W)
        .value("Key_X", Qt::Key_X)
        .value("Key_Y", Qt::Key_Y)
        .value("Key_Z", Qt::Key_Z)
        .value("Key_BracketLeft", Qt::Key_BracketLeft)
        .value("Key_Backslash", Qt::Key_Backslash)
        .value("Key_BracketRight", Qt::Key_BracketRight)
        .value("Key_AsciiCircum", Qt::Key_AsciiCircum)
        .value("Key_Underscore", Qt::Key_Underscore)
        .value("Key_QuoteLeft", Qt::Key_QuoteLeft)
        .value("Key_BraceLeft", Qt::Key_BraceLeft)
        .value("Key_Bar", Qt::Key_Bar)
        .value("Key_BraceRight", Qt::Key_BraceRight)
        .value("Key_AsciiTilde", Qt::Key_AsciiTilde)
        .value("Key_nobreakspace", Qt::Key_nobreakspace)
        .value("Key_exclamdown", Qt::Key_exclamdown)
        .value("Key_cent", Qt::Key_cent)
        .value("Key_sterling", Qt::Key_sterling)
        .value("Key_currency", Qt::Key_currency)
        .value("Key_yen", Qt::Key_yen)
        .value("Key_brokenbar", Qt::Key_brokenbar)
        .value("Key_section", Qt::Key_section)
        .value("Key_diaeresis", Qt::Key_diaeresis)
        .value("Key_copyright", Qt::Key_copyright)
        .value("Key_ordfeminine", Qt::Key_ordfeminine)
        .value("Key_guillemotleft", Qt::Key_guillemotleft)
        .value("Key_notsign", Qt::Key_notsign)
        .value("Key_hyphen", Qt::Key_hyphen)
        .value("Key_registered", Qt::Key_registered)
        .value("Key_macron", Qt::Key_macron)
        .value("Key_degree", Qt::Key_degree)
        .value("Key_plusminus", Qt::Key_plusminus)
        .value("Key_twosuperior", Qt::Key_twosuperior)
        .value("Key_threesuperior", Qt::Key_threesuperior)
        .value("Key_acute", Qt::Key_acute)
        .value("Key_mu", Qt::Key_mu)
        .value("Key_paragraph", Qt::Key_paragraph)
        .value("Key_periodcentered", Qt::Key_periodcentered)
        .value("Key_cedilla", Qt::Key_cedilla)
        .value("Key_onesuperior", Qt::Key_onesuperior)
        .value("Key_masculine", Qt::Key_masculine)
        .value("Key_guillemotright", Qt::Key_guillemotright)
        .value("Key_onequarter", Qt::Key_onequarter)
        .value("Key_onehalf", Qt::Key_onehalf)
        .value("Key_threequarters", Qt::Key_threequarters)
        .value("Key_questiondown", Qt::Key_questiondown)
        .value("Key_Agrave", Qt::Key_Agrave)
        .value("Key_Aacute", Qt::Key_Aacute)
        .value("Key_Acircumflex", Qt::Key_Acircumflex)
        .value("Key_Atilde", Qt::Key_Atilde)
        .value("Key_Adiaeresis", Qt::Key_Adiaeresis)
        .value("Key_Aring", Qt::Key_Aring)
        .value("Key_AE", Qt::Key_AE)
        .value("Key_Ccedilla", Qt::Key_Ccedilla)
        .value("Key_Egrave", Qt::Key_Egrave)
        .value("Key_Eacute", Qt::Key_Eacute)
        .value("Key_Ecircumflex", Qt::Key_Ecircumflex)
        .value("Key_Ediaeresis", Qt::Key_Ediaeresis)
        .value("Key_Igrave", Qt::Key_Igrave)
        .value("Key_Iacute", Qt::Key_Iacute)
        .value("Key_Icircumflex", Qt::Key_Icircumflex)
        .value("Key_Idiaeresis", Qt::Key_Idiaeresis)
        .value("Key_ETH", Qt::Key_ETH)
        .value("Key_Ntilde", Qt::Key_Ntilde)
        .value("Key_Ograve", Qt::Key_Ograve)
        .value("Key_Oacute", Qt::Key_Oacute)
        .value("Key_Ocircumflex", Qt::Key_Ocircumflex)
        .value("Key_Otilde", Qt::Key_Otilde)
        .value("Key_Odiaeresis", Qt::Key_Odiaeresis)
        .value("Key_multiply", Qt::Key_multiply)
        .value("Key_Ooblique", Qt::Key_Ooblique)
        .value("Key_Ugrave", Qt::Key_Ugrave)
        .value("Key_Uacute", Qt::Key_Uacute)
        .value("Key_Ucircumflex", Qt::Key_Ucircumflex)
        .value("Key_Udiaeresis", Qt::Key_Udiaeresis)
        .value("Key_Yacute", Qt::Key_Yacute)
        .value("Key_THORN", Qt::Key_THORN)
        .value("Key_ssharp", Qt::Key_ssharp)
        .value("Key_division", Qt::Key_division)
        .value("Key_ydiaeresis", Qt::Key_ydiaeresis)
        .value("Key_AltGr", Qt::Key_AltGr)
        .value("Key_Multi_key", Qt::Key_Multi_key)
        .value("Key_Codeinput", Qt::Key_Codeinput)
        .value("Key_SingleCandidate", Qt::Key_SingleCandidate)
        .value("Key_MultipleCandidate", Qt::Key_MultipleCandidate)
        .value("Key_PreviousCandidate", Qt::Key_PreviousCandidate)
        .value("Key_Mode_switch", Qt::Key_Mode_switch)
        .value("Key_Kanji", Qt::Key_Kanji)
        .value("Key_Muhenkan", Qt::Key_Muhenkan)
        .value("Key_Henkan", Qt::Key_Henkan)
        .value("Key_Romaji", Qt::Key_Romaji)
        .value("Key_Hiragana", Qt::Key_Hiragana)
        .value("Key_Katakana", Qt::Key_Katakana)
        .value("Key_Hiragana_Katakana", Qt::Key_Hiragana_Katakana)
        .value("Key_Zenkaku", Qt::Key_Zenkaku)
        .value("Key_Hankaku", Qt::Key_Hankaku)
        .value("Key_Zenkaku_Hankaku", Qt::Key_Zenkaku_Hankaku)
        .value("Key_Touroku", Qt::Key_Touroku)
        .value("Key_Massyo", Qt::Key_Massyo)
        .value("Key_Kana_Lock", Qt::Key_Kana_Lock)
        .value("Key_Kana_Shift", Qt::Key_Kana_Shift)
        .value("Key_Eisu_Shift", Qt::Key_Eisu_Shift)
        .value("Key_Eisu_toggle", Qt::Key_Eisu_toggle)
        .value("Key_Hangul", Qt::Key_Hangul)
        .value("Key_Hangul_Start", Qt::Key_Hangul_Start)
        .value("Key_Hangul_End", Qt::Key_Hangul_End)
        .value("Key_Hangul_Hanja", Qt::Key_Hangul_Hanja)
        .value("Key_Hangul_Jamo", Qt::Key_Hangul_Jamo)
        .value("Key_Hangul_Romaja", Qt::Key_Hangul_Romaja)
        .value("Key_Hangul_Jeonja", Qt::Key_Hangul_Jeonja)
        .value("Key_Hangul_Banja", Qt::Key_Hangul_Banja)
        .value("Key_Hangul_PreHanja", Qt::Key_Hangul_PreHanja)
        .value("Key_Hangul_PostHanja", Qt::Key_Hangul_PostHanja)
        .value("Key_Hangul_Special", Qt::Key_Hangul_Special)
        .value("Key_Dead_Grave", Qt::Key_Dead_Grave)
        .value("Key_Dead_Acute", Qt::Key_Dead_Acute)
        .value("Key_Dead_Circumflex", Qt::Key_Dead_Circumflex)
        .value("Key_Dead_Tilde", Qt::Key_Dead_Tilde)
        .value("Key_Dead_Macron", Qt::Key_Dead_Macron)
        .value("Key_Dead_Breve", Qt::Key_Dead_Breve)
        .value("Key_Dead_Abovedot", Qt::Key_Dead_Abovedot)
        .value("Key_Dead_Diaeresis", Qt::Key_Dead_Diaeresis)
        .value("Key_Dead_Abovering", Qt::Key_Dead_Abovering)
        .value("Key_Dead_Doubleacute", Qt::Key_Dead_Doubleacute)
        .value("Key_Dead_Caron", Qt::Key_Dead_Caron)
        .value("Key_Dead_Cedilla", Qt::Key_Dead_Cedilla)
        .value("Key_Dead_Ogonek", Qt::Key_Dead_Ogonek)
        .value("Key_Dead_Iota", Qt::Key_Dead_Iota)
        .value("Key_Dead_Voiced_Sound", Qt::Key_Dead_Voiced_Sound)
        .value("Key_Dead_Semivoiced_Sound", Qt::Key_Dead_Semivoiced_Sound)
        .value("Key_Dead_Belowdot", Qt::Key_Dead_Belowdot)
        .value("Key_Dead_Hook", Qt::Key_Dead_Hook)
        .value("Key_Dead_Horn", Qt::Key_Dead_Horn)
        .value("Key_Back", Qt::Key_Back)
        .value("Key_Forward", Qt::Key_Forward)
        .value("Key_Stop", Qt::Key_Stop)
        .value("Key_Refresh", Qt::Key_Refresh)
        .value("Key_VolumeDown", Qt::Key_VolumeDown)
        .value("Key_VolumeMute", Qt::Key_VolumeMute)
        .value("Key_VolumeUp", Qt::Key_VolumeUp)
        .value("Key_BassBoost", Qt::Key_BassBoost)
        .value("Key_BassUp", Qt::Key_BassUp)
        .value("Key_BassDown", Qt::Key_BassDown)
        .value("Key_TrebleUp", Qt::Key_TrebleUp)
        .value("Key_TrebleDown", Qt::Key_TrebleDown)
        .value("Key_MediaPlay", Qt::Key_MediaPlay)
        .value("Key_MediaStop", Qt::Key_MediaStop)
        .value("Key_MediaPrevious", Qt::Key_MediaPrevious)
        .value("Key_MediaNext", Qt::Key_MediaNext)
        .value("Key_MediaRecord", Qt::Key_MediaRecord)
        .value("Key_MediaPause", Qt::Key_MediaPause)
        .value("Key_MediaTogglePlayPause", Qt::Key_MediaTogglePlayPause)
        .value("Key_HomePage", Qt::Key_HomePage)
        .value("Key_Favorites", Qt::Key_Favorites)
        .value("Key_Search", Qt::Key_Search)
        .value("Key_Standby", Qt::Key_Standby)
        .value("Key_OpenUrl", Qt::Key_OpenUrl)
        .value("Key_LaunchMail", Qt::Key_LaunchMail)
        .value("Key_LaunchMedia", Qt::Key_LaunchMedia)
        .value("Key_Launch0", Qt::Key_Launch0)
        .value("Key_Launch1", Qt::Key_Launch1)
        .value("Key_Launch2", Qt::Key_Launch2)
        .value("Key_Launch3", Qt::Key_Launch3)
        .value("Key_Launch4", Qt::Key_Launch4)
        .value("Key_Launch5", Qt::Key_Launch5)
        .value("Key_Launch6", Qt::Key_Launch6)
        .value("Key_Launch7", Qt::Key_Launch7)
        .value("Key_Launch8", Qt::Key_Launch8)
        .value("Key_Launch9", Qt::Key_Launch9)
        .value("Key_LaunchA", Qt::Key_LaunchA)
        .value("Key_LaunchB", Qt::Key_LaunchB)
        .value("Key_LaunchC", Qt::Key_LaunchC)
        .value("Key_LaunchD", Qt::Key_LaunchD)
        .value("Key_LaunchE", Qt::Key_LaunchE)
        .value("Key_LaunchF", Qt::Key_LaunchF)
        .value("Key_MonBrightnessUp", Qt::Key_MonBrightnessUp)
        .value("Key_MonBrightnessDown", Qt::Key_MonBrightnessDown)
        .value("Key_KeyboardLightOnOff", Qt::Key_KeyboardLightOnOff)
        .value("Key_KeyboardBrightnessUp", Qt::Key_KeyboardBrightnessUp)
        .value("Key_KeyboardBrightnessDown", Qt::Key_KeyboardBrightnessDown)
        .value("Key_PowerOff", Qt::Key_PowerOff)
        .value("Key_WakeUp", Qt::Key_WakeUp)
        .value("Key_Eject", Qt::Key_Eject)
        .value("Key_ScreenSaver", Qt::Key_ScreenSaver)
        .value("Key_WWW", Qt::Key_WWW)
        .value("Key_Memo", Qt::Key_Memo)
        .value("Key_LightBulb", Qt::Key_LightBulb)
        .value("Key_Shop", Qt::Key_Shop)
        .value("Key_History", Qt::Key_History)
        .value("Key_AddFavorite", Qt::Key_AddFavorite)
        .value("Key_HotLinks", Qt::Key_HotLinks)
        .value("Key_BrightnessAdjust", Qt::Key_BrightnessAdjust)
        .value("Key_Finance", Qt::Key_Finance)
        .value("Key_Community", Qt::Key_Community)
        .value("Key_AudioRewind", Qt::Key_AudioRewind)
        .value("Key_BackForward", Qt::Key_BackForward)
        .value("Key_ApplicationLeft", Qt::Key_ApplicationLeft)
        .value("Key_ApplicationRight", Qt::Key_ApplicationRight)
        .value("Key_Book", Qt::Key_Book)
        .value("Key_CD", Qt::Key_CD)
        .value("Key_Calculator", Qt::Key_Calculator)
        .value("Key_ToDoList", Qt::Key_ToDoList)
        .value("Key_ClearGrab", Qt::Key_ClearGrab)
        .value("Key_Close", Qt::Key_Close)
        .value("Key_Copy", Qt::Key_Copy)
        .value("Key_Cut", Qt::Key_Cut)
        .value("Key_Display", Qt::Key_Display)
        .value("Key_DOS", Qt::Key_DOS)
        .value("Key_Documents", Qt::Key_Documents)
        .value("Key_Excel", Qt::Key_Excel)
        .value("Key_Explorer", Qt::Key_Explorer)
        .value("Key_Game", Qt::Key_Game)
        .value("Key_Go", Qt::Key_Go)
        .value("Key_iTouch", Qt::Key_iTouch)
        .value("Key_LogOff", Qt::Key_LogOff)
        .value("Key_Market", Qt::Key_Market)
        .value("Key_Meeting", Qt::Key_Meeting)
        .value("Key_MenuKB", Qt::Key_MenuKB)
        .value("Key_MenuPB", Qt::Key_MenuPB)
        .value("Key_MySites", Qt::Key_MySites)
        .value("Key_News", Qt::Key_News)
        .value("Key_OfficeHome", Qt::Key_OfficeHome)
        .value("Key_Option", Qt::Key_Option)
        .value("Key_Paste", Qt::Key_Paste)
        .value("Key_Phone", Qt::Key_Phone)
        .value("Key_Calendar", Qt::Key_Calendar)
        .value("Key_Reply", Qt::Key_Reply)
        .value("Key_Reload", Qt::Key_Reload)
        .value("Key_RotateWindows", Qt::Key_RotateWindows)
        .value("Key_RotationPB", Qt::Key_RotationPB)
        .value("Key_RotationKB", Qt::Key_RotationKB)
        .value("Key_Save", Qt::Key_Save)
        .value("Key_Send", Qt::Key_Send)
        .value("Key_Spell", Qt::Key_Spell)
        .value("Key_SplitScreen", Qt::Key_SplitScreen)
        .value("Key_Support", Qt::Key_Support)
        .value("Key_TaskPane", Qt::Key_TaskPane)
        .value("Key_Terminal", Qt::Key_Terminal)
        .value("Key_Tools", Qt::Key_Tools)
        .value("Key_Travel", Qt::Key_Travel)
        .value("Key_Video", Qt::Key_Video)
        .value("Key_Word", Qt::Key_Word)
        .value("Key_Xfer", Qt::Key_Xfer)
        .value("Key_ZoomIn", Qt::Key_ZoomIn)
        .value("Key_ZoomOut", Qt::Key_ZoomOut)
        .value("Key_Away", Qt::Key_Away)
        .value("Key_Messenger", Qt::Key_Messenger)
        .value("Key_WebCam", Qt::Key_WebCam)
        .value("Key_MailForward", Qt::Key_MailForward)
        .value("Key_Pictures", Qt::Key_Pictures)
        .value("Key_Music", Qt::Key_Music)
        .value("Key_Battery", Qt::Key_Battery)
        .value("Key_Bluetooth", Qt::Key_Bluetooth)
        .value("Key_WLAN", Qt::Key_WLAN)
        .value("Key_UWB", Qt::Key_UWB)
        .value("Key_AudioForward", Qt::Key_AudioForward)
        .value("Key_AudioRepeat", Qt::Key_AudioRepeat)
        .value("Key_AudioRandomPlay", Qt::Key_AudioRandomPlay)
        .value("Key_Subtitle", Qt::Key_Subtitle)
        .value("Key_AudioCycleTrack", Qt::Key_AudioCycleTrack)
        .value("Key_Time", Qt::Key_Time)
        .value("Key_Hibernate", Qt::Key_Hibernate)
        .value("Key_View", Qt::Key_View)
        .value("Key_TopMenu", Qt::Key_TopMenu)
        .value("Key_PowerDown", Qt::Key_PowerDown)
        .value("Key_Suspend", Qt::Key_Suspend)
        .value("Key_ContrastAdjust", Qt::Key_ContrastAdjust)
        .value("Key_LaunchG", Qt::Key_LaunchG)
        .value("Key_LaunchH", Qt::Key_LaunchH)
        .value("Key_TouchpadToggle", Qt::Key_TouchpadToggle)
        .value("Key_TouchpadOn", Qt::Key_TouchpadOn)
        .value("Key_TouchpadOff", Qt::Key_TouchpadOff)
        .value("Key_MicMute", Qt::Key_MicMute)
        .value("Key_MediaLast", Qt::Key_MediaLast)
        .value("Key_Select", Qt::Key_Select)
        .value("Key_Yes", Qt::Key_Yes)
        .value("Key_No", Qt::Key_No)
        .value("Key_Cancel", Qt::Key_Cancel)
        .value("Key_Printer", Qt::Key_Printer)
        .value("Key_Execute", Qt::Key_Execute)
        .value("Key_Sleep", Qt::Key_Sleep)
        .value("Key_Play", Qt::Key_Play)
        .value("Key_Zoom", Qt::Key_Zoom)
        .value("Key_Context1", Qt::Key_Context1)
        .value("Key_Context2", Qt::Key_Context2)
        .value("Key_Context3", Qt::Key_Context3)
        .value("Key_Context4", Qt::Key_Context4)
        .value("Key_Call", Qt::Key_Call)
        .value("Key_Hangup", Qt::Key_Hangup)
        .value("Key_Flip", Qt::Key_Flip)
        .value("Key_ToggleCallHangup", Qt::Key_ToggleCallHangup)
        .value("Key_VoiceDial", Qt::Key_VoiceDial)
        .value("Key_LastNumberRedial", Qt::Key_LastNumberRedial)
        .value("Key_Camera", Qt::Key_Camera)
        .value("Key_CameraFocus", Qt::Key_CameraFocus)
        .value("Key_unknown", Qt::Key_unknown)
        .export_values()
        ;

    bp::enum_< Qt::KeyboardModifier>("KeyboardModifier")
        .value("NoModifier", Qt::NoModifier)
        .value("ShiftModifier", Qt::ShiftModifier)
        .value("ControlModifier", Qt::ControlModifier)
        .value("AltModifier", Qt::AltModifier)
        .value("MetaModifier", Qt::MetaModifier)
        .value("KeypadModifier", Qt::KeypadModifier)
        .value("GroupSwitchModifier", Qt::GroupSwitchModifier)
        .value("KeyboardModifierMask", Qt::KeyboardModifierMask)
        .export_values()
        ;

    bp::enum_< Qt::LayoutDirection>("LayoutDirection")
        .value("LeftToRight", Qt::LeftToRight)
        .value("RightToLeft", Qt::RightToLeft)
        .value("LayoutDirectionAuto", Qt::LayoutDirectionAuto)
        .export_values()
        ;

    bp::enum_< Qt::MaskMode>("MaskMode")
        .value("MaskInColor", Qt::MaskInColor)
        .value("MaskOutColor", Qt::MaskOutColor)
        .export_values()
        ;

    bp::enum_< Qt::MatchFlag>("MatchFlag")
        .value("MatchExactly", Qt::MatchExactly)
        .value("MatchContains", Qt::MatchContains)
        .value("MatchStartsWith", Qt::MatchStartsWith)
        .value("MatchEndsWith", Qt::MatchEndsWith)
        .value("MatchRegExp", Qt::MatchRegExp)
        .value("MatchWildcard", Qt::MatchWildcard)
        .value("MatchFixedString", Qt::MatchFixedString)
        .value("MatchCaseSensitive", Qt::MatchCaseSensitive)
        .value("MatchWrap", Qt::MatchWrap)
        .value("MatchRecursive", Qt::MatchRecursive)
        .export_values()
        ;

    bp::enum_< Qt::Modifier>("Modifier")
        .value("META", Qt::META)
        .value("SHIFT", Qt::SHIFT)
        .value("CTRL", Qt::CTRL)
        .value("ALT", Qt::ALT)
        .value("MODIFIER_MASK", Qt::MODIFIER_MASK)
        .value("UNICODE_ACCEL", Qt::UNICODE_ACCEL)
        .export_values()
        ;

    bp::enum_< Qt::MouseButton>("MouseButton")
        .value("NoButton", Qt::NoButton)
        .value("LeftButton", Qt::LeftButton)
        .value("RightButton", Qt::RightButton)
        .value("MidButton", Qt::MidButton)
        .value("MiddleButton", Qt::MiddleButton)
        .value("BackButton", Qt::BackButton)
        .value("XButton1", Qt::XButton1)
        .value("ExtraButton1", Qt::ExtraButton1)
        .value("ForwardButton", Qt::ForwardButton)
        .value("XButton2", Qt::XButton2)
        .value("ExtraButton2", Qt::ExtraButton2)
        .value("TaskButton", Qt::TaskButton)
        .value("ExtraButton3", Qt::ExtraButton3)
        .value("ExtraButton4", Qt::ExtraButton4)
        .value("ExtraButton5", Qt::ExtraButton5)
        .value("ExtraButton6", Qt::ExtraButton6)
        .value("ExtraButton7", Qt::ExtraButton7)
        .value("ExtraButton8", Qt::ExtraButton8)
        .value("ExtraButton9", Qt::ExtraButton9)
        .value("ExtraButton10", Qt::ExtraButton10)
        .value("ExtraButton11", Qt::ExtraButton11)
        .value("ExtraButton12", Qt::ExtraButton12)
        .value("ExtraButton13", Qt::ExtraButton13)
        .value("ExtraButton14", Qt::ExtraButton14)
        .value("ExtraButton15", Qt::ExtraButton15)
        .value("ExtraButton16", Qt::ExtraButton16)
        .value("ExtraButton17", Qt::ExtraButton17)
        .value("ExtraButton18", Qt::ExtraButton18)
        .value("ExtraButton19", Qt::ExtraButton19)
        .value("ExtraButton20", Qt::ExtraButton20)
        .value("ExtraButton21", Qt::ExtraButton21)
        .value("ExtraButton22", Qt::ExtraButton22)
        .value("ExtraButton23", Qt::ExtraButton23)
        .value("ExtraButton24", Qt::ExtraButton24)
        .value("AllButtons", Qt::AllButtons)
        .value("MaxMouseButton", Qt::MaxMouseButton)
        .value("MouseButtonMask", Qt::MouseButtonMask)
        .export_values()
        ;

    bp::enum_< Qt::NavigationMode>("NavigationMode")
        .value("NavigationModeNone", Qt::NavigationModeNone)
        .value("NavigationModeKeypadTabOrder", Qt::NavigationModeKeypadTabOrder)
        .value("NavigationModeKeypadDirectional", Qt::NavigationModeKeypadDirectional)
        .value("NavigationModeCursorAuto", Qt::NavigationModeCursorAuto)
        .value("NavigationModeCursorForceVisible", Qt::NavigationModeCursorForceVisible)
        .export_values()
        ;

    bp::enum_< Qt::Orientation>("Orientation")
        .value("Horizontal", Qt::Horizontal)
        .value("Vertical", Qt::Vertical)
        .export_values()
        ;

    bp::enum_< Qt::PenCapStyle>("PenCapStyle")
        .value("FlatCap", Qt::FlatCap)
        .value("SquareCap", Qt::SquareCap)
        .value("RoundCap", Qt::RoundCap)
        .value("MPenCapStyle", Qt::MPenCapStyle)
        .export_values()
        ;

    bp::enum_< Qt::PenJoinStyle>("PenJoinStyle")
        .value("MiterJoin", Qt::MiterJoin)
        .value("BevelJoin", Qt::BevelJoin)
        .value("RoundJoin", Qt::RoundJoin)
        .value("SvgMiterJoin", Qt::SvgMiterJoin)
        .value("MPenJoinStyle", Qt::MPenJoinStyle)
        .export_values()
        ;

    bp::enum_< Qt::PenStyle>("PenStyle")
        .value("NoPen", Qt::NoPen)
        .value("SolidLine", Qt::SolidLine)
        .value("DashLine", Qt::DashLine)
        .value("DotLine", Qt::DotLine)
        .value("DashDotLine", Qt::DashDotLine)
        .value("DashDotDotLine", Qt::DashDotDotLine)
        .value("CustomDashLine", Qt::CustomDashLine)
        .value("MPenStyle", Qt::MPenStyle)
        .export_values()
        ;

    bp::enum_< QtMsgType>("QtMsgType")
        .value("QtDebugMsg", QtDebugMsg)
        .value("QtWarningMsg", QtWarningMsg)
        .value("QtCriticalMsg", QtCriticalMsg)
        .value("QtFatalMsg", QtFatalMsg)
        .value("QtSystemMsg", QtSystemMsg)
        .export_values()
        ;

    bp::enum_< Qt::ScreenOrientation>("ScreenOrientation")
        .value("PrimaryOrientation", Qt::PrimaryOrientation)
        .value("PortraitOrientation", Qt::PortraitOrientation)
        .value("LandscapeOrientation", Qt::LandscapeOrientation)
        .value("InvertedPortraitOrientation", Qt::InvertedPortraitOrientation)
        .value("InvertedLandscapeOrientation", Qt::InvertedLandscapeOrientation)
        .export_values()
        ;

    bp::enum_< Qt::ScrollBarPolicy>("ScrollBarPolicy")
        .value("ScrollBarAsNeeded", Qt::ScrollBarAsNeeded)
        .value("ScrollBarAlwaysOff", Qt::ScrollBarAlwaysOff)
        .value("ScrollBarAlwaysOn", Qt::ScrollBarAlwaysOn)
        .export_values()
        ;

    bp::enum_< Qt::ShortcutContext>("ShortcutContext")
        .value("WidgetShortcut", Qt::WidgetShortcut)
        .value("WindowShortcut", Qt::WindowShortcut)
        .value("ApplicationShortcut", Qt::ApplicationShortcut)
        .value("WidgetWithChildrenShortcut", Qt::WidgetWithChildrenShortcut)
        .export_values()
        ;

    bp::enum_< Qt::SizeHint>("SizeHint")
        .value("MinimumSize", Qt::MinimumSize)
        .value("PreferredSize", Qt::PreferredSize)
        .value("MaximumSize", Qt::MaximumSize)
        .value("MinimumDescent", Qt::MinimumDescent)
        .value("NSizeHints", Qt::NSizeHints)
        .export_values()
        ;

    bp::enum_< Qt::SizeMode>("SizeMode")
        .value("AbsoluteSize", Qt::AbsoluteSize)
        .value("RelativeSize", Qt::RelativeSize)
        .export_values()
        ;

    bp::enum_< Qt::SortOrder>("SortOrder")
        .value("AscendingOrder", Qt::AscendingOrder)
        .value("DescendingOrder", Qt::DescendingOrder)
        .export_values()
        ;

    bp::enum_< Qt::TextElideMode>("TextElideMode")
        .value("ElideLeft", Qt::ElideLeft)
        .value("ElideRight", Qt::ElideRight)
        .value("ElideMiddle", Qt::ElideMiddle)
        .value("ElideNone", Qt::ElideNone)
        .export_values()
        ;

    bp::enum_< Qt::TextFlag>("TextFlag")
        .value("TextSingleLine", Qt::TextSingleLine)
        .value("TextDontClip", Qt::TextDontClip)
        .value("TextExpandTabs", Qt::TextExpandTabs)
        .value("TextShowMnemonic", Qt::TextShowMnemonic)
        .value("TextWordWrap", Qt::TextWordWrap)
        .value("TextWrapAnywhere", Qt::TextWrapAnywhere)
        .value("TextDontPrint", Qt::TextDontPrint)
        .value("TextIncludeTrailingSpaces", Qt::TextIncludeTrailingSpaces)
        .value("TextHideMnemonic", Qt::TextHideMnemonic)
        .value("TextJustificationForced", Qt::TextJustificationForced)
        .value("TextForceLeftToRight", Qt::TextForceLeftToRight)
        .value("TextForceRightToLeft", Qt::TextForceRightToLeft)
        .value("TextLongestVariant", Qt::TextLongestVariant)
        .value("TextBypassShaping", Qt::TextBypassShaping)
        .export_values()
        ;

    bp::enum_< Qt::TextFormat>("TextFormat")
        .value("PlainText", Qt::PlainText)
        .value("RichText", Qt::RichText)
        .value("AutoText", Qt::AutoText)
        .export_values()
        ;

    bp::enum_< Qt::TextInteractionFlag>("TextInteractionFlag")
        .value("NoTextInteraction", Qt::NoTextInteraction)
        .value("TextSelectableByMouse", Qt::TextSelectableByMouse)
        .value("TextSelectableByKeyboard", Qt::TextSelectableByKeyboard)
        .value("LinksAccessibleByMouse", Qt::LinksAccessibleByMouse)
        .value("LinksAccessibleByKeyboard", Qt::LinksAccessibleByKeyboard)
        .value("TextEditable", Qt::TextEditable)
        .value("TextEditorInteraction", Qt::TextEditorInteraction)
        .value("TextBrowserInteraction", Qt::TextBrowserInteraction)
        .export_values()
        ;

    bp::enum_< Qt::TileRule>("TileRule")
        .value("StretchTile", Qt::StretchTile)
        .value("RepeatTile", Qt::RepeatTile)
        .value("RoundTile", Qt::RoundTile)
        .export_values()
        ;

    bp::enum_< Qt::TimeSpec>("TimeSpec")
        .value("LocalTime", Qt::LocalTime)
        .value("UTC", Qt::UTC)
        .value("OffsetFromUTC", Qt::OffsetFromUTC)
        .export_values()
        ;

    bp::enum_< Qt::TimerType>("TimerType")
        .value("PreciseTimer", Qt::PreciseTimer)
        .value("CoarseTimer", Qt::CoarseTimer)
        .value("VeryCoarseTimer", Qt::VeryCoarseTimer)
        .export_values()
        ;

    bp::enum_< Qt::ToolBarArea>("ToolBarArea")
        .value("LeftToolBarArea", Qt::LeftToolBarArea)
        .value("RightToolBarArea", Qt::RightToolBarArea)
        .value("TopToolBarArea", Qt::TopToolBarArea)
        .value("BottomToolBarArea", Qt::BottomToolBarArea)
        .value("ToolBarArea_Mask", Qt::ToolBarArea_Mask)
        .value("AllToolBarAreas", Qt::AllToolBarAreas)
        .value("NoToolBarArea", Qt::NoToolBarArea)
        .export_values()
        ;

    bp::enum_< Qt::ToolBarAreaSizes>("ToolBarAreaSizes")
        .value("NToolBarAreas", Qt::NToolBarAreas)
        .export_values()
        ;

    bp::enum_< Qt::ToolButtonStyle>("ToolButtonStyle")
        .value("ToolButtonIconOnly", Qt::ToolButtonIconOnly)
        .value("ToolButtonTextOnly", Qt::ToolButtonTextOnly)
        .value("ToolButtonTextBesideIcon", Qt::ToolButtonTextBesideIcon)
        .value("ToolButtonTextUnderIcon", Qt::ToolButtonTextUnderIcon)
        .value("ToolButtonFollowStyle", Qt::ToolButtonFollowStyle)
        .export_values()
        ;

    bp::enum_< Qt::TouchPointState>("TouchPointState")
        .value("TouchPointPressed", Qt::TouchPointPressed)
        .value("TouchPointMoved", Qt::TouchPointMoved)
        .value("TouchPointStationary", Qt::TouchPointStationary)
        .value("TouchPointReleased", Qt::TouchPointReleased)
        .export_values()
        ;

    bp::enum_< Qt::TransformationMode>("TransformationMode")
        .value("FastTransformation", Qt::FastTransformation)
        .value("SmoothTransformation", Qt::SmoothTransformation)
        .export_values()
        ;

    bp::enum_< Qt::UIEffect>("UIEffect")
        .value("UI_General", Qt::UI_General)
        .value("UI_AnimateMenu", Qt::UI_AnimateMenu)
        .value("UI_FadeMenu", Qt::UI_FadeMenu)
        .value("UI_AnimateCombo", Qt::UI_AnimateCombo)
        .value("UI_AnimateTooltip", Qt::UI_AnimateTooltip)
        .value("UI_FadeTooltip", Qt::UI_FadeTooltip)
        .value("UI_AnimateToolBox", Qt::UI_AnimateToolBox)
        .export_values()
        ;

    bp::enum_< Qt::WhiteSpaceMode>("WhiteSpaceMode")
        .value("WhiteSpaceNormal", Qt::WhiteSpaceNormal)
        .value("WhiteSpacePre", Qt::WhiteSpacePre)
        .value("WhiteSpaceNoWrap", Qt::WhiteSpaceNoWrap)
        .value("WhiteSpaceModeUndefined", Qt::WhiteSpaceModeUndefined)
        .export_values()
        ;

    bp::enum_< Qt::WidgetAttribute>("WidgetAttribute")
        .value("WA_Disabled", Qt::WA_Disabled)
        .value("WA_UnderMouse", Qt::WA_UnderMouse)
        .value("WA_MouseTracking", Qt::WA_MouseTracking)
        .value("WA_ContentsPropagated", Qt::WA_ContentsPropagated)
        .value("WA_OpaquePaintEvent", Qt::WA_OpaquePaintEvent)
        .value("WA_NoBackground", Qt::WA_NoBackground)
        .value("WA_StaticContents", Qt::WA_StaticContents)
        .value("WA_LaidOut", Qt::WA_LaidOut)
        .value("WA_PaintOnScreen", Qt::WA_PaintOnScreen)
        .value("WA_NoSystemBackground", Qt::WA_NoSystemBackground)
        .value("WA_UpdatesDisabled", Qt::WA_UpdatesDisabled)
        .value("WA_Mapped", Qt::WA_Mapped)
        .value("WA_MacNoClickThrough", Qt::WA_MacNoClickThrough)
        .value("WA_InputMethodEnabled", Qt::WA_InputMethodEnabled)
        .value("WA_WState_Visible", Qt::WA_WState_Visible)
        .value("WA_WState_Hidden", Qt::WA_WState_Hidden)
        .value("WA_ForceDisabled", Qt::WA_ForceDisabled)
        .value("WA_KeyCompression", Qt::WA_KeyCompression)
        .value("WA_PendingMoveEvent", Qt::WA_PendingMoveEvent)
        .value("WA_PendingResizeEvent", Qt::WA_PendingResizeEvent)
        .value("WA_SetPalette", Qt::WA_SetPalette)
        .value("WA_SetFont", Qt::WA_SetFont)
        .value("WA_SetCursor", Qt::WA_SetCursor)
        .value("WA_NoChildEventsFromChildren", Qt::WA_NoChildEventsFromChildren)
        .value("WA_WindowModified", Qt::WA_WindowModified)
        .value("WA_Resized", Qt::WA_Resized)
        .value("WA_Moved", Qt::WA_Moved)
        .value("WA_PendingUpdate", Qt::WA_PendingUpdate)
        .value("WA_InvalidSize", Qt::WA_InvalidSize)
        .value("WA_MacBrushedMetal", Qt::WA_MacBrushedMetal)
        .value("WA_MacMetalStyle", Qt::WA_MacMetalStyle)
        .value("WA_CustomWhatsThis", Qt::WA_CustomWhatsThis)
        .value("WA_LayoutOnEntireRect", Qt::WA_LayoutOnEntireRect)
        .value("WA_OutsideWSRange", Qt::WA_OutsideWSRange)
        .value("WA_GrabbedShortcut", Qt::WA_GrabbedShortcut)
        .value("WA_TransparentForMouseEvents", Qt::WA_TransparentForMouseEvents)
        .value("WA_PaintUnclipped", Qt::WA_PaintUnclipped)
        .value("WA_SetWindowIcon", Qt::WA_SetWindowIcon)
        .value("WA_NoMouseReplay", Qt::WA_NoMouseReplay)
        .value("WA_DeleteOnClose", Qt::WA_DeleteOnClose)
        .value("WA_RightToLeft", Qt::WA_RightToLeft)
        .value("WA_SetLayoutDirection", Qt::WA_SetLayoutDirection)
        .value("WA_NoChildEventsForParent", Qt::WA_NoChildEventsForParent)
        .value("WA_ForceUpdatesDisabled", Qt::WA_ForceUpdatesDisabled)
        .value("WA_WState_Created", Qt::WA_WState_Created)
        .value("WA_WState_CompressKeys", Qt::WA_WState_CompressKeys)
        .value("WA_WState_InPaintEvent", Qt::WA_WState_InPaintEvent)
        .value("WA_WState_Reparented", Qt::WA_WState_Reparented)
        .value("WA_WState_ConfigPending", Qt::WA_WState_ConfigPending)
        .value("WA_WState_Polished", Qt::WA_WState_Polished)
        .value("WA_WState_DND", Qt::WA_WState_DND)
        .value("WA_WState_OwnSizePolicy", Qt::WA_WState_OwnSizePolicy)
        .value("WA_WState_ExplicitShowHide", Qt::WA_WState_ExplicitShowHide)
        .value("WA_ShowModal", Qt::WA_ShowModal)
        .value("WA_MouseNoMask", Qt::WA_MouseNoMask)
        .value("WA_GroupLeader", Qt::WA_GroupLeader)
        .value("WA_NoMousePropagation", Qt::WA_NoMousePropagation)
        .value("WA_Hover", Qt::WA_Hover)
        .value("WA_InputMethodTransparent", Qt::WA_InputMethodTransparent)
        .value("WA_QuitOnClose", Qt::WA_QuitOnClose)
        .value("WA_KeyboardFocusChange", Qt::WA_KeyboardFocusChange)
        .value("WA_AcceptDrops", Qt::WA_AcceptDrops)
        .value("WA_DropSiteRegistered", Qt::WA_DropSiteRegistered)
        .value("WA_ForceAcceptDrops", Qt::WA_ForceAcceptDrops)
        .value("WA_WindowPropagation", Qt::WA_WindowPropagation)
        .value("WA_NoX11EventCompression", Qt::WA_NoX11EventCompression)
        .value("WA_TintedBackground", Qt::WA_TintedBackground)
        .value("WA_X11OpenGLOverlay", Qt::WA_X11OpenGLOverlay)
        .value("WA_AlwaysShowToolTips", Qt::WA_AlwaysShowToolTips)
        .value("WA_MacOpaqueSizeGrip", Qt::WA_MacOpaqueSizeGrip)
        .value("WA_SetStyle", Qt::WA_SetStyle)
        .value("WA_SetLocale", Qt::WA_SetLocale)
        .value("WA_MacShowFocusRect", Qt::WA_MacShowFocusRect)
        .value("WA_MacNormalSize", Qt::WA_MacNormalSize)
        .value("WA_MacSmallSize", Qt::WA_MacSmallSize)
        .value("WA_MacMiniSize", Qt::WA_MacMiniSize)
        .value("WA_LayoutUsesWidgetRect", Qt::WA_LayoutUsesWidgetRect)
        .value("WA_StyledBackground", Qt::WA_StyledBackground)
        .value("WA_MSWindowsUseDirect3D", Qt::WA_MSWindowsUseDirect3D)
        .value("WA_CanHostQMdiSubWindowTitleBar", Qt::WA_CanHostQMdiSubWindowTitleBar)
        .value("WA_MacAlwaysShowToolWindow", Qt::WA_MacAlwaysShowToolWindow)
        .value("WA_StyleSheet", Qt::WA_StyleSheet)
        .value("WA_ShowWithoutActivating", Qt::WA_ShowWithoutActivating)
        .value("WA_X11BypassTransientForHint", Qt::WA_X11BypassTransientForHint)
        .value("WA_NativeWindow", Qt::WA_NativeWindow)
        .value("WA_DontCreateNativeAncestors", Qt::WA_DontCreateNativeAncestors)
        .value("WA_MacVariableSize", Qt::WA_MacVariableSize)
        .value("WA_DontShowOnScreen", Qt::WA_DontShowOnScreen)
        .value("WA_X11NetWmWindowTypeDesktop", Qt::WA_X11NetWmWindowTypeDesktop)
        .value("WA_X11NetWmWindowTypeDock", Qt::WA_X11NetWmWindowTypeDock)
        .value("WA_X11NetWmWindowTypeToolBar", Qt::WA_X11NetWmWindowTypeToolBar)
        .value("WA_X11NetWmWindowTypeMenu", Qt::WA_X11NetWmWindowTypeMenu)
        .value("WA_X11NetWmWindowTypeUtility", Qt::WA_X11NetWmWindowTypeUtility)
        .value("WA_X11NetWmWindowTypeSplash", Qt::WA_X11NetWmWindowTypeSplash)
        .value("WA_X11NetWmWindowTypeDialog", Qt::WA_X11NetWmWindowTypeDialog)
        .value("WA_X11NetWmWindowTypeDropDownMenu", Qt::WA_X11NetWmWindowTypeDropDownMenu)
        .value("WA_X11NetWmWindowTypePopupMenu", Qt::WA_X11NetWmWindowTypePopupMenu)
        .value("WA_X11NetWmWindowTypeToolTip", Qt::WA_X11NetWmWindowTypeToolTip)
        .value("WA_X11NetWmWindowTypeNotification", Qt::WA_X11NetWmWindowTypeNotification)
        .value("WA_X11NetWmWindowTypeCombo", Qt::WA_X11NetWmWindowTypeCombo)
        .value("WA_X11NetWmWindowTypeDND", Qt::WA_X11NetWmWindowTypeDND)
        .value("WA_MacFrameworkScaled", Qt::WA_MacFrameworkScaled)
        .value("WA_SetWindowModality", Qt::WA_SetWindowModality)
        .value("WA_WState_WindowOpacitySet", Qt::WA_WState_WindowOpacitySet)
        .value("WA_TranslucentBackground", Qt::WA_TranslucentBackground)
        .value("WA_AcceptTouchEvents", Qt::WA_AcceptTouchEvents)
        .value("WA_WState_AcceptedTouchBeginEvent", Qt::WA_WState_AcceptedTouchBeginEvent)
        .value("WA_TouchPadAcceptSingleTouchEvents", Qt::WA_TouchPadAcceptSingleTouchEvents)
        .value("WA_X11DoNotAcceptFocus", Qt::WA_X11DoNotAcceptFocus)
        .value("WA_MacNoShadow", Qt::WA_MacNoShadow)
        .value("WA_AttributeCount", Qt::WA_AttributeCount)
        .export_values()
        ;

    bp::enum_< Qt::WindowFrameSection>("WindowFrameSection")
        .value("NoSection", Qt::NoSection)
        .value("LeftSection", Qt::LeftSection)
        .value("TopLeftSection", Qt::TopLeftSection)
        .value("TopSection", Qt::TopSection)
        .value("TopRightSection", Qt::TopRightSection)
        .value("RightSection", Qt::RightSection)
        .value("BottomRightSection", Qt::BottomRightSection)
        .value("BottomSection", Qt::BottomSection)
        .value("BottomLeftSection", Qt::BottomLeftSection)
        .value("TitleBarArea", Qt::TitleBarArea)
        .export_values()
        ;

    bp::enum_< Qt::WindowModality>("WindowModality")
        .value("NonModal", Qt::NonModal)
        .value("WindowModal", Qt::WindowModal)
        .value("ApplicationModal", Qt::ApplicationModal)
        .export_values()
        ;

    bp::enum_< Qt::WindowState>("WindowState")
        .value("WindowNoState", Qt::WindowNoState)
        .value("WindowMinimized", Qt::WindowMinimized)
        .value("WindowMaximized", Qt::WindowMaximized)
        .value("WindowFullScreen", Qt::WindowFullScreen)
        .value("WindowActive", Qt::WindowActive)
        .export_values()
        ;

    bp::enum_< Qt::WindowType>("WindowType")
        .value("Widget", Qt::Widget)
        .value("Window", Qt::Window)
        .value("Dialog", Qt::Dialog)
        .value("Sheet", Qt::Sheet)
        .value("Drawer", Qt::Drawer)
        .value("Popup", Qt::Popup)
        .value("Tool", Qt::Tool)
        .value("ToolTip", Qt::ToolTip)
        .value("SplashScreen", Qt::SplashScreen)
        .value("Desktop", Qt::Desktop)
        .value("SubWindow", Qt::SubWindow)
        .value("ForeignWindow", Qt::ForeignWindow)
        .value("WindowType_Mask", Qt::WindowType_Mask)
        .value("MSWindowsFixedSizeDialogHint", Qt::MSWindowsFixedSizeDialogHint)
        .value("MSWindowsOwnDC", Qt::MSWindowsOwnDC)
        .value("BypassWindowManagerHint", Qt::BypassWindowManagerHint)
        .value("X11BypassWindowManagerHint", Qt::X11BypassWindowManagerHint)
        .value("FramelessWindowHint", Qt::FramelessWindowHint)
        .value("WindowTitleHint", Qt::WindowTitleHint)
        .value("WindowSystemMenuHint", Qt::WindowSystemMenuHint)
        .value("WindowMinimizeButtonHint", Qt::WindowMinimizeButtonHint)
        .value("WindowMaximizeButtonHint", Qt::WindowMaximizeButtonHint)
        .value("WindowMinMaxButtonsHint", Qt::WindowMinMaxButtonsHint)
        .value("WindowContextHelpButtonHint", Qt::WindowContextHelpButtonHint)
        .value("WindowShadeButtonHint", Qt::WindowShadeButtonHint)
        .value("WindowStaysOnTopHint", Qt::WindowStaysOnTopHint)
        .value("WindowTransparentForInput", Qt::WindowTransparentForInput)
        .value("WindowOverridesSystemGestures", Qt::WindowOverridesSystemGestures)
        .value("WindowDoesNotAcceptFocus", Qt::WindowDoesNotAcceptFocus)
        .value("CustomizeWindowHint", Qt::CustomizeWindowHint)
        .value("WindowStaysOnBottomHint", Qt::WindowStaysOnBottomHint)
        .value("WindowCloseButtonHint", Qt::WindowCloseButtonHint)
        .value("MacWindowToolBarButtonHint", Qt::MacWindowToolBarButtonHint)
        .value("BypassGraphicsProxyWidget", Qt::BypassGraphicsProxyWidget)
        .value("WindowOkButtonHint", Qt::WindowOkButtonHint)
        .value("WindowCancelButtonHint", Qt::WindowCancelButtonHint)
        .value("NoDropShadowWindowHint", Qt::NoDropShadowWindowHint)
        .value("WindowFullscreenButtonHint", Qt::WindowFullscreenButtonHint)
        .export_values()
        ;

    bp::enum_< std::_Ios_Fmtflags>("_Ios_Fmtflags")
        .value("_S_boolalpha", std::_S_boolalpha)
        .value("_S_dec", std::_S_dec)
        .value("_S_fixed", std::_S_fixed)
        .value("_S_hex", std::_S_hex)
        .value("_S_internal", std::_S_internal)
        .value("_S_left", std::_S_left)
        .value("_S_oct", std::_S_oct)
        .value("_S_right", std::_S_right)
        .value("_S_scientific", std::_S_scientific)
        .value("_S_showbase", std::_S_showbase)
        .value("_S_showpoint", std::_S_showpoint)
        .value("_S_showpos", std::_S_showpos)
        .value("_S_skipws", std::_S_skipws)
        .value("_S_unitbuf", std::_S_unitbuf)
        .value("_S_uppercase", std::_S_uppercase)
        .value("_S_adjustfield", std::_S_adjustfield)
        .value("_S_basefield", std::_S_basefield)
        .value("_S_floatfield", std::_S_floatfield)
        .value("_S_ios_fmtflags_end", std::_S_ios_fmtflags_end)
        .export_values()
        ;

    bp::enum_< std::_Ios_Iostate>("_Ios_Iostate")
        .value("_S_goodbit", std::_S_goodbit)
        .value("_S_badbit", std::_S_badbit)
        .value("_S_eofbit", std::_S_eofbit)
        .value("_S_failbit", std::_S_failbit)
        .value("_S_ios_iostate_end", std::_S_ios_iostate_end)
        .export_values()
        ;

    bp::enum_< std::_Ios_Openmode>("_Ios_Openmode")
        .value("_S_app", std::_S_app)
        .value("_S_ate", std::_S_ate)
        .value("_S_bin", std::_S_bin)
        .value("_S_in", std::_S_in)
        .value("_S_out", std::_S_out)
        .value("_S_trunc", std::_S_trunc)
        .value("_S_ios_openmode_end", std::_S_ios_openmode_end)
        .export_values()
        ;

    bp::enum_< std::_Ios_Seekdir>("_Ios_Seekdir")
        .value("_S_beg", std::_S_beg)
        .value("_S_cur", std::_S_cur)
        .value("_S_end", std::_S_end)
        .value("_S_ios_seekdir_end", std::_S_ios_seekdir_end)
        .export_values()
        ;

    bp::enum_< std::float_denorm_style>("float_denorm_style")
        .value("denorm_indeterminate", std::denorm_indeterminate)
        .value("denorm_absent", std::denorm_absent)
        .value("denorm_present", std::denorm_present)
        .export_values()
        ;

    bp::enum_< std::float_round_style>("float_round_style")
        .value("round_indeterminate", std::round_indeterminate)
        .value("round_toward_zero", std::round_toward_zero)
        .value("round_to_nearest", std::round_to_nearest)
        .value("round_toward_infinity", std::round_toward_infinity)
        .value("round_toward_neg_infinity", std::round_toward_neg_infinity)
        .export_values()
        ;

    bp::enum_< idtype_t>("idtype_t")
        .value("P_ALL", P_ALL)
        .value("P_PID", P_PID)
        .value("P_PGID", P_PGID)
        .export_values()
        ;

}
